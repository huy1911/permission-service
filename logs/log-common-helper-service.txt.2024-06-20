[2m2024-06-20 15:21:18.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.SpringApplication              [0;39m 648 [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2024-06-20 15:21:19.504[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-20 15:21:19.504[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2024-06-20 15:21:19.568[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 58ms. Found 1 JPA repository interfaces.
[2m2024-06-20 15:21:19.583[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-20 15:21:19.584[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2m2024-06-20 15:21:19.597[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m 348 [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.lpb.mid.repo.UserRepositorys. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2024-06-20 15:21:19.598[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
[2m2024-06-20 15:21:19.861[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m 295 [2m:[0;39m BeanFactory id=a6a13df1-c7f9-3e20-a831-797d87db0177
[2m2024-06-20 15:21:20.480[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 108 [2m:[0;39m Tomcat initialized with port(s): 12389 (http)
[2m2024-06-20 15:21:20.490[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting service [Tomcat]
[2m2024-06-20 15:21:20.491[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.46]
[2m2024-06-20 15:21:20.635[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2024-06-20 15:21:20.636[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m 285 [2m:[0;39m Root WebApplicationContext: initialization completed in 2055 ms
[2m2024-06-20 15:21:21.713[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.redisson.Version                    [0;39m 43  [2m:[0;39m Redisson 3.27.1
[2m2024-06-20 15:21:22.062[0;39m [33m WARN [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.r.c.SequentialDnsAddressResolverFactory[0;39m 111 [2m:[0;39m DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher.
[2m2024-06-20 15:21:22.360[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[isson-netty-1-6][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 1 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-20 15:21:22.721[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[sson-netty-1-13][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 5 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-20 15:21:23.242[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m 361 [2m:[0;39m Building JPA container EntityManagerFactory for persistence unit 'default'
[2m2024-06-20 15:21:23.254[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m 31  [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2024-06-20 15:21:23.309[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.Version                   [0;39m 44  [2m:[0;39m HHH000412: Hibernate ORM core version 5.4.32.Final
[2m2024-06-20 15:21:23.455[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.a.c.r.java.JavaReflectionManager    [0;39m 56  [2m:[0;39m HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2m2024-06-20 15:21:23.563[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 110 [2m:[0;39m HikariPool-1 - Starting...
[2m2024-06-20 15:21:23.565[0;39m [33m WARN [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.util.DriverDataSource [0;39m 70  [2m:[0;39m Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
[2m2024-06-20 15:21:24.212[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 123 [2m:[0;39m HikariPool-1 - Start completed.
[2m2024-06-20 15:21:24.228[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.dialect.Dialect           [0;39m 175 [2m:[0;39m HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[2m2024-06-20 15:21:25.084[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m 52  [2m:[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2m2024-06-20 15:21:25.095[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.AbstractEntityManagerFactoryBean[0;39m 419 [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2024-06-20 15:21:25.199[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:21:25.243[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:21:25.244[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:21:25.245[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:21:25.287[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:21:25.288[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:21:25.357[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:21:25.358[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:21:25.359[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:21:26.188[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService 'applicationTaskExecutor'
[2m2024-06-20 15:21:26.242[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m 614 [2m:[0;39m ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2m2024-06-20 15:21:26.354[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.h.AbstractHandlerMethodMapping  [0;39m 351 [2m:[0;39m 2 mappings in 'requestMappingHandlerMapping'
[2m2024-06-20 15:21:26.390[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m 173 [2m:[0;39m Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2m2024-06-20 15:21:26.468[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.m.m.a.ExceptionHandlerExceptionResolver[0;39m 297 [2m:[0;39m ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[2m2024-06-20 15:21:27.299[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m 58  [2m:[0;39m LiveReload server is running on port 35729
[2m2024-06-20 15:21:27.764[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.e.web.EndpointLinksResolver     [0;39m 58  [2m:[0;39m Exposing 15 endpoint(s) beneath base path '/actuator'
[2m2024-06-20 15:21:27.905[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:27.958[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:27.958[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:27.958[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871687957
[2m2024-06-20 15:21:27.962[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:27.964[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:27.972[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:27.980[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:27.980[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:27.981[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871687979
[2m2024-06-20 15:21:27.981[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:27.982[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:27.986[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:27.993[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:27.994[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:27.994[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871687993
[2m2024-06-20 15:21:27.995[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:27.995[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.000[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.006[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.007[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.007[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688006
[2m2024-06-20 15:21:28.008[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.008[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.011[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.019[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.020[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.020[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688019
[2m2024-06-20 15:21:28.021[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.021[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.025[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.032[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.032[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.032[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688032
[2m2024-06-20 15:21:28.033[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.033[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.037[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.042[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.042[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.043[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688042
[2m2024-06-20 15:21:28.043[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.043[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.048[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.053[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.053[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.054[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688053
[2m2024-06-20 15:21:28.054[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.055[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.059[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.064[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.065[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.065[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688064
[2m2024-06-20 15:21:28.065[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.065[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.069[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.073[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.074[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.074[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688073
[2m2024-06-20 15:21:28.075[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.075[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.080[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.083[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.084[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.084[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688083
[2m2024-06-20 15:21:28.084[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.084[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.087[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.092[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.092[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.093[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688091
[2m2024-06-20 15:21:28.093[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.093[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.097[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.101[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.101[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.102[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688101
[2m2024-06-20 15:21:28.102[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.102[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.116[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.120[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.120[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.121[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688119
[2m2024-06-20 15:21:28.121[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.121[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.125[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.129[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.129[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.130[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688129
[2m2024-06-20 15:21:28.130[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.130[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.134[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.137[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.138[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.138[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688137
[2m2024-06-20 15:21:28.138[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.138[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.142[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.145[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.146[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.146[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688145
[2m2024-06-20 15:21:28.147[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.147[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.174[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.178[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.178[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.178[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688178
[2m2024-06-20 15:21:28.179[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.179[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.184[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.188[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.188[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.188[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688188
[2m2024-06-20 15:21:28.189[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.189[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.193[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 15:21:28.197[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:21:28.197[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:21:28.198[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871688197
[2m2024-06-20 15:21:28.198[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 15:21:28.198[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 15:21:28.223[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 220 [2m:[0;39m Tomcat started on port(s): 12389 (http) with context path ''
[2m2024-06-20 15:21:28.510[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.511[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.510[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.510[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.511[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.511[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.511[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.512[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.514[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.514[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.513[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.514[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 15:21:28.518[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.518[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.518[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.518[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.518[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.521[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.519[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.522[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.521[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.522[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.522[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.521[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.522[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.545[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.546[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.546[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.546[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.548[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.548[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.547[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 15:21:28.548[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.548[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 15:21:28.642[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.StartupInfoLogger              [0;39m 61  [2m:[0;39m Started PermissionMain in 11.359 seconds (JVM running for 12.429)
[2m2024-06-20 15:21:29.405[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[3)-10.38.21.104][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2024-06-20 15:21:29.405[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[3)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 525 [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2024-06-20 15:21:29.405[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[3)-10.38.21.104][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m 526 [2m:[0;39m Detected StandardServletMultipartResolver
[2m2024-06-20 15:21:29.427[0;39m [32mDEBUG [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[3)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 542 [2m:[0;39m enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2m2024-06-20 15:21:29.427[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[3)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 547 [2m:[0;39m Completed initialization in 22 ms
[2m2024-06-20 15:21:31.559[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.560[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.561[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.561[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.564[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Successfully joined group with generation 155
[2m2024-06-20 15:21:31.565[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.566[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.566[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.567[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Adding newly assigned partitions: check_token_send-21
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Adding newly assigned partitions: check_token_send-2
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Adding newly assigned partitions: check_token_send-18
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Adding newly assigned partitions: check_token_send-8
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Adding newly assigned partitions: check_token_send-26
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Adding newly assigned partitions: check_token_send-16
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Adding newly assigned partitions: check_token_send-5
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Adding newly assigned partitions: check_token_send-9
[2m2024-06-20 15:21:31.569[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Adding newly assigned partitions: check_token_send-27
[2m2024-06-20 15:21:31.582[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.582[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Adding newly assigned partitions: check_token_send-14
[2m2024-06-20 15:21:31.582[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.583[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.583[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.586[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 15:21:31.587[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 15:21:31.604[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Setting offset for partition check_token_send-2 to the committed offset FetchPosition{offset=531, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.604[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Setting offset for partition check_token_send-5 to the committed offset FetchPosition{offset=589, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.604[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Setting offset for partition check_token_send-14 to the committed offset FetchPosition{offset=556, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.604[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Setting offset for partition check_token_send-9 to the committed offset FetchPosition{offset=573, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.604[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Setting offset for partition check_token_send-8 to the committed offset FetchPosition{offset=585, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.605[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-5]
[2m2024-06-20 15:21:31.606[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-8]
[2m2024-06-20 15:21:31.606[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-14]
[2m2024-06-20 15:21:31.606[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-2]
[2m2024-06-20 15:21:31.606[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-9]
[2m2024-06-20 15:21:31.824[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Setting offset for partition check_token_send-16 to the committed offset FetchPosition{offset=555, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.824[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Setting offset for partition check_token_send-21 to the committed offset FetchPosition{offset=549, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.824[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Setting offset for partition check_token_send-26 to the committed offset FetchPosition{offset=516, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.825[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Setting offset for partition check_token_send-27 to the committed offset FetchPosition{offset=570, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.825[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-16]
[2m2024-06-20 15:21:31.825[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-26]
[2m2024-06-20 15:21:31.825[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-27]
[2m2024-06-20 15:21:31.825[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-21]
[2m2024-06-20 15:21:31.828[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Setting offset for partition check_token_send-18 to the committed offset FetchPosition{offset=578, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-20 15:21:31.828[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-18]
[2m2024-06-20 15:23:04.249[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 516, CreateTime = 1718871763464, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 53, 49, 97, 98, 99, 53, 102, 45, 100, 99, 51, 54, 45, 52, 97, 57, 54, 45, 97, 102, 49, 99, 45, 51, 100, 57, 55, 53, 97, 54, 55, 53, 100, 49, 100]), RecordHeader(key = kafka_correlationId, value = [-70, -71, -31, 20, -59, -80, 73, 93, -76, 105, 112, -68, 111, 27, 124, 89]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2443b75d1f-8be7-4265-b906-5a7dece3a587, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 15:23:04.259[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 15:23:04.316[0;39m [32mDEBUG [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:23:04.459[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    5947400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    16955400 nanoseconds spent preparing 1 JDBC statements;
    9066500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:23:04.492[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122190, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:23:04.497[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2443b75d1f-8be7-4265-b906-5a7dece3a587
[2m2024-06-20 15:23:04.525[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 3000000
	max.in.flight.requests.per.connection = 5
	max.request.size = 20971520
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 3000000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

[2m2024-06-20 15:23:04.528[0;39m [33m WARN [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.clients.producer.KafkaProducer    [0;39m 499 [2m:[0;39m [Producer clientId=producer-1] delivery.timeout.ms should be equal to or larger than linger.ms + request.timeout.ms. Setting it to 3000000.
[2m2024-06-20 15:23:04.545[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 15:23:04.546[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 15:23:04.546[0;39m [32m INFO [,f41ab83d4c9277a4a320ba4a7aad4359,685c00e860a6945d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718871784544
[2m2024-06-20 15:23:04.579[0;39m [32m INFO [,,,][0;39m [35m3552[0;39m [2m---[0;39m [2m[ad | producer-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Producer clientId=producer-1] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 15:23:06.991[0;39m [32m INFO [,bbe62e1823cd322e270d4a8ca09bec0a,1972c05d233688ab,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 556, CreateTime = 1718871766216, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 56, 100, 97, 56, 51, 99, 99, 45, 55, 55, 49, 50, 45, 52, 50, 49, 50, 45, 97, 56, 101, 57, 45, 49, 56, 99, 51, 52, 57, 49, 51, 101, 54, 56, 52]), RecordHeader(key = kafka_correlationId, value = [65, 7, -32, 70, 110, 29, 76, -122, -82, -127, 7, -113, 27, -81, 11, 54]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241a6e1b67-3d9c-48da-b13c-880b9ba8457e, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 15:23:06.992[0;39m [32m INFO [,bbe62e1823cd322e270d4a8ca09bec0a,1972c05d233688ab,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 15:23:07.004[0;39m [32m INFO [,bbe62e1823cd322e270d4a8ca09bec0a,1972c05d233688ab,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241a6e1b67-3d9c-48da-b13c-880b9ba8457e
[2m2024-06-20 15:23:53.009[0;39m [32m INFO [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 578, CreateTime = 1718871812235, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 49, 53, 98, 56, 101, 99, 52, 45, 51, 57, 50, 53, 45, 52, 49, 97, 102, 45, 97, 52, 55, 55, 45, 54, 98, 55, 51, 50, 48, 56, 50, 55, 52, 102, 97]), RecordHeader(key = kafka_correlationId, value = [60, -57, 42, -106, -114, -15, 69, 44, -121, -99, -83, -11, 36, -101, -37, 113]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243c2b329a-ff5a-4fc3-a840-c6ad2261a116, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-20 15:23:53.012[0;39m [32m INFO [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-20 15:23:53.019[0;39m [32mDEBUG [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:23:53.034[0;39m [32m INFO [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    5561000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    5867400 nanoseconds spent preparing 1 JDBC statements;
    6042200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:23:53.041[0;39m [32m INFO [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=200852389, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:23:53.042[0;39m [32m INFO [,8bfaeb48e3328523f9316fc70d92d7ab,db7138e17cb647f0,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243c2b329a-ff5a-4fc3-a840-c6ad2261a116
[2m2024-06-20 15:24:46.144[0;39m [32m INFO [,0c9c2fda1e340a0e7943f806928d6bc4,ecaf744cf668f05f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 557, CreateTime = 1718871865372, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 52, 97, 100, 52, 53, 97, 52, 45, 100, 100, 54, 102, 45, 52, 49, 102, 48, 45, 97, 50, 53, 98, 45, 99, 55, 50, 101, 56, 56, 51, 101, 98, 98, 50, 97]), RecordHeader(key = kafka_correlationId, value = [-68, 25, -97, 118, 45, 39, 74, 70, -128, -79, -89, -40, -73, 126, 65, -99]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c1b6d5a3-2986-4a05-b70f-344ae3c0c2aa, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 15:24:46.146[0;39m [32m INFO [,0c9c2fda1e340a0e7943f806928d6bc4,ecaf744cf668f05f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 15:24:46.157[0;39m [32m INFO [,0c9c2fda1e340a0e7943f806928d6bc4,ecaf744cf668f05f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c1b6d5a3-2986-4a05-b70f-344ae3c0c2aa
[2m2024-06-20 15:25:02.351[0;39m [32m INFO [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 555, CreateTime = 1718871902285, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 98, 102, 50, 57, 55, 51, 54, 45, 57, 54, 102, 100, 45, 52, 57, 98, 55, 45, 57, 101, 102, 101, 45, 57, 54, 53, 48, 52, 98, 102, 50, 56, 54, 102, 97]), RecordHeader(key = kafka_correlationId, value = [-80, -29, -69, -60, -115, 41, 67, -111, -83, 65, -75, 40, 114, -96, -64, 107]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd9c17c745-790d-4cd3-bb1b-60c736c5f894, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 15:25:02.353[0;39m [32m INFO [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 15:25:02.361[0;39m [32mDEBUG [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:25:02.377[0;39m [32m INFO [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    7978100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8318000 nanoseconds spent preparing 1 JDBC statements;
    5064100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:25:02.386[0;39m [32m INFO [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=scan_cccd, appId=984999489, customerNo=null, whiteListIp=null, branchCode=null, secretKey=wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o=)
[2m2024-06-20 15:25:02.388[0;39m [32m INFO [,0b79ad0004196401,48488d9f10bf11a7,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd9c17c745-790d-4cd3-bb1b-60c736c5f894
[2m2024-06-20 15:26:37.736[0;39m [32m INFO [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 549, CreateTime = 1718871976964, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 99, 99, 57, 102, 57, 99, 101, 45, 56, 57, 97, 101, 45, 52, 50, 97, 54, 45, 98, 55, 57, 98, 45, 97, 98, 51, 52, 98, 56, 56, 51, 102, 50, 98, 99]), RecordHeader(key = kafka_correlationId, value = [39, 27, 89, -15, 52, -36, 68, 93, -80, 58, 44, 118, -121, -90, 94, -13]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c17852e8-56d2-4337-a61b-205a65349441, value = {"customerNo":"300828858","username":"lv24"})
[2m2024-06-20 15:26:37.737[0;39m [32m INFO [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=300828858, username=lv24)
[2m2024-06-20 15:26:37.745[0;39m [32mDEBUG [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:26:37.759[0;39m [32m INFO [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    6775600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    6877700 nanoseconds spent preparing 1 JDBC statements;
    6238800 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:26:37.766[0;39m [32m INFO [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=300828858, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:26:37.767[0;39m [32m INFO [,64536b23dbf7bd8e871a7646bb5402e4,ba4e8ac25d7125b3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"300828858","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c17852e8-56d2-4337-a61b-205a65349441
[2m2024-06-20 15:26:52.178[0;39m [32m INFO [,22899748492328fd,ec979c866716ea42,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 570, CreateTime = 1718872012169, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 57, 98, 97, 97, 97, 48, 53, 45, 97, 52, 98, 51, 45, 52, 101, 49, 98, 45, 56, 48, 55, 54, 45, 54, 56, 50, 97, 51, 54, 102, 97, 97, 99, 102, 49]), RecordHeader(key = kafka_correlationId, value = [8, -55, -26, 61, -126, 79, 70, -105, -113, -58, 7, -4, 126, 7, -34, -34]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2408f4f78a-9d6b-4a8f-8a69-8fa8290a5344, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 15:26:52.179[0;39m [32m INFO [,22899748492328fd,ec979c866716ea42,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 15:26:52.194[0;39m [32m INFO [,22899748492328fd,ec979c866716ea42,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2408f4f78a-9d6b-4a8f-8a69-8fa8290a5344
[2m2024-06-20 15:28:45.479[0;39m [32m INFO [,74edc0af2d1c35b751732190adae1cfd,b79c9f2ae5bb9102,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 558, CreateTime = 1718872104707, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 49, 102, 54, 52, 101, 51, 56, 45, 56, 50, 97, 102, 45, 52, 52, 100, 48, 45, 57, 57, 48, 101, 45, 51, 54, 50, 55, 54, 100, 56, 53, 54, 53, 98, 97]), RecordHeader(key = kafka_correlationId, value = [-93, -51, -85, 94, -39, 107, 70, 59, -80, 49, -99, -76, -119, -2, 33, 12]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ac20bbb2-3355-4734-a619-614242c6fe96, value = {"customerNo":"300828858","username":"lv24"})
[2m2024-06-20 15:28:45.483[0;39m [32m INFO [,74edc0af2d1c35b751732190adae1cfd,b79c9f2ae5bb9102,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=300828858, username=lv24)
[2m2024-06-20 15:28:45.493[0;39m [32m INFO [,74edc0af2d1c35b751732190adae1cfd,b79c9f2ae5bb9102,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"300828858","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ac20bbb2-3355-4734-a619-614242c6fe96
[2m2024-06-20 15:29:41.678[0;39m [32m INFO [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 579, CreateTime = 1718872160907, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 53, 48, 49, 48, 54, 52, 99, 45, 52, 101, 55, 54, 45, 52, 56, 53, 56, 45, 97, 56, 52, 50, 45, 50, 51, 54, 57, 53, 102, 51, 48, 100, 99, 52, 51]), RecordHeader(key = kafka_correlationId, value = [35, -83, -86, 89, 57, 5, 68, -4, -74, -54, -20, 30, -50, 10, 80, 122]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c30367d0-2409-497d-bf3c-0e54f1d67afe, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 15:29:41.681[0;39m [32m INFO [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 15:29:41.689[0;39m [32mDEBUG [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:29:41.701[0;39m [32m INFO [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    5206400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    5385600 nanoseconds spent preparing 1 JDBC statements;
    5037900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:29:41.707[0;39m [32m INFO [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122147, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:29:41.708[0;39m [32m INFO [,d7b6f3eb1c7689535f1e50129768c056,69b3d56c7b87415b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c30367d0-2409-497d-bf3c-0e54f1d67afe
[2m2024-06-20 15:32:58.986[0;39m [32m INFO [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 517, CreateTime = 1718872358214, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 48, 53, 100, 99, 100, 97, 50, 45, 55, 102, 48, 101, 45, 52, 54, 53, 97, 45, 56, 49, 101, 50, 45, 54, 50, 48, 49, 48, 101, 54, 97, 54, 52, 48, 57]), RecordHeader(key = kafka_correlationId, value = [109, -93, 126, 105, 55, 100, 68, 105, -116, -36, 75, -26, -9, -99, -32, -93]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24168e08fe-6831-4b8c-9d77-e33fe814aaf1, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 15:32:58.990[0;39m [32m INFO [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 15:32:58.998[0;39m [32mDEBUG [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:32:59.030[0;39m [32m INFO [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    12866300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    13287900 nanoseconds spent preparing 1 JDBC statements;
    14683000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:32:59.044[0;39m [32m INFO [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203121840, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:32:59.047[0;39m [32m INFO [,651daa26bcce5f83154098140d694926,34ac7b3f40f1e16f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24168e08fe-6831-4b8c-9d77-e33fe814aaf1
[2m2024-06-20 15:33:21.085[0;39m [32m INFO [,ad6381d7b9416bb2452ed73732ed1a6f,20f7e5aad8af2089,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 585, CreateTime = 1718872380313, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 51, 100, 101, 50, 51, 57, 49, 45, 56, 49, 48, 51, 45, 52, 49, 100, 50, 45, 56, 101, 57, 52, 45, 50, 49, 54, 97, 98, 97, 51, 102, 51, 49, 102, 55]), RecordHeader(key = kafka_correlationId, value = [39, 90, 44, 25, 85, 39, 77, 86, -121, 99, 50, -75, -87, -35, -11, 81]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2420415e99-8186-49a4-8c84-c56c14d0036a, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 15:33:21.088[0;39m [32m INFO [,ad6381d7b9416bb2452ed73732ed1a6f,20f7e5aad8af2089,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 15:33:21.096[0;39m [32m INFO [,ad6381d7b9416bb2452ed73732ed1a6f,20f7e5aad8af2089,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2420415e99-8186-49a4-8c84-c56c14d0036a
[2m2024-06-20 15:34:59.946[0;39m [32m INFO [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 589, CreateTime = 1718872479174, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 102, 98, 48, 53, 54, 100, 49, 45, 98, 100, 51, 97, 45, 52, 50, 56, 101, 45, 56, 102, 100, 57, 45, 48, 50, 50, 57, 102, 51, 101, 102, 98, 100, 98, 57]), RecordHeader(key = kafka_correlationId, value = [-17, -127, -120, 78, 101, 112, 77, -38, -106, 73, -119, -37, 102, -122, -111, -37]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247c7324a7-9ac4-4c11-b6a3-d26d01c344da, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:34:59.949[0;39m [32m INFO [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:34:59.955[0;39m [32mDEBUG [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:34:59.969[0;39m [32m INFO [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    5916100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    6068500 nanoseconds spent preparing 1 JDBC statements;
    5612900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:34:59.976[0;39m [32m INFO [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122170, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:34:59.978[0;39m [32m INFO [,7e425f4bbb58a6cca0a63d45471fcca5,2ce92098a0fe2897,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247c7324a7-9ac4-4c11-b6a3-d26d01c344da
[2m2024-06-20 15:35:09.288[0;39m [32m INFO [,64aa82d80ce3af2bec013b4e5b715d0d,d9da9e4c18ad04e4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 531, CreateTime = 1718872488520, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 53, 101, 51, 57, 98, 52, 54, 45, 50, 51, 50, 100, 45, 52, 100, 101, 55, 45, 97, 100, 100, 49, 45, 56, 56, 98, 54, 48, 99, 55, 101, 98, 51, 55, 51]), RecordHeader(key = kafka_correlationId, value = [77, 28, 77, -127, 105, 115, 71, -75, -89, -53, -115, -90, -24, -2, 8, 47]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f3b2659f-a01c-476f-ba50-4ca84827ea9f, value = {"customerNo":"111607801","username":"lv24"})
[2m2024-06-20 15:35:09.291[0;39m [32m INFO [,64aa82d80ce3af2bec013b4e5b715d0d,d9da9e4c18ad04e4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111607801, username=lv24)
[2m2024-06-20 15:35:09.299[0;39m [32m INFO [,64aa82d80ce3af2bec013b4e5b715d0d,d9da9e4c18ad04e4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111607801","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f3b2659f-a01c-476f-ba50-4ca84827ea9f
[2m2024-06-20 15:40:52.836[0;39m [32m INFO [,fd90cabd93a908976542e310b3472a10,f30db7946397f7a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 518, CreateTime = 1718872832070, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 52, 52, 48, 101, 49, 97, 52, 45, 51, 102, 54, 51, 45, 52, 52, 48, 57, 45, 97, 55, 100, 50, 45, 57, 56, 53, 50, 57, 52, 56, 49, 100, 48, 100, 99]), RecordHeader(key = kafka_correlationId, value = [-8, 20, 36, 43, 82, -80, 66, -101, -110, -88, 28, 46, 118, -110, -72, 32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248221590a-3b9b-4ccc-9596-929f71d69159, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 15:40:52.838[0;39m [32m INFO [,fd90cabd93a908976542e310b3472a10,f30db7946397f7a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 15:40:52.846[0;39m [32m INFO [,fd90cabd93a908976542e310b3472a10,f30db7946397f7a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248221590a-3b9b-4ccc-9596-929f71d69159
[2m2024-06-20 15:40:53.615[0;39m [32m INFO [,4fa7e1a9b97b4575185b307e7c829e42,65dce97e1582e2db,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 571, CreateTime = 1718872832843, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 99, 55, 55, 56, 99, 57, 102, 45, 100, 101, 49, 50, 45, 52, 48, 102, 101, 45, 57, 53, 57, 99, 45, 56, 51, 98, 54, 102, 102, 99, 55, 102, 50, 99, 54]), RecordHeader(key = kafka_correlationId, value = [-57, 14, -47, -9, 0, -94, 70, -10, -70, 73, 49, -30, 6, 89, 71, -90]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2453f4ec07-7ea8-420b-af45-f0223a12ebb1, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 15:40:53.617[0;39m [32m INFO [,4fa7e1a9b97b4575185b307e7c829e42,65dce97e1582e2db,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 15:40:53.630[0;39m [32m INFO [,4fa7e1a9b97b4575185b307e7c829e42,65dce97e1582e2db,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2453f4ec07-7ea8-420b-af45-f0223a12ebb1
[2m2024-06-20 15:41:25.517[0;39m [32m INFO [,3674efcce70d93d2083620fbd001638b,cdf95c06806271e9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 556, CreateTime = 1718872864742, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 55, 102, 48, 54, 56, 98, 53, 45, 97, 97, 57, 97, 45, 52, 54, 48, 97, 45, 97, 49, 53, 98, 45, 97, 53, 100, 101, 49, 101, 50, 102, 97, 48, 57, 100]), RecordHeader(key = kafka_correlationId, value = [40, 109, -64, -121, 9, 0, 75, -19, -100, 64, 72, 65, 13, 0, 56, -62]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ff1a5ad1-e134-4e20-8fef-b81af07f5b00, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:41:25.519[0;39m [32m INFO [,3674efcce70d93d2083620fbd001638b,cdf95c06806271e9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:41:25.536[0;39m [32m INFO [,3674efcce70d93d2083620fbd001638b,cdf95c06806271e9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ff1a5ad1-e134-4e20-8fef-b81af07f5b00
[2m2024-06-20 15:42:29.772[0;39m [32m INFO [,47fd3266835d0f86,400db804a1a6731d,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 550, CreateTime = 1718872948834, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 98, 52, 51, 57, 101, 48, 50, 45, 56, 102, 53, 102, 45, 52, 53, 49, 51, 45, 56, 48, 57, 98, 45, 52, 51, 98, 101, 55, 49, 54, 99, 51, 56, 99, 102]), RecordHeader(key = kafka_correlationId, value = [69, -34, 64, 20, -5, 120, 68, -85, -111, -109, -44, -7, 84, 32, 120, 88]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24dd16c4f6-e13b-4f6d-a463-bfe6bbf7b32a, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 15:42:29.773[0;39m [32m INFO [,47fd3266835d0f86,400db804a1a6731d,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 15:42:29.789[0;39m [32m INFO [,47fd3266835d0f86,400db804a1a6731d,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24dd16c4f6-e13b-4f6d-a463-bfe6bbf7b32a
[2m2024-06-20 15:43:59.538[0;39m [32m INFO [,75aa1914207b78dd83db3907b3887d87,07e2ff91a91504f5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 580, CreateTime = 1718873018772, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 48, 97, 52, 57, 52, 49, 53, 45, 53, 52, 51, 56, 45, 52, 55, 97, 102, 45, 98, 51, 49, 49, 45, 102, 51, 49, 52, 53, 101, 56, 50, 97, 55, 102, 101]), RecordHeader(key = kafka_correlationId, value = [-40, 116, -91, 61, -53, -16, 77, -121, -86, 123, -20, 52, -91, 2, -77, 98]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2475421f27-00ff-4038-860b-68e0572af754, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:43:59.539[0;39m [32m INFO [,75aa1914207b78dd83db3907b3887d87,07e2ff91a91504f5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:43:59.546[0;39m [32m INFO [,75aa1914207b78dd83db3907b3887d87,07e2ff91a91504f5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2475421f27-00ff-4038-860b-68e0572af754
[2m2024-06-20 15:44:27.012[0;39m [32m INFO [,a4945965e2667e0b0f8a6e4f65a932c8,1acd5fbf5f902e05,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 573, CreateTime = 1718873046238, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 98, 57, 48, 55, 51, 50, 54, 45, 57, 48, 53, 52, 45, 52, 101, 101, 102, 45, 98, 99, 102, 50, 45, 98, 97, 102, 102, 101, 55, 57, 99, 98, 49, 99, 55]), RecordHeader(key = kafka_correlationId, value = [65, 89, -26, 104, -113, 118, 65, -6, -122, -84, -120, 66, -33, 116, 3, -89]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240b6428f0-bbaf-4f9d-ac76-721a7a28ddda, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 15:44:27.016[0;39m [32m INFO [,a4945965e2667e0b0f8a6e4f65a932c8,1acd5fbf5f902e05,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 15:44:27.028[0;39m [32m INFO [,a4945965e2667e0b0f8a6e4f65a932c8,1acd5fbf5f902e05,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240b6428f0-bbaf-4f9d-ac76-721a7a28ddda
[2m2024-06-20 15:44:51.319[0;39m [32m INFO [,9bf5c809720b62397536de2ddb787456,e242848c62896a8f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 590, CreateTime = 1718873070555, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 49, 99, 55, 98, 55, 102, 102, 45, 98, 102, 57, 51, 45, 52, 53, 97, 97, 45, 57, 56, 102, 100, 45, 98, 56, 100, 49, 97, 50, 52, 56, 51, 48, 101, 100]), RecordHeader(key = kafka_correlationId, value = [90, 31, 117, -60, 107, 55, 67, 19, -123, -58, -20, 9, 126, -36, -58, -4]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2468cb68ea-1e19-4e58-8ff1-0a908a81df25, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 15:44:51.320[0;39m [32m INFO [,9bf5c809720b62397536de2ddb787456,e242848c62896a8f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 15:44:51.328[0;39m [32m INFO [,9bf5c809720b62397536de2ddb787456,e242848c62896a8f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2468cb68ea-1e19-4e58-8ff1-0a908a81df25
[2m2024-06-20 15:45:11.522[0;39m [32m INFO [,a3c4662fea37b137,d538b77bb4e3e064,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 519, CreateTime = 1718873111504, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 100, 97, 56, 55, 51, 100, 99, 45, 102, 101, 50, 99, 45, 52, 48, 53, 102, 45, 98, 53, 53, 99, 45, 52, 99, 98, 48, 97, 57, 54, 48, 100, 57, 100, 102]), RecordHeader(key = kafka_correlationId, value = [-84, -77, -22, -97, -30, -90, 79, 41, -100, 113, -63, -26, 55, 57, -49, -6]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24617f55dc-2cf1-41e9-bfb3-0809cdf48106, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 15:45:11.524[0;39m [32m INFO [,a3c4662fea37b137,d538b77bb4e3e064,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 15:45:11.530[0;39m [32m INFO [,a3c4662fea37b137,d538b77bb4e3e064,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24617f55dc-2cf1-41e9-bfb3-0809cdf48106
[2m2024-06-20 15:45:14.850[0;39m [32m INFO [,089c4fe8298d86478657bc2ff66702cc,70cbd2d064c95562,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 586, CreateTime = 1718873094082, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 102, 99, 98, 56, 53, 98, 48, 45, 49, 56, 57, 49, 45, 52, 55, 97, 54, 45, 56, 56, 102, 53, 45, 53, 56, 52, 55, 51, 55, 56, 51, 52, 48, 54, 56]), RecordHeader(key = kafka_correlationId, value = [-43, -98, -76, 18, -1, 19, 70, -40, -93, 58, -62, -117, 66, 70, -17, -108]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24429b8ab8-b54a-47b0-bacc-68dcd482edf8, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 15:45:14.853[0;39m [32m INFO [,089c4fe8298d86478657bc2ff66702cc,70cbd2d064c95562,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 15:45:14.862[0;39m [32m INFO [,089c4fe8298d86478657bc2ff66702cc,70cbd2d064c95562,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24429b8ab8-b54a-47b0-bacc-68dcd482edf8
[2m2024-06-20 15:45:49.598[0;39m [32m INFO [,fb6565d5597e642d0c16285f52c83334,03ce904c6d964b7a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 587, CreateTime = 1718873128833, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 56, 52, 52, 55, 54, 48, 53, 45, 97, 48, 48, 50, 45, 52, 53, 51, 97, 45, 57, 48, 57, 52, 45, 54, 100, 50, 50, 51, 53, 50, 101, 50, 98, 97, 55]), RecordHeader(key = kafka_correlationId, value = [-92, -16, -6, -116, 101, -95, 69, -113, -86, 99, 123, 81, 102, 86, 8, 9]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2417b148aa-ad81-467d-87ec-549fb4941997, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:45:49.599[0;39m [32m INFO [,fb6565d5597e642d0c16285f52c83334,03ce904c6d964b7a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:45:49.607[0;39m [32m INFO [,fb6565d5597e642d0c16285f52c83334,03ce904c6d964b7a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2417b148aa-ad81-467d-87ec-549fb4941997
[2m2024-06-20 15:47:38.520[0;39m [32m INFO [,b8b980da22fd122599cff5304b19e728,2ea74bca0db649ce,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 532, CreateTime = 1718873237754, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 102, 99, 102, 97, 101, 99, 53, 45, 51, 51, 54, 48, 45, 52, 97, 53, 48, 45, 97, 54, 56, 51, 45, 50, 98, 52, 97, 52, 52, 102, 51, 50, 102, 102, 56]), RecordHeader(key = kafka_correlationId, value = [-21, 23, 12, -90, -47, -45, 78, -88, -76, 55, 46, -65, -84, -61, -90, -49]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2469c67f29-3c9e-4705-9445-691c0f112542, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 15:47:38.521[0;39m [32m INFO [,b8b980da22fd122599cff5304b19e728,2ea74bca0db649ce,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 15:47:38.532[0;39m [32m INFO [,b8b980da22fd122599cff5304b19e728,2ea74bca0db649ce,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2469c67f29-3c9e-4705-9445-691c0f112542
[2m2024-06-20 15:47:50.654[0;39m [32m INFO [,c322362ab90c7573e00b5115b33cd989,add07a51ce9f2727,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 591, CreateTime = 1718873249889, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 97, 53, 57, 98, 53, 48, 52, 45, 49, 49, 99, 99, 45, 52, 99, 50, 53, 45, 98, 56, 49, 56, 45, 100, 99, 52, 53, 99, 99, 54, 99, 100, 97, 99, 48]), RecordHeader(key = kafka_correlationId, value = [59, 55, 116, 8, -64, 67, 79, 79, -125, 9, -67, -46, -115, 47, 16, 43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242347436d-eaf9-4717-90e6-5e8baf45b632, value = {"customerNo":"111607801","username":"lv24"})
[2m2024-06-20 15:47:50.657[0;39m [32m INFO [,c322362ab90c7573e00b5115b33cd989,add07a51ce9f2727,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111607801, username=lv24)
[2m2024-06-20 15:47:50.669[0;39m [32m INFO [,c322362ab90c7573e00b5115b33cd989,add07a51ce9f2727,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111607801","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242347436d-eaf9-4717-90e6-5e8baf45b632
[2m2024-06-20 15:48:22.073[0;39m [32m INFO [,8076fa1ab01e91fddbb28899aecc8e6a,1a2896b41809d3c2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 551, CreateTime = 1718873281310, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 102, 54, 97, 52, 53, 57, 45, 101, 55, 57, 97, 45, 52, 54, 55, 57, 45, 97, 50, 57, 50, 45, 51, 98, 52, 56, 56, 97, 98, 97, 98, 56, 50, 57]), RecordHeader(key = kafka_correlationId, value = [-117, -15, 48, 80, 18, 87, 72, -14, -128, -32, -61, -73, 125, -51, -66, -100]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2474b0b204-b4d4-44ca-ab5f-c229ed7537ba, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:48:22.074[0;39m [32m INFO [,8076fa1ab01e91fddbb28899aecc8e6a,1a2896b41809d3c2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:48:22.079[0;39m [32m INFO [,8076fa1ab01e91fddbb28899aecc8e6a,1a2896b41809d3c2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2474b0b204-b4d4-44ca-ab5f-c229ed7537ba
[2m2024-06-20 15:48:41.673[0;39m [32m INFO [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 592, CreateTime = 1718873300908, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 55, 55, 49, 99, 56, 102, 56, 45, 98, 102, 97, 54, 45, 52, 51, 100, 55, 45, 56, 101, 56, 101, 45, 53, 100, 50, 51, 49, 57, 56, 53, 102, 97, 98, 53]), RecordHeader(key = kafka_correlationId, value = [102, -79, 9, -54, 102, 122, 75, 82, -89, 30, 58, -83, -54, -4, 124, 64]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2418bd2017-279b-4c43-b704-b7213bf4f2fa, value = {"customerNo":"203122188","username":"lv24"})
[2m2024-06-20 15:48:41.675[0;39m [32m INFO [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122188, username=lv24)
[2m2024-06-20 15:48:41.683[0;39m [32mDEBUG [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 15:48:41.716[0;39m [32m INFO [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    15561200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    15998600 nanoseconds spent preparing 1 JDBC statements;
    13011500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 15:48:41.727[0;39m [32m INFO [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122188, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 15:48:41.728[0;39m [32m INFO [,1e7fd063cafab2c384bc912832fdb242,071a4a66b9348a0b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122188","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2418bd2017-279b-4c43-b704-b7213bf4f2fa
[2m2024-06-20 15:48:45.267[0;39m [32m INFO [,39a193ae4fec0bb2b870c84f9a0e2e93,52a130d56a32763a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 557, CreateTime = 1718873304501, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 99, 97, 102, 48, 100, 48, 49, 45, 52, 54, 51, 56, 45, 52, 51, 99, 51, 45, 56, 57, 101, 53, 45, 49, 52, 98, 98, 57, 99, 54, 50, 101, 53, 100, 54]), RecordHeader(key = kafka_correlationId, value = [-61, 65, -122, 4, -43, 91, 67, 21, -84, -11, 14, -2, 125, -101, 120, -105]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f4ef8171-46ff-4637-98a4-8c872fc27508, value = {"customerNo":"203122188","username":"lv24"})
[2m2024-06-20 15:48:45.271[0;39m [32m INFO [,39a193ae4fec0bb2b870c84f9a0e2e93,52a130d56a32763a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122188, username=lv24)
[2m2024-06-20 15:48:45.281[0;39m [32m INFO [,39a193ae4fec0bb2b870c84f9a0e2e93,52a130d56a32763a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122188","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f4ef8171-46ff-4637-98a4-8c872fc27508
[2m2024-06-20 15:49:16.770[0;39m [32m INFO [,f8a0264229c59d566447104b80b82f78,67f56486b86b2cd6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 558, CreateTime = 1718873336005, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 52, 98, 51, 51, 97, 102, 52, 45, 49, 99, 98, 50, 45, 52, 97, 56, 99, 45, 56, 102, 54, 56, 45, 98, 52, 57, 102, 100, 51, 49, 55, 48, 99, 57, 50]), RecordHeader(key = kafka_correlationId, value = [-57, -37, 10, 98, 116, 18, 64, 39, -109, 46, -38, -37, -29, 109, 112, -104]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2489287534-f775-43a7-bc0f-7014cd2a4c64, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 15:49:16.777[0;39m [32m INFO [,f8a0264229c59d566447104b80b82f78,67f56486b86b2cd6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 15:49:16.783[0;39m [32m INFO [,f8a0264229c59d566447104b80b82f78,67f56486b86b2cd6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2489287534-f775-43a7-bc0f-7014cd2a4c64
[2m2024-06-20 15:50:58.026[0;39m [32m INFO [,cfe432107ba108626342fa579215c791,45b5c90665b50800,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 574, CreateTime = 1718873437261, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 100, 57, 100, 102, 52, 49, 102, 45, 51, 55, 97, 52, 45, 52, 57, 49, 53, 45, 97, 50, 102, 97, 45, 100, 102, 56, 99, 49, 98, 48, 56, 57, 51, 51, 98]), RecordHeader(key = kafka_correlationId, value = [-30, 28, -53, -128, 26, -19, 72, -82, -69, 123, -127, 119, -45, 72, -96, -16]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241f43562b-772b-4209-af91-f46e691afaea, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 15:50:58.026[0;39m [32m INFO [,cfe432107ba108626342fa579215c791,45b5c90665b50800,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 15:50:58.032[0;39m [32m INFO [,cfe432107ba108626342fa579215c791,45b5c90665b50800,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241f43562b-772b-4209-af91-f46e691afaea
[2m2024-06-20 15:51:02.579[0;39m [32m INFO [,220443ce421596fcfb57e8f49282bc0d,a258da6b5f679729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 520, CreateTime = 1718873441812, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 56, 54, 54, 48, 98, 48, 57, 45, 97, 102, 102, 102, 45, 52, 49, 100, 48, 45, 97, 49, 52, 57, 45, 53, 54, 97, 50, 97, 49, 56, 102, 99, 101, 98, 97]), RecordHeader(key = kafka_correlationId, value = [38, 122, -99, 56, 45, -128, 66, -70, -115, -83, -88, -39, -127, -63, -78, 72]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c4db5663-f6b8-4e21-8106-828ae1315e2c, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:51:02.580[0;39m [32m INFO [,220443ce421596fcfb57e8f49282bc0d,a258da6b5f679729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:51:02.600[0;39m [32m INFO [,220443ce421596fcfb57e8f49282bc0d,a258da6b5f679729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c4db5663-f6b8-4e21-8106-828ae1315e2c
[2m2024-06-20 15:54:49.942[0;39m [32m INFO [,75ca0b73a4220ca248412a0aeb55e55e,dd398af59cb90c3b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 575, CreateTime = 1718873669167, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 52, 100, 97, 55, 52, 55, 99, 45, 54, 101, 48, 97, 45, 52, 53, 51, 102, 45, 56, 57, 53, 49, 45, 54, 50, 55, 100, 57, 50, 51, 57, 52, 48, 102, 51]), RecordHeader(key = kafka_correlationId, value = [-56, 112, 70, 111, -21, 110, 78, 32, -123, 35, 6, 76, -44, -81, 12, -32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c5e22a02-cd61-4f7c-8b83-7cbab90b3e9b, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 15:54:49.946[0;39m [32m INFO [,75ca0b73a4220ca248412a0aeb55e55e,dd398af59cb90c3b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 15:54:49.955[0;39m [32m INFO [,75ca0b73a4220ca248412a0aeb55e55e,dd398af59cb90c3b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c5e22a02-cd61-4f7c-8b83-7cbab90b3e9b
[2m2024-06-20 15:55:09.925[0;39m [32m INFO [,91f6e5ccdb7c6ca7f11c5d05ce3207a4,5da0d744433388b1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 533, CreateTime = 1718873689148, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 50, 56, 54, 57, 99, 97, 100, 45, 98, 102, 49, 97, 45, 52, 50, 100, 102, 45, 97, 52, 52, 54, 45, 52, 102, 100, 100, 48, 48, 101, 49, 56, 56, 49, 51]), RecordHeader(key = kafka_correlationId, value = [41, -65, 29, -118, 16, 9, 69, -117, -68, 58, 117, -86, 27, -51, -79, -30]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244cbf5d81-7c0a-4226-99b6-cd016c8f8ada, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 15:55:09.929[0;39m [32m INFO [,91f6e5ccdb7c6ca7f11c5d05ce3207a4,5da0d744433388b1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 15:55:09.939[0;39m [32m INFO [,91f6e5ccdb7c6ca7f11c5d05ce3207a4,5da0d744433388b1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244cbf5d81-7c0a-4226-99b6-cd016c8f8ada
[2m2024-06-20 15:55:12.379[0;39m [32m INFO [,afb9ff208950b1d694f26e06120c550f,43c3ad7491998e90,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 552, CreateTime = 1718873691604, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 52, 54, 56, 57, 99, 53, 55, 45, 56, 97, 102, 50, 45, 52, 48, 56, 50, 45, 56, 100, 99, 50, 45, 57, 97, 55, 53, 49, 48, 55, 102, 98, 56, 56, 53]), RecordHeader(key = kafka_correlationId, value = [-90, 95, 74, 73, -123, 73, 70, -29, -96, -72, -98, -21, 18, 98, -21, -30]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2412390643-ca0c-4c70-9328-21d928720e56, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 15:55:12.381[0;39m [32m INFO [,afb9ff208950b1d694f26e06120c550f,43c3ad7491998e90,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 15:55:12.394[0;39m [32m INFO [,afb9ff208950b1d694f26e06120c550f,43c3ad7491998e90,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2412390643-ca0c-4c70-9328-21d928720e56
[2m2024-06-20 15:59:24.214[0;39m [32m INFO [,ed8c4c38d82864c54c19363923202614,0fedd8ad2083d875,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 559, CreateTime = 1718873943436, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 57, 99, 56, 97, 56, 100, 54, 45, 52, 98, 99, 49, 45, 52, 100, 54, 51, 45, 98, 52, 56, 97, 45, 97, 48, 57, 53, 49, 102, 50, 51, 52, 54, 50, 53]), RecordHeader(key = kafka_correlationId, value = [123, 31, -99, -62, 127, -76, 66, 99, -123, -128, -95, -90, -73, 9, -29, 15]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c502a7b6-c01d-47d9-b805-0457db573a12, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 15:59:24.218[0;39m [32m INFO [,ed8c4c38d82864c54c19363923202614,0fedd8ad2083d875,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 15:59:24.226[0;39m [32m INFO [,ed8c4c38d82864c54c19363923202614,0fedd8ad2083d875,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c502a7b6-c01d-47d9-b805-0457db573a12
[2m2024-06-20 16:01:06.601[0;39m [32m INFO [,4531769a2656afa302ecaa8bf1bd03fe,7c8b97c4e488dca2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 521, CreateTime = 1718874045821, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 55, 50, 101, 55, 51, 54, 55, 45, 100, 48, 55, 53, 45, 52, 57, 52, 50, 45, 56, 57, 54, 56, 45, 52, 48, 57, 55, 53, 51, 101, 100, 53, 49, 57, 54]), RecordHeader(key = kafka_correlationId, value = [55, -112, 50, 104, -39, 46, 66, 47, -82, 119, -6, -99, -28, -62, -20, -100]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d5a01825-9cdb-4607-8177-2f9322aeb60a, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:01:06.602[0;39m [32m INFO [,4531769a2656afa302ecaa8bf1bd03fe,7c8b97c4e488dca2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:01:06.609[0;39m [32m INFO [,4531769a2656afa302ecaa8bf1bd03fe,7c8b97c4e488dca2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d5a01825-9cdb-4607-8177-2f9322aeb60a
[2m2024-06-20 16:01:51.851[0;39m [32m INFO [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 559, CreateTime = 1718874091074, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 100, 50, 102, 98, 51, 56, 50, 45, 98, 100, 54, 98, 45, 52, 98, 102, 49, 45, 97, 50, 97, 54, 45, 53, 99, 97, 52, 56, 102, 56, 52, 52, 102, 57, 57]), RecordHeader(key = kafka_correlationId, value = [-16, -8, -29, 9, 1, 84, 72, -84, -116, 74, -50, -24, -48, -63, -79, 29]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a86b4c65-db88-4186-a2f4-6ac0c4d24b7f, value = {"customerNo":"203121938","username":"lv24"})
[2m2024-06-20 16:01:51.853[0;39m [32m INFO [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121938, username=lv24)
[2m2024-06-20 16:01:51.862[0;39m [32mDEBUG [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:01:51.883[0;39m [32m INFO [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    7879000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8119600 nanoseconds spent preparing 1 JDBC statements;
    9913200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:01:51.891[0;39m [32m INFO [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203121938, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:01:51.891[0;39m [32m INFO [,13127583c7f8ca65f3bcc2fb4fe2e7af,50f9ea7f4b5e7f57,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121938","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a86b4c65-db88-4186-a2f4-6ac0c4d24b7f
[2m2024-06-20 16:02:57.158[0;39m [32m INFO [,483605917433a3212192384f9abdbd3b,2fc44b98dcdc025c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 534, CreateTime = 1718874156377, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 56, 99, 53, 57, 55, 53, 56, 45, 56, 52, 57, 51, 45, 52, 49, 51, 56, 45, 57, 97, 54, 52, 45, 100, 48, 48, 53, 99, 100, 97, 52, 101, 53, 100, 48]), RecordHeader(key = kafka_correlationId, value = [-40, 6, -110, -40, 69, 55, 78, 89, -68, 74, -105, 60, 57, -107, -47, -90]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b0d2ad3b-117c-413a-98f1-3a0c3fc3bf3c, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:02:57.163[0;39m [32m INFO [,483605917433a3212192384f9abdbd3b,2fc44b98dcdc025c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:02:57.171[0;39m [32m INFO [,483605917433a3212192384f9abdbd3b,2fc44b98dcdc025c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b0d2ad3b-117c-413a-98f1-3a0c3fc3bf3c
[2m2024-06-20 16:03:24.192[0;39m [32m INFO [,7a75be01065c8e47f362f263b2eed74f,cc6fbdb07f76e65c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 572, CreateTime = 1718874183405, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 55, 101, 100, 99, 53, 48, 52, 45, 53, 50, 99, 51, 45, 52, 57, 102, 99, 45, 56, 56, 57, 55, 45, 56, 98, 99, 99, 102, 100, 52, 50, 101, 53, 54, 53]), RecordHeader(key = kafka_correlationId, value = [-27, 63, 30, 17, -88, 28, 68, -80, -117, -50, -52, 81, -111, -53, -41, 23]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2425c87ca5-80a9-471d-a1f4-7e1edff7cce2, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 16:03:24.195[0;39m [32m INFO [,7a75be01065c8e47f362f263b2eed74f,cc6fbdb07f76e65c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 16:03:24.203[0;39m [32m INFO [,7a75be01065c8e47f362f263b2eed74f,cc6fbdb07f76e65c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2425c87ca5-80a9-471d-a1f4-7e1edff7cce2
[2m2024-06-20 16:04:15.632[0;39m [32m INFO [,568e63a098e05402994d3358abfa37e9,aca51559efdce220,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 535, CreateTime = 1718874234853, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 50, 57, 98, 53, 49, 55, 97, 45, 53, 50, 52, 57, 45, 52, 49, 100, 54, 45, 56, 48, 98, 53, 45, 57, 100, 55, 52, 100, 98, 48, 54, 56, 54, 100, 98]), RecordHeader(key = kafka_correlationId, value = [-9, -53, 121, -70, -120, 66, 65, -105, -105, -84, -47, -21, -78, -104, -12, 51]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248731e8af-fbc0-4c3a-8fa7-e849df646a61, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 16:04:15.636[0;39m [32m INFO [,568e63a098e05402994d3358abfa37e9,aca51559efdce220,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 16:04:15.644[0;39m [32m INFO [,568e63a098e05402994d3358abfa37e9,aca51559efdce220,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248731e8af-fbc0-4c3a-8fa7-e849df646a61
[2m2024-06-20 16:04:47.295[0;39m [32m INFO [,83f761a20ab470038761a75afb00280a,10353a7d3f4e1f98,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 536, CreateTime = 1718874266521, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 98, 100, 52, 100, 54, 48, 51, 45, 56, 101, 98, 97, 45, 52, 99, 98, 51, 45, 98, 48, 97, 101, 45, 97, 53, 54, 50, 52, 52, 53, 100, 57, 50, 54, 98]), RecordHeader(key = kafka_correlationId, value = [-108, 99, 103, -40, -24, 33, 74, 37, -124, -37, 29, 16, 37, 68, -57, -17]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv246823fee5-cd4b-4ed6-8ae8-9e9ed243f1d4, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 16:04:47.295[0;39m [32m INFO [,83f761a20ab470038761a75afb00280a,10353a7d3f4e1f98,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 16:04:47.302[0;39m [32m INFO [,83f761a20ab470038761a75afb00280a,10353a7d3f4e1f98,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv246823fee5-cd4b-4ed6-8ae8-9e9ed243f1d4
[2m2024-06-20 16:05:27.913[0;39m [32m INFO [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 588, CreateTime = 1718874307132, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 54, 55, 51, 48, 102, 101, 50, 45, 54, 57, 98, 98, 45, 52, 97, 50, 49, 45, 97, 54, 54, 97, 45, 102, 102, 48, 54, 48, 99, 49, 101, 53, 52, 54, 53]), RecordHeader(key = kafka_correlationId, value = [37, -128, -37, -66, 4, -105, 77, 114, -74, -27, 23, -81, -25, 96, 21, 24]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2413b980b3-aa5d-4770-8c35-5b7eea0718de, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:05:27.916[0;39m [32m INFO [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:05:28.831[0;39m [32mDEBUG [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:05:28.850[0;39m [32m INFO [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    7003300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    7339800 nanoseconds spent preparing 1 JDBC statements;
    5871200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:05:28.859[0;39m [32m INFO [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203121906, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:05:28.861[0;39m [32m INFO [,b55d651e8433778d5b44947aef4b9a49,d4e6ada1080fa01e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2413b980b3-aa5d-4770-8c35-5b7eea0718de
[2m2024-06-20 16:05:40.310[0;39m [32m INFO [,13f71fc597c3ed619b8519907d572ac4,0ebc22c5f9831805,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 537, CreateTime = 1718874319527, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 52, 97, 98, 99, 98, 52, 54, 45, 101, 51, 57, 56, 45, 52, 100, 51, 55, 45, 98, 97, 57, 98, 45, 57, 48, 52, 102, 48, 100, 56, 57, 49, 54, 50, 52]), RecordHeader(key = kafka_correlationId, value = [-121, 109, 25, -99, -20, -19, 74, 114, -117, -3, 105, -128, -15, 71, 117, 43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d96415f6-ad50-4401-ab1c-a33fa5d95ed3, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 16:05:40.311[0;39m [32m INFO [,13f71fc597c3ed619b8519907d572ac4,0ebc22c5f9831805,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 16:05:40.320[0;39m [32m INFO [,13f71fc597c3ed619b8519907d572ac4,0ebc22c5f9831805,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d96415f6-ad50-4401-ab1c-a33fa5d95ed3
[2m2024-06-20 16:05:50.527[0;39m [32m INFO [,78a138f1ed7868153f34522c9c69321e,4db2e94c07713cb5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 593, CreateTime = 1718874329680, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 54, 51, 48, 98, 49, 101, 52, 45, 56, 52, 56, 98, 45, 52, 100, 57, 53, 45, 56, 50, 97, 97, 45, 50, 101, 102, 51, 54, 53, 50, 99, 48, 50, 57, 53]), RecordHeader(key = kafka_correlationId, value = [-91, 25, -98, -29, 82, -76, 75, -70, -110, 26, 21, -34, 112, -87, -29, -27]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2480174673-f48b-48eb-8d6d-fd199d9b2022, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:05:50.528[0;39m [32m INFO [,78a138f1ed7868153f34522c9c69321e,4db2e94c07713cb5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:05:50.536[0;39m [32m INFO [,78a138f1ed7868153f34522c9c69321e,4db2e94c07713cb5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2480174673-f48b-48eb-8d6d-fd199d9b2022
[2m2024-06-20 16:05:55.561[0;39m [32m INFO [,36d2eb5441e2a8259e588db2190d58b3,d92679eb3f0d8e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 538, CreateTime = 1718874334776, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 55, 56, 102, 53, 55, 99, 57, 45, 99, 50, 55, 53, 45, 52, 55, 57, 102, 45, 56, 99, 48, 56, 45, 98, 97, 50, 49, 55, 100, 54, 51, 54, 97, 102, 52]), RecordHeader(key = kafka_correlationId, value = [-61, 118, 38, 42, -17, -104, 67, 52, -101, -94, -107, 89, -70, 82, 55, 92]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24601e66c7-fee6-455d-b987-8c88b15021d2, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:05:55.563[0;39m [32m INFO [,36d2eb5441e2a8259e588db2190d58b3,d92679eb3f0d8e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:05:55.584[0;39m [32m INFO [,36d2eb5441e2a8259e588db2190d58b3,d92679eb3f0d8e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24601e66c7-fee6-455d-b987-8c88b15021d2
[2m2024-06-20 16:06:22.776[0;39m [32m INFO [,a34036b41676c716f17fb30bc6d001e0,4f2cbca302986e4b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 560, CreateTime = 1718874361998, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 50, 100, 51, 100, 48, 53, 101, 45, 102, 99, 56, 56, 45, 52, 99, 99, 53, 45, 98, 54, 98, 100, 45, 56, 56, 51, 102, 55, 53, 56, 56, 52, 55, 98, 52]), RecordHeader(key = kafka_correlationId, value = [-6, 8, 71, 87, -1, 105, 71, 110, -110, 74, -9, -109, 56, -56, 89, -99]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ae29e044-d942-4526-8798-019338c09a6f, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:06:22.779[0;39m [32m INFO [,a34036b41676c716f17fb30bc6d001e0,4f2cbca302986e4b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:06:22.790[0;39m [32m INFO [,a34036b41676c716f17fb30bc6d001e0,4f2cbca302986e4b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ae29e044-d942-4526-8798-019338c09a6f
[2m2024-06-20 16:06:23.793[0;39m [32m INFO [,e8aa0a26e24ee6f4b03d5074b33c00c4,7c099a2d32741ad3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 589, CreateTime = 1718874363015, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 97, 102, 54, 101, 99, 54, 54, 45, 101, 52, 51, 55, 45, 52, 102, 51, 50, 45, 56, 50, 52, 97, 45, 56, 98, 51, 48, 98, 97, 56, 100, 51, 56, 102, 99]), RecordHeader(key = kafka_correlationId, value = [51, -108, 67, -89, 27, 97, 77, 93, -70, 101, -96, 10, -88, -3, 85, 21]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c7e26748-c0e8-45c5-8abe-f6b6cb1c5a58, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:06:23.797[0;39m [32m INFO [,e8aa0a26e24ee6f4b03d5074b33c00c4,7c099a2d32741ad3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:06:23.806[0;39m [32m INFO [,e8aa0a26e24ee6f4b03d5074b33c00c4,7c099a2d32741ad3,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c7e26748-c0e8-45c5-8abe-f6b6cb1c5a58
[2m2024-06-20 16:06:31.838[0;39m [32m INFO [,d47c08a9d4b4b544f9de6e3baf90d558,1f085abe5a3bba7f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 560, CreateTime = 1718874371059, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 54, 52, 102, 50, 97, 51, 51, 45, 49, 101, 49, 56, 45, 52, 97, 57, 54, 45, 97, 101, 55, 51, 45, 55, 101, 48, 98, 52, 50, 48, 55, 54, 54, 51, 99]), RecordHeader(key = kafka_correlationId, value = [-37, 40, -44, 3, -60, -104, 74, -75, -124, -86, 89, 78, 50, 40, 57, -84]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243313022a-bf1a-45d8-a740-111054fcac6e, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:06:31.841[0;39m [32m INFO [,d47c08a9d4b4b544f9de6e3baf90d558,1f085abe5a3bba7f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:06:31.853[0;39m [32m INFO [,d47c08a9d4b4b544f9de6e3baf90d558,1f085abe5a3bba7f,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243313022a-bf1a-45d8-a740-111054fcac6e
[2m2024-06-20 16:06:43.824[0;39m [32m INFO [,dfbbd166ef96aa19255c84437f9695d2,3c78ffaf5c079b2a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 581, CreateTime = 1718874383046, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 48, 48, 49, 101, 57, 56, 97, 45, 102, 48, 52, 99, 45, 52, 51, 53, 100, 45, 97, 102, 97, 53, 45, 53, 98, 54, 98, 55, 102, 55, 57, 101, 52, 56, 50]), RecordHeader(key = kafka_correlationId, value = [78, 27, -8, 92, 7, 86, 64, -90, -95, 89, 94, -55, 86, 10, 37, 111]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24028cad89-4852-4d02-8c66-ea424cda1bd8, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:06:43.828[0;39m [32m INFO [,dfbbd166ef96aa19255c84437f9695d2,3c78ffaf5c079b2a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:06:43.837[0;39m [32m INFO [,dfbbd166ef96aa19255c84437f9695d2,3c78ffaf5c079b2a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24028cad89-4852-4d02-8c66-ea424cda1bd8
[2m2024-06-20 16:07:04.327[0;39m [32m INFO [,da587639693c27ec63fa27d8e8687e9f,a8302ffbed6f7718,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 522, CreateTime = 1718874403548, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 50, 97, 53, 52, 53, 98, 53, 45, 55, 57, 101, 97, 45, 52, 51, 51, 52, 45, 98, 54, 49, 54, 45, 55, 56, 97, 49, 52, 99, 100, 54, 100, 55, 52, 99]), RecordHeader(key = kafka_correlationId, value = [30, -113, 23, 31, 79, 56, 68, -122, -100, 48, -87, 33, 68, -62, 122, 23]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f200f7e1-b174-417f-a496-cf633b398cc4, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:07:04.331[0;39m [32m INFO [,da587639693c27ec63fa27d8e8687e9f,a8302ffbed6f7718,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:07:04.339[0;39m [32m INFO [,da587639693c27ec63fa27d8e8687e9f,a8302ffbed6f7718,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f200f7e1-b174-417f-a496-cf633b398cc4
[2m2024-06-20 16:07:39.325[0;39m [32m INFO [,f4e7b2afb606a4f317318c7e02bd680a,446b037416b450c5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 561, CreateTime = 1718874438545, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 57, 49, 49, 51, 99, 50, 52, 45, 99, 57, 101, 56, 45, 52, 49, 101, 49, 45, 57, 98, 55, 48, 45, 102, 55, 57, 99, 51, 48, 100, 54, 50, 102, 51, 49]), RecordHeader(key = kafka_correlationId, value = [50, 110, 20, -53, 80, 100, 79, 31, -105, 35, -53, 87, -95, 84, -70, 93]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24bc3be966-2249-4032-8fc4-5e96027029bb, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 16:07:39.329[0;39m [32m INFO [,f4e7b2afb606a4f317318c7e02bd680a,446b037416b450c5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 16:07:39.377[0;39m [32m INFO [,f4e7b2afb606a4f317318c7e02bd680a,446b037416b450c5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24bc3be966-2249-4032-8fc4-5e96027029bb
[2m2024-06-20 16:07:58.384[0;39m [32m INFO [,a29e5466135deef52c27b2fd120310f4,57c823e84b9b8b71,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 562, CreateTime = 1718874457605, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 102, 50, 55, 54, 53, 102, 54, 45, 99, 54, 55, 53, 45, 52, 54, 57, 53, 45, 97, 50, 98, 57, 45, 49, 101, 48, 53, 53, 101, 101, 55, 49, 98, 56, 99]), RecordHeader(key = kafka_correlationId, value = [-112, 126, -50, 6, -97, -55, 76, -37, -73, 127, -85, 16, -28, -26, -29, -116]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242917be68-5928-4a4e-b4e4-01c6e6f1ea75, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:07:58.385[0;39m [32m INFO [,a29e5466135deef52c27b2fd120310f4,57c823e84b9b8b71,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:07:58.391[0;39m [32m INFO [,a29e5466135deef52c27b2fd120310f4,57c823e84b9b8b71,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242917be68-5928-4a4e-b4e4-01c6e6f1ea75
[2m2024-06-20 16:07:58.705[0;39m [32m INFO [,9beba6df930fe45a58a80b41f5338646,8d5e30708da8c1fe,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 582, CreateTime = 1718874457928, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 98, 49, 99, 57, 51, 102, 100, 45, 49, 102, 99, 98, 45, 52, 54, 98, 98, 45, 97, 56, 57, 53, 45, 99, 57, 97, 99, 52, 99, 51, 51, 102, 49, 55, 53]), RecordHeader(key = kafka_correlationId, value = [18, 20, 98, 7, -36, -34, 66, 58, -74, 58, -38, -49, 28, -66, 37, 25]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24808ca561-6770-46a8-9401-87e6df174cb2, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:07:58.706[0;39m [32m INFO [,9beba6df930fe45a58a80b41f5338646,8d5e30708da8c1fe,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:07:58.712[0;39m [32m INFO [,9beba6df930fe45a58a80b41f5338646,8d5e30708da8c1fe,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24808ca561-6770-46a8-9401-87e6df174cb2
[2m2024-06-20 16:07:59.397[0;39m [32m INFO [,d00ce94b901aee8ec25dbde98a89d2e8,1d8798f3a0079628,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 594, CreateTime = 1718874458622, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 98, 100, 55, 50, 97, 100, 54, 45, 97, 100, 55, 50, 45, 52, 54, 102, 97, 45, 57, 56, 51, 101, 45, 48, 101, 98, 99, 101, 53, 97, 53, 102, 53, 57, 55]), RecordHeader(key = kafka_correlationId, value = [91, -83, -18, 64, 53, -84, 76, 37, -122, 38, 87, 90, -87, 25, 15, 32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d866c6b3-24bc-4f2b-86d4-846ac4b8e5fc, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:07:59.397[0;39m [32m INFO [,d00ce94b901aee8ec25dbde98a89d2e8,1d8798f3a0079628,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:07:59.397[0;39m [32m INFO [,d00ce94b901aee8ec25dbde98a89d2e8,1d8798f3a0079628,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d866c6b3-24bc-4f2b-86d4-846ac4b8e5fc
[2m2024-06-20 16:08:33.467[0;39m [32m INFO [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 583, CreateTime = 1718874492691, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 97, 102, 50, 98, 51, 97, 101, 45, 51, 51, 52, 101, 45, 52, 102, 57, 55, 45, 56, 51, 55, 100, 45, 100, 98, 97, 48, 100, 54, 99, 98, 101, 98, 97, 56]), RecordHeader(key = kafka_correlationId, value = [-121, 13, 22, 2, 5, 59, 73, -95, -120, 9, -64, -56, -121, -124, 12, -120]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242af94d5c-f60a-444e-9ee1-f0fff933b92a, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:08:33.469[0;39m [32m INFO [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:08:33.476[0;39m [32mDEBUG [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:08:33.495[0;39m [32m INFO [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    8668600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8949500 nanoseconds spent preparing 1 JDBC statements;
    6708300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:08:33.504[0;39m [32m INFO [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=111861580, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:08:33.505[0;39m [32m INFO [,bff227aac119a5a431ff5588eb9ecf3b,36aa987e36385d28,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242af94d5c-f60a-444e-9ee1-f0fff933b92a
[2m2024-06-20 16:09:28.916[0;39m [32m INFO [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 595, CreateTime = 1718874548138, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 50, 52, 101, 50, 98, 48, 56, 45, 53, 51, 54, 102, 45, 52, 100, 49, 52, 45, 97, 56, 49, 99, 45, 55, 99, 55, 102, 49, 54, 57, 97, 48, 50, 49, 102]), RecordHeader(key = kafka_correlationId, value = [-25, -103, -33, -86, -56, 110, 76, -104, -107, -87, 69, -32, -34, -117, 1, -80]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c49d080d-8a0e-4321-9546-fbff8aa4dd25, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:09:28.916[0;39m [32m INFO [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:09:28.926[0;39m [32mDEBUG [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:09:28.940[0;39m [32m INFO [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    4307300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    4456100 nanoseconds spent preparing 1 JDBC statements;
    6784600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:09:28.951[0;39m [32m INFO [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122199, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:09:28.952[0;39m [32m INFO [,228a602d95904d496736053469a7f3bd,2ed0bd0a3a9fc943,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c49d080d-8a0e-4321-9546-fbff8aa4dd25
[2m2024-06-20 16:09:55.358[0;39m [32m INFO [,5ce4f50ab4c4c19b900d3ac2450ece62,394f1ccdfaefcfa5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 563, CreateTime = 1718874574582, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 98, 97, 53, 53, 57, 52, 50, 45, 56, 99, 51, 101, 45, 52, 54, 55, 51, 45, 98, 53, 49, 56, 45, 100, 49, 97, 98, 48, 97, 50, 99, 98, 101, 100, 55]), RecordHeader(key = kafka_correlationId, value = [45, 73, 2, -59, 123, -15, 71, 18, -78, -61, -25, 7, -22, 113, -79, 65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d95d7d1f-63cd-48b2-8fd5-d733c749a1ea, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:09:55.358[0;39m [32m INFO [,5ce4f50ab4c4c19b900d3ac2450ece62,394f1ccdfaefcfa5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:09:55.366[0;39m [32m INFO [,5ce4f50ab4c4c19b900d3ac2450ece62,394f1ccdfaefcfa5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d95d7d1f-63cd-48b2-8fd5-d733c749a1ea
[2m2024-06-20 16:09:55.756[0;39m [32m INFO [,46580e8fb5262057ab9e3bb39d239fec,d734193d7211c7d5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 584, CreateTime = 1718874574977, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 57, 97, 57, 57, 97, 53, 99, 45, 57, 49, 51, 48, 45, 52, 53, 97, 101, 45, 57, 51, 53, 49, 45, 50, 97, 98, 99, 101, 54, 98, 49, 54, 56, 99, 49]), RecordHeader(key = kafka_correlationId, value = [110, -6, -43, 26, -115, -14, 70, 58, -85, 98, 33, -127, -83, -21, -32, 68]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242964824c-886e-45aa-ba40-a324c0b18978, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:09:55.760[0;39m [32m INFO [,46580e8fb5262057ab9e3bb39d239fec,d734193d7211c7d5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:09:55.767[0;39m [32m INFO [,46580e8fb5262057ab9e3bb39d239fec,d734193d7211c7d5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242964824c-886e-45aa-ba40-a324c0b18978
[2m2024-06-20 16:10:09.902[0;39m [32m INFO [,e6cec50acf902a86b91515ffb6137113,284e0f01a835d0e6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 539, CreateTime = 1718874589031, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 98, 49, 55, 99, 51, 50, 53, 45, 49, 56, 49, 99, 45, 52, 100, 52, 48, 45, 56, 97, 100, 99, 45, 55, 53, 51, 48, 48, 53, 57, 52, 51, 50, 51, 97]), RecordHeader(key = kafka_correlationId, value = [-27, -118, 106, 57, -116, -33, 75, 111, -117, -52, -46, -19, -5, -80, -100, -119]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240e6b8363-f09c-4feb-b003-f0598b9bc72a, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:10:09.905[0;39m [32m INFO [,e6cec50acf902a86b91515ffb6137113,284e0f01a835d0e6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:10:09.917[0;39m [32m INFO [,e6cec50acf902a86b91515ffb6137113,284e0f01a835d0e6,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240e6b8363-f09c-4feb-b003-f0598b9bc72a
[2m2024-06-20 16:10:33.705[0;39m [32m INFO [,5a69ff728435bd8b9d8ac93243236a43,ee9e1b0261a89f36,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 573, CreateTime = 1718874612930, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 49, 100, 50, 97, 48, 52, 51, 45, 100, 55, 53, 53, 45, 52, 54, 98, 55, 45, 98, 97, 99, 51, 45, 51, 53, 57, 52, 48, 54, 48, 53, 99, 101, 55, 55]), RecordHeader(key = kafka_correlationId, value = [-120, 62, 78, -74, 23, 13, 74, 11, -102, -32, -86, 62, -96, -20, 2, 6]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2402a0ad9b-2b96-4c46-972b-33654b2debb6, value = {"customerNo":"203122170","username":"lv24"})
[2m2024-06-20 16:10:33.706[0;39m [32m INFO [,5a69ff728435bd8b9d8ac93243236a43,ee9e1b0261a89f36,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122170, username=lv24)
[2m2024-06-20 16:10:33.715[0;39m [32m INFO [,5a69ff728435bd8b9d8ac93243236a43,ee9e1b0261a89f36,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122170","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2402a0ad9b-2b96-4c46-972b-33654b2debb6
[2m2024-06-20 16:11:27.298[0;39m [32m INFO [,14cf014f90a8318317388f3d3c81af9a,f416f31866d1acc9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 590, CreateTime = 1718874666520, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 52, 54, 57, 48, 100, 49, 54, 45, 97, 54, 49, 101, 45, 52, 50, 50, 100, 45, 57, 52, 55, 50, 45, 97, 98, 100, 56, 50, 102, 54, 51, 102, 55, 57, 50]), RecordHeader(key = kafka_correlationId, value = [8, 25, 1, 24, 17, 24, 67, -85, -82, 54, 65, 109, -29, 2, 76, -103]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240ae96487-4a9a-457b-9c5f-4e4d98a0f475, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:11:27.300[0;39m [32m INFO [,14cf014f90a8318317388f3d3c81af9a,f416f31866d1acc9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:11:27.307[0;39m [32m INFO [,14cf014f90a8318317388f3d3c81af9a,f416f31866d1acc9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240ae96487-4a9a-457b-9c5f-4e4d98a0f475
[2m2024-06-20 16:11:56.507[0;39m [32m INFO [,addc5b712a02764d1810b81f7687a49b,8d3c322d68b081b8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 540, CreateTime = 1718874695729, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 100, 55, 99, 97, 48, 98, 97, 45, 50, 102, 52, 97, 45, 52, 51, 49, 97, 45, 56, 100, 48, 54, 45, 54, 55, 102, 53, 49, 50, 48, 52, 48, 50, 50, 100]), RecordHeader(key = kafka_correlationId, value = [89, -41, -126, -73, -11, -55, 77, -65, -108, 94, 93, -21, -81, 73, 31, 42]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24fb5740f2-480b-46b6-8fb6-c154643d0c63, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:11:56.510[0;39m [32m INFO [,addc5b712a02764d1810b81f7687a49b,8d3c322d68b081b8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:11:56.523[0;39m [32m INFO [,addc5b712a02764d1810b81f7687a49b,8d3c322d68b081b8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24fb5740f2-480b-46b6-8fb6-c154643d0c63
[2m2024-06-20 16:12:23.883[0;39m [32m INFO [,f279581f9d83996aec734b707e2aedd2,6f9dd0ba31514adb,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 585, CreateTime = 1718874723106, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 48, 49, 56, 54, 57, 52, 57, 45, 49, 53, 51, 52, 45, 52, 99, 56, 98, 45, 98, 55, 97, 52, 45, 50, 51, 52, 98, 99, 53, 56, 50, 55, 48, 97, 52]), RecordHeader(key = kafka_correlationId, value = [-41, 56, -4, 78, -106, -99, 76, -99, -127, -75, 51, 13, 121, -77, -41, 47]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2409325f40-b7c7-4a60-8af5-497465a51a00, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:12:23.886[0;39m [32m INFO [,f279581f9d83996aec734b707e2aedd2,6f9dd0ba31514adb,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:12:23.895[0;39m [32m INFO [,f279581f9d83996aec734b707e2aedd2,6f9dd0ba31514adb,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2409325f40-b7c7-4a60-8af5-497465a51a00
[2m2024-06-20 16:14:21.072[0;39m [32m INFO [,2958b1a40fd03dad0d5a083296cc9849,ada47a3e74f829df,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 553, CreateTime = 1718874840296, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 98, 49, 100, 98, 99, 52, 102, 45, 50, 55, 100, 102, 45, 52, 48, 50, 98, 45, 98, 98, 56, 102, 45, 50, 48, 56, 48, 56, 52, 49, 55, 100, 98, 49, 54]), RecordHeader(key = kafka_correlationId, value = [-124, -101, -124, 110, -44, 31, 75, -42, -92, 2, 57, -74, -20, 27, 76, 5]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24aaed384e-a948-4339-95a1-aa327a1b3496, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:14:21.074[0;39m [32m INFO [,2958b1a40fd03dad0d5a083296cc9849,ada47a3e74f829df,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:14:21.087[0;39m [32m INFO [,2958b1a40fd03dad0d5a083296cc9849,ada47a3e74f829df,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24aaed384e-a948-4339-95a1-aa327a1b3496
[2m2024-06-20 16:14:44.865[0;39m [32m INFO [,10fcd66817dc70cc8e454aa575b52eee,66d59247a766a081,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 523, CreateTime = 1718874864087, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 52, 99, 97, 51, 53, 52, 51, 45, 54, 48, 101, 55, 45, 52, 98, 52, 55, 45, 56, 54, 56, 50, 45, 101, 50, 101, 56, 48, 55, 100, 51, 50, 49, 97, 102]), RecordHeader(key = kafka_correlationId, value = [-66, 83, -93, 53, -85, 31, 78, -22, -81, 78, -30, -54, 3, -39, -119, 90]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24928072b2-59ba-4a3c-8c94-b5b77ad274e4, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 16:14:44.867[0;39m [32m INFO [,10fcd66817dc70cc8e454aa575b52eee,66d59247a766a081,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 16:14:44.877[0;39m [32m INFO [,10fcd66817dc70cc8e454aa575b52eee,66d59247a766a081,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24928072b2-59ba-4a3c-8c94-b5b77ad274e4
[2m2024-06-20 16:15:20.300[0;39m [32m INFO [,5234e594f2f9bda28175bde1a51362e0,e5b88098d30f0567,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 524, CreateTime = 1718874899523, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 99, 98, 51, 56, 101, 56, 51, 45, 98, 50, 100, 51, 45, 52, 52, 50, 54, 45, 57, 98, 50, 55, 45, 53, 57, 98, 52, 100, 99, 98, 50, 101, 99, 51, 48]), RecordHeader(key = kafka_correlationId, value = [49, 74, -72, 90, -21, 102, 76, 37, -108, -18, 103, 8, -6, -24, -48, 1]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24edc2a5c1-d914-4e49-98eb-b277ba397a83, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 16:15:20.303[0;39m [32m INFO [,5234e594f2f9bda28175bde1a51362e0,e5b88098d30f0567,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 16:15:20.311[0;39m [32m INFO [,5234e594f2f9bda28175bde1a51362e0,e5b88098d30f0567,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24edc2a5c1-d914-4e49-98eb-b277ba397a83
[2m2024-06-20 16:21:04.952[0;39m [32m INFO [,78ef5982b4a36cdf,c699f6a7f7cfef97,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 591, CreateTime = 1718875264937, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 54, 50, 98, 49, 57, 99, 50, 45, 48, 55, 53, 99, 45, 52, 55, 49, 55, 45, 97, 56, 54, 50, 45, 98, 97, 55, 53, 99, 100, 53, 99, 48, 98, 49, 48]), RecordHeader(key = kafka_correlationId, value = [-29, -78, -83, -84, -118, 65, 71, 124, -74, -113, -3, -106, 121, 25, -46, -73]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245023b8bd-afcd-4749-adfa-a51819cb9c13, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 16:21:04.955[0;39m [32m INFO [,78ef5982b4a36cdf,c699f6a7f7cfef97,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 16:21:04.972[0;39m [32m INFO [,78ef5982b4a36cdf,c699f6a7f7cfef97,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245023b8bd-afcd-4749-adfa-a51819cb9c13
[2m2024-06-20 16:21:28.152[0;39m [32m INFO [,083c0d34deaba958,1363c438e7b06cf8,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 596, CreateTime = 1718875288146, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 97, 52, 100, 97, 102, 99, 55, 45, 97, 49, 48, 53, 45, 52, 49, 56, 98, 45, 57, 56, 51, 101, 45, 97, 48, 102, 101, 99, 48, 99, 54, 99, 49, 48, 50]), RecordHeader(key = kafka_correlationId, value = [-105, 62, 5, -122, -123, -75, 70, -39, -124, 72, 28, -62, 58, -95, 64, 65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24955e475b-82ef-4451-83d2-c6cf9d1e8436, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 16:21:28.152[0;39m [32m INFO [,083c0d34deaba958,1363c438e7b06cf8,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 16:21:28.162[0;39m [32m INFO [,083c0d34deaba958,1363c438e7b06cf8,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24955e475b-82ef-4451-83d2-c6cf9d1e8436
[2m2024-06-20 16:21:57.598[0;39m [32m INFO [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 561, CreateTime = 1718875296820, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 100, 56, 101, 99, 51, 51, 48, 45, 56, 98, 101, 54, 45, 52, 101, 56, 55, 45, 56, 49, 100, 101, 45, 99, 57, 51, 101, 48, 55, 98, 52, 53, 100, 51, 53]), RecordHeader(key = kafka_correlationId, value = [57, 31, -108, 110, -68, -40, 69, -55, -69, -4, -79, -123, 53, 28, 122, 3]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2427dd94f6-252a-45af-8e75-c1f0322ba900, value = {"customerNo":"200003970","username":"lv24"})
[2m2024-06-20 16:21:57.600[0;39m [32m INFO [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200003970, username=lv24)
[2m2024-06-20 16:21:57.607[0;39m [32mDEBUG [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:21:57.625[0;39m [32m INFO [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    8584900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8771500 nanoseconds spent preparing 1 JDBC statements;
    6870300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:21:57.633[0;39m [32m INFO [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=200003970, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:21:57.633[0;39m [32m INFO [,ae346a0a2f2c256c3af7904e387445f7,21e5db51b5d66954,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200003970","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2427dd94f6-252a-45af-8e75-c1f0322ba900
[2m2024-06-20 16:22:06.026[0;39m [32m INFO [,19b1f073c8fd8df7,df4008ad87dd90c0,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 541, CreateTime = 1718875305248, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 98, 57, 97, 54, 55, 50, 50, 45, 55, 54, 51, 101, 45, 52, 56, 52, 101, 45, 56, 55, 100, 101, 45, 100, 102, 99, 50, 57, 99, 49, 50, 54, 52, 57, 49]), RecordHeader(key = kafka_correlationId, value = [28, -125, 110, 103, -93, 26, 70, 75, -71, -125, -51, -104, -84, 122, 74, -117]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2492113447-974a-4457-af08-a7a5474f1da0, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 16:22:06.026[0;39m [32m INFO [,19b1f073c8fd8df7,df4008ad87dd90c0,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 16:22:06.033[0;39m [32m INFO [,19b1f073c8fd8df7,df4008ad87dd90c0,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2492113447-974a-4457-af08-a7a5474f1da0
[2m2024-06-20 16:22:24.163[0;39m [32m INFO [,59f888b8eb5820f0cdf69dd0d0fd58f9,3dc6a944058d048a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 554, CreateTime = 1718875323382, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 54, 53, 102, 50, 48, 56, 98, 45, 101, 48, 102, 53, 45, 52, 51, 57, 102, 45, 56, 100, 102, 48, 45, 50, 97, 57, 48, 102, 53, 100, 57, 55, 56, 101, 56]), RecordHeader(key = kafka_correlationId, value = [-56, 8, 19, -21, 81, -58, 77, -79, -117, -128, -118, -79, -12, 54, -124, 1]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2479c7fd47-3184-46cf-9a18-08f1779282eb, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:22:24.164[0;39m [32m INFO [,59f888b8eb5820f0cdf69dd0d0fd58f9,3dc6a944058d048a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:22:24.176[0;39m [32m INFO [,59f888b8eb5820f0cdf69dd0d0fd58f9,3dc6a944058d048a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2479c7fd47-3184-46cf-9a18-08f1779282eb
[2m2024-06-20 16:23:09.702[0;39m [32m INFO [,5c5d7312118b44bf73a5d82970f1d9be,d611986da594521d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 574, CreateTime = 1718875368924, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 99, 52, 98, 97, 52, 98, 52, 45, 97, 98, 54, 101, 45, 52, 102, 55, 50, 45, 56, 51, 99, 52, 45, 100, 97, 52, 52, 97, 50, 56, 101, 102, 99, 50, 97]), RecordHeader(key = kafka_correlationId, value = [65, -104, 85, 41, 51, -40, 64, -29, -91, -76, 8, 119, -125, 55, -18, 113]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ee581f88-10fc-4630-a4b2-063b705b620e, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:23:09.704[0;39m [32m INFO [,5c5d7312118b44bf73a5d82970f1d9be,d611986da594521d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:23:09.713[0;39m [32m INFO [,5c5d7312118b44bf73a5d82970f1d9be,d611986da594521d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ee581f88-10fc-4630-a4b2-063b705b620e
[2m2024-06-20 16:24:03.541[0;39m [32m INFO [,0241382d4dcdc78013e9535e63e25b19,87bc98da6fa1d2d4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 564, CreateTime = 1718875422759, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 53, 56, 98, 51, 98, 101, 101, 45, 54, 98, 57, 100, 45, 52, 50, 101, 51, 45, 56, 50, 49, 101, 45, 97, 48, 98, 98, 55, 52, 97, 48, 52, 49, 49, 53]), RecordHeader(key = kafka_correlationId, value = [99, 20, -32, 54, -24, -61, 69, 23, -105, -47, -113, 33, -35, 67, -67, 103]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24961524e5-c54b-4713-9ab1-c125ed4d4341, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:24:03.543[0;39m [32m INFO [,0241382d4dcdc78013e9535e63e25b19,87bc98da6fa1d2d4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:24:03.548[0;39m [32m INFO [,0241382d4dcdc78013e9535e63e25b19,87bc98da6fa1d2d4,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24961524e5-c54b-4713-9ab1-c125ed4d4341
[2m2024-06-20 16:25:10.625[0;39m [32m INFO [,2a100f4aea93ac89f040c1afcc5f78b5,c0f2e01107fc2e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 525, CreateTime = 1718875489839, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 100, 56, 54, 50, 100, 55, 99, 45, 102, 100, 53, 56, 45, 52, 49, 100, 101, 45, 57, 98, 100, 55, 45, 101, 53, 98, 54, 50, 57, 54, 101, 99, 48, 53, 53]), RecordHeader(key = kafka_correlationId, value = [-96, -100, 58, -46, 93, -59, 65, 22, -107, -104, -57, -97, 29, 109, -51, 6]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f511b8ed-4ae6-4fe3-a78e-84660637e024, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:25:10.627[0;39m [32m INFO [,2a100f4aea93ac89f040c1afcc5f78b5,c0f2e01107fc2e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:25:10.639[0;39m [32m INFO [,2a100f4aea93ac89f040c1afcc5f78b5,c0f2e01107fc2e41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f511b8ed-4ae6-4fe3-a78e-84660637e024
[2m2024-06-20 16:25:32.311[0;39m [32m INFO [,323178a915557a7a5b5d5dd17c474463,a135d0160ac149a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 555, CreateTime = 1718875511537, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 102, 51, 99, 50, 53, 50, 57, 45, 56, 53, 102, 99, 45, 52, 100, 99, 55, 45, 98, 49, 55, 101, 45, 52, 55, 50, 100, 50, 53, 53, 57, 50, 97, 98, 50]), RecordHeader(key = kafka_correlationId, value = [13, -101, 45, -67, 115, 35, 69, 83, -65, -122, 33, 49, -92, -27, 51, -103]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245ece2d90-37e4-4be7-aa26-18dc9aae711a, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:25:32.312[0;39m [32m INFO [,323178a915557a7a5b5d5dd17c474463,a135d0160ac149a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:25:32.319[0;39m [32m INFO [,323178a915557a7a5b5d5dd17c474463,a135d0160ac149a1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245ece2d90-37e4-4be7-aa26-18dc9aae711a
[2m2024-06-20 16:28:12.059[0;39m [32m INFO [,9a7fe34c1609a35e1dd1c0bfdfe775a8,594b068d2bad72b9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 565, CreateTime = 1718875671277, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 100, 97, 52, 53, 102, 101, 100, 45, 48, 53, 98, 51, 45, 52, 99, 51, 100, 45, 98, 50, 53, 56, 45, 98, 56, 97, 49, 97, 100, 100, 50, 52, 55, 100, 56]), RecordHeader(key = kafka_correlationId, value = [43, 30, 75, 50, 19, -61, 67, -37, -76, -93, 29, 123, 26, -40, -66, 85]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv246bdc6834-640c-4c89-8219-edf1134249f5, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:28:12.062[0;39m [32m INFO [,9a7fe34c1609a35e1dd1c0bfdfe775a8,594b068d2bad72b9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:28:12.070[0;39m [32m INFO [,9a7fe34c1609a35e1dd1c0bfdfe775a8,594b068d2bad72b9,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv246bdc6834-640c-4c89-8219-edf1134249f5
[2m2024-06-20 16:28:44.571[0;39m [32m INFO [,b97956de8ad3773afa77ecea2d27f565,cecf31449c8119de,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 576, CreateTime = 1718875703783, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 102, 99, 98, 55, 50, 55, 57, 45, 50, 101, 48, 98, 45, 52, 57, 100, 100, 45, 57, 99, 53, 98, 45, 50, 57, 53, 101, 101, 57, 48, 98, 53, 50, 48, 100]), RecordHeader(key = kafka_correlationId, value = [-14, 81, 48, -53, -123, 104, 72, -117, -92, 51, 82, -51, 76, 33, -32, 53]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242a12c61d-eab6-49b0-b086-ab5027543620, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:28:44.571[0;39m [32m INFO [,b97956de8ad3773afa77ecea2d27f565,cecf31449c8119de,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:28:44.588[0;39m [32m INFO [,b97956de8ad3773afa77ecea2d27f565,cecf31449c8119de,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242a12c61d-eab6-49b0-b086-ab5027543620
[2m2024-06-20 16:28:56.651[0;39m [32m INFO [,28c18e3f9e5cacea4f8d11374f04b8df,673a785242988e8b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 556, CreateTime = 1718875715871, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 53, 54, 51, 55, 98, 51, 98, 45, 54, 98, 98, 56, 45, 52, 51, 55, 55, 45, 56, 49, 50, 101, 45, 55, 101, 50, 55, 54, 55, 48, 48, 57, 56, 50, 54]), RecordHeader(key = kafka_correlationId, value = [47, -20, -68, -26, -30, -38, 66, 18, -118, 76, -30, 37, -94, -56, -124, -111]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24881f1513-e1a5-48bd-ab13-a71abf11814f, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:28:56.654[0;39m [32m INFO [,28c18e3f9e5cacea4f8d11374f04b8df,673a785242988e8b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:28:56.663[0;39m [32m INFO [,28c18e3f9e5cacea4f8d11374f04b8df,673a785242988e8b,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24881f1513-e1a5-48bd-ab13-a71abf11814f
[2m2024-06-20 16:30:21.330[0;39m [32m INFO [,e59e2577d707bca385caed7e881a3984,aef7b5c37f183391,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 542, CreateTime = 1718875800550, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 98, 54, 97, 97, 48, 56, 55, 45, 55, 54, 101, 99, 45, 52, 52, 100, 52, 45, 57, 52, 97, 55, 45, 99, 48, 55, 98, 101, 56, 56, 56, 50, 102, 50, 102]), RecordHeader(key = kafka_correlationId, value = [-113, 60, 96, 4, -97, 46, 71, -76, -102, -104, 39, -50, 37, -93, -100, 58]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24197756fa-1620-4436-89be-c901e56867c1, value = {"customerNo":"200003970","username":"lv24"})
[2m2024-06-20 16:30:21.333[0;39m [32m INFO [,e59e2577d707bca385caed7e881a3984,aef7b5c37f183391,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200003970, username=lv24)
[2m2024-06-20 16:30:21.351[0;39m [32m INFO [,e59e2577d707bca385caed7e881a3984,aef7b5c37f183391,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200003970","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24197756fa-1620-4436-89be-c901e56867c1
[2m2024-06-20 16:30:42.643[0;39m [32m INFO [,5118ed0abf2de72ae47fe6f8b58e049b,862f7be4df7db5f1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 597, CreateTime = 1718875821860, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 57, 53, 55, 50, 53, 97, 49, 45, 56, 102, 100, 101, 45, 52, 99, 54, 54, 45, 57, 101, 51, 49, 45, 52, 52, 49, 50, 57, 102, 56, 102, 97, 51, 48, 56]), RecordHeader(key = kafka_correlationId, value = [108, -110, 68, 116, 87, 35, 77, 109, -92, -31, -100, 53, -35, -30, -55, 54]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ab1072dc-713e-412f-bd62-aef755016f3c, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 16:30:42.647[0;39m [32m INFO [,5118ed0abf2de72ae47fe6f8b58e049b,862f7be4df7db5f1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 16:30:42.660[0;39m [32m INFO [,5118ed0abf2de72ae47fe6f8b58e049b,862f7be4df7db5f1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ab1072dc-713e-412f-bd62-aef755016f3c
[2m2024-06-20 16:31:12.717[0;39m [32m INFO [,63150c9712b06b544e1ddb93091f96b0,8fb0b383c7b01390,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 562, CreateTime = 1718875851935, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 51, 99, 102, 53, 102, 55, 49, 45, 99, 49, 97, 53, 45, 52, 48, 52, 102, 45, 56, 53, 52, 50, 45, 98, 53, 53, 97, 99, 56, 98, 56, 53, 57, 99, 56]), RecordHeader(key = kafka_correlationId, value = [51, -85, 24, 79, 124, 16, 71, -49, -102, -60, -75, -104, 4, 79, -8, -76]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e0b5fa35-8036-40b8-8368-166d782d49db, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:31:12.720[0;39m [32m INFO [,63150c9712b06b544e1ddb93091f96b0,8fb0b383c7b01390,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:31:12.727[0;39m [32m INFO [,63150c9712b06b544e1ddb93091f96b0,8fb0b383c7b01390,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e0b5fa35-8036-40b8-8368-166d782d49db
[2m2024-06-20 16:31:22.898[0;39m [32m INFO [,5286981af646ab8e4abbe9d59cf27f69,d5e964187adc9c96,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 586, CreateTime = 1718875862115, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 50, 100, 97, 48, 51, 99, 56, 45, 51, 100, 55, 53, 45, 52, 97, 52, 48, 45, 97, 99, 54, 97, 45, 50, 54, 56, 56, 101, 56, 50, 50, 55, 101, 48, 53]), RecordHeader(key = kafka_correlationId, value = [22, -99, -105, 62, 109, 119, 67, -71, -112, -96, 14, -123, -110, 59, 10, 24]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242c4d3310-5792-4cd8-8918-f93a2741f2fe, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:31:22.900[0;39m [32m INFO [,5286981af646ab8e4abbe9d59cf27f69,d5e964187adc9c96,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:31:22.909[0;39m [32m INFO [,5286981af646ab8e4abbe9d59cf27f69,d5e964187adc9c96,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242c4d3310-5792-4cd8-8918-f93a2741f2fe
[2m2024-06-20 16:31:23.058[0;39m [32m INFO [,b26fbeacbed5e501dda3f6e6cd66904b,49bec30e90bc05ef,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 566, CreateTime = 1718875862277, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 100, 101, 53, 48, 97, 55, 51, 45, 100, 52, 53, 52, 45, 52, 54, 97, 48, 45, 97, 100, 52, 100, 45, 49, 53, 99, 50, 99, 101, 50, 52, 49, 98, 53, 102]), RecordHeader(key = kafka_correlationId, value = [-99, 40, 85, 56, 7, 15, 76, -39, -104, 1, -36, -6, 21, 3, -15, -59]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240e296012-368f-4537-9f9e-0dbb59b6e958, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:31:23.060[0;39m [32m INFO [,b26fbeacbed5e501dda3f6e6cd66904b,49bec30e90bc05ef,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:31:23.066[0;39m [32m INFO [,b26fbeacbed5e501dda3f6e6cd66904b,49bec30e90bc05ef,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240e296012-368f-4537-9f9e-0dbb59b6e958
[2m2024-06-20 16:32:41.797[0;39m [32m INFO [,5a9afa55777d6720027605f3f06b4f63,1ed3cd40ff93d8a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 526, CreateTime = 1718875941012, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 100, 48, 49, 55, 52, 97, 50, 45, 100, 50, 50, 102, 45, 52, 99, 98, 57, 45, 98, 50, 50, 100, 45, 54, 102, 97, 50, 55, 48, 99, 49, 56, 97, 57, 52]), RecordHeader(key = kafka_correlationId, value = [107, -122, 42, 62, -96, -61, 76, 73, -76, -127, 114, 91, -42, 125, 12, 93]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24649ce7a6-db30-42a4-bd48-196291f4b43c, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 16:32:41.799[0;39m [32m INFO [,5a9afa55777d6720027605f3f06b4f63,1ed3cd40ff93d8a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 16:32:41.807[0;39m [32m INFO [,5a9afa55777d6720027605f3f06b4f63,1ed3cd40ff93d8a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24649ce7a6-db30-42a4-bd48-196291f4b43c
[2m2024-06-20 16:32:52.868[0;39m [32m INFO [,fac5fdc2f5071651e4e9ec86de04a530,dcfef86fce89c0cd,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 577, CreateTime = 1718875952084, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 48, 101, 100, 55, 52, 52, 101, 45, 99, 48, 98, 50, 45, 52, 53, 55, 57, 45, 98, 49, 102, 50, 45, 100, 57, 54, 54, 54, 102, 55, 98, 101, 56, 52, 50]), RecordHeader(key = kafka_correlationId, value = [-60, -11, 76, -117, 7, 27, 79, 64, -96, -52, -72, 33, 44, -30, 14, -16]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240a48bf38-690d-4358-bbf7-b6a71758370c, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:32:52.871[0;39m [32m INFO [,fac5fdc2f5071651e4e9ec86de04a530,dcfef86fce89c0cd,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:32:52.879[0;39m [32m INFO [,fac5fdc2f5071651e4e9ec86de04a530,dcfef86fce89c0cd,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240a48bf38-690d-4358-bbf7-b6a71758370c
[2m2024-06-20 16:32:53.462[0;39m [32m INFO [,8e8bcfd8f491493beb8237ee97cd78eb,3afa48d372d38b87,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 592, CreateTime = 1718875952677, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 57, 97, 56, 50, 101, 48, 101, 45, 102, 55, 52, 50, 45, 52, 55, 97, 97, 45, 97, 50, 53, 53, 45, 52, 99, 55, 49, 52, 98, 99, 97, 98, 98, 54, 51]), RecordHeader(key = kafka_correlationId, value = [40, -11, 107, -18, -116, 117, 66, -5, -95, -17, -13, 18, -55, -37, 70, -7]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d1f258d3-9239-457e-a460-05f20581def6, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-20 16:32:53.466[0;39m [32m INFO [,8e8bcfd8f491493beb8237ee97cd78eb,3afa48d372d38b87,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-20 16:32:53.475[0;39m [32m INFO [,8e8bcfd8f491493beb8237ee97cd78eb,3afa48d372d38b87,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d1f258d3-9239-457e-a460-05f20581def6
[2m2024-06-20 16:33:10.467[0;39m [32m INFO [,4edc29cf6159c70da90d3c6c6b3b55d9,88427551fc4150f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 563, CreateTime = 1718875969686, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 100, 101, 101, 52, 100, 98, 100, 45, 50, 101, 57, 99, 45, 52, 57, 56, 50, 45, 56, 52, 53, 100, 45, 100, 55, 50, 49, 53, 99, 101, 100, 49, 100, 100, 97]), RecordHeader(key = kafka_correlationId, value = [47, 19, 93, -39, -17, -21, 67, 116, -104, 125, 34, 122, 61, -76, -14, 119]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e024b580-deb0-4d8b-8e2f-adcae6887cc9, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 16:33:10.469[0;39m [32m INFO [,4edc29cf6159c70da90d3c6c6b3b55d9,88427551fc4150f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 16:33:10.474[0;39m [32m INFO [,4edc29cf6159c70da90d3c6c6b3b55d9,88427551fc4150f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e024b580-deb0-4d8b-8e2f-adcae6887cc9
[2m2024-06-20 16:33:15.499[0;39m [32m INFO [,21474b5efc8a2b48cb9c5826ef6526f5,15a848d06f18a110,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 567, CreateTime = 1718875974706, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 102, 55, 55, 54, 100, 99, 98, 45, 49, 49, 100, 102, 45, 52, 97, 56, 55, 45, 56, 50, 50, 101, 45, 99, 54, 53, 55, 55, 102, 48, 98, 53, 97, 53, 102]), RecordHeader(key = kafka_correlationId, value = [-2, -117, 27, 5, -1, 116, 78, 80, -94, 51, 66, -81, -95, 95, 6, -78]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ea1a813b-f2e8-4abe-9d87-0c7e5f82f5a9, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 16:33:15.501[0;39m [32m INFO [,21474b5efc8a2b48cb9c5826ef6526f5,15a848d06f18a110,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 16:33:15.507[0;39m [32m INFO [,21474b5efc8a2b48cb9c5826ef6526f5,15a848d06f18a110,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ea1a813b-f2e8-4abe-9d87-0c7e5f82f5a9
[2m2024-06-20 16:33:43.310[0;39m [32m INFO [,7e887ba520e760ef4b9a4f00d7f2004a,7cce4e3b2acd79ed,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 578, CreateTime = 1718876002524, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 98, 100, 52, 56, 101, 48, 102, 45, 102, 53, 48, 53, 45, 52, 54, 53, 52, 45, 57, 56, 102, 55, 45, 100, 48, 97, 50, 100, 100, 53, 101, 54, 101, 55, 56]), RecordHeader(key = kafka_correlationId, value = [-45, 98, -94, 14, 60, 81, 77, -49, -81, -55, -34, 102, 82, -34, 71, 110]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d3d855b0-2e33-46d7-908e-b124a55fc8f3, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 16:33:43.312[0;39m [32m INFO [,7e887ba520e760ef4b9a4f00d7f2004a,7cce4e3b2acd79ed,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 16:33:43.319[0;39m [32m INFO [,7e887ba520e760ef4b9a4f00d7f2004a,7cce4e3b2acd79ed,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d3d855b0-2e33-46d7-908e-b124a55fc8f3
[2m2024-06-20 16:34:03.352[0;39m [32m INFO [,52bf29d5f2d6587868cd929c0ab4a70f,f8ee07daba93abc5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 593, CreateTime = 1718876022569, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 102, 52, 54, 50, 56, 101, 102, 45, 98, 55, 98, 102, 45, 52, 53, 51, 53, 45, 56, 53, 48, 51, 45, 100, 97, 52, 54, 55, 52, 97, 102, 55, 48, 54, 57]), RecordHeader(key = kafka_correlationId, value = [49, 36, 116, -31, 26, 124, 79, -98, -75, 109, -67, -120, -125, -4, -110, 73]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2493fdf6ae-4dd2-4efe-900b-cd46f14a9850, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:34:03.355[0;39m [32m INFO [,52bf29d5f2d6587868cd929c0ab4a70f,f8ee07daba93abc5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:34:03.365[0;39m [32m INFO [,52bf29d5f2d6587868cd929c0ab4a70f,f8ee07daba93abc5,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2493fdf6ae-4dd2-4efe-900b-cd46f14a9850
[2m2024-06-20 16:35:03.937[0;39m [32m INFO [,67d58f4eab757fc85960824d18667630,e30be18d85847adf,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 598, CreateTime = 1718876083155, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 102, 57, 54, 52, 55, 54, 101, 45, 55, 55, 53, 56, 45, 52, 55, 99, 101, 45, 56, 49, 52, 48, 45, 101, 98, 52, 97, 57, 49, 50, 99, 48, 54, 99, 54]), RecordHeader(key = kafka_correlationId, value = [73, 56, 64, -13, 32, 101, 76, 11, -87, 81, -6, -37, -52, -123, -112, -43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24022fc704-c3c7-4de2-877f-b91e64cb00e5, value = {"customerNo":"203121906","username":"lv24"})
[2m2024-06-20 16:35:03.938[0;39m [32m INFO [,67d58f4eab757fc85960824d18667630,e30be18d85847adf,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121906, username=lv24)
[2m2024-06-20 16:35:03.945[0;39m [32m INFO [,67d58f4eab757fc85960824d18667630,e30be18d85847adf,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121906","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24022fc704-c3c7-4de2-877f-b91e64cb00e5
[2m2024-06-20 16:35:39.653[0;39m [32m INFO [,28c37b862d0881a03d4364c11bdd89db,898ffe40d2efbf4d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 575, CreateTime = 1718876118869, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 51, 52, 51, 54, 98, 52, 50, 45, 49, 102, 57, 48, 45, 52, 100, 100, 50, 45, 98, 53, 49, 53, 45, 56, 100, 102, 50, 54, 50, 48, 50, 98, 51, 97, 50]), RecordHeader(key = kafka_correlationId, value = [56, -92, -30, -65, 121, 14, 69, 28, -93, 117, -128, -125, -54, 55, -47, 20]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d8a9cf7a-7229-412d-a4a9-512c4056a98a, value = {"customerNo":"203122041","username":"lv24"})
[2m2024-06-20 16:35:39.656[0;39m [32m INFO [,28c37b862d0881a03d4364c11bdd89db,898ffe40d2efbf4d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122041, username=lv24)
[2m2024-06-20 16:35:39.665[0;39m [32m INFO [,28c37b862d0881a03d4364c11bdd89db,898ffe40d2efbf4d,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122041","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d8a9cf7a-7229-412d-a4a9-512c4056a98a
[2m2024-06-20 16:36:25.464[0;39m [32m INFO [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 557, CreateTime = 1718876185429, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 102, 52, 55, 57, 57, 53, 55, 45, 53, 100, 57, 48, 45, 52, 52, 100, 53, 45, 57, 51, 53, 56, 45, 97, 50, 49, 98, 52, 55, 53, 99, 55, 54, 97, 102]), RecordHeader(key = kafka_correlationId, value = [14, -30, -61, 77, 3, -120, 78, -90, -114, -102, -60, -22, -101, -99, -93, 53]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETf1254b11-b6ca-48c9-8cd2-ccd5a9d30980, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 16:36:25.464[0;39m [32m INFO [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 16:36:25.471[0;39m [32mDEBUG [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:36:25.484[0;39m [32m INFO [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    5909100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    6027100 nanoseconds spent preparing 1 JDBC statements;
    6832600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:36:25.491[0;39m [32m INFO [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=MID_EWALLET, appId=456745676, customerNo=null, whiteListIp=null, branchCode=null, secretKey=bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0=)
[2m2024-06-20 16:36:25.492[0;39m [32m INFO [,fa650b9778a4805d,9c134bc3688356a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETf1254b11-b6ca-48c9-8cd2-ccd5a9d30980
[2m2024-06-20 16:37:52.816[0;39m [32m INFO [,470853978cb02a98e4438e1a4b76e050,68574a66fda9b3c1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 594, CreateTime = 1718876252025, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 54, 48, 55, 49, 49, 100, 51, 45, 54, 97, 101, 49, 45, 52, 55, 52, 50, 45, 97, 57, 54, 55, 45, 100, 51, 50, 54, 54, 101, 97, 51, 55, 100, 49, 101]), RecordHeader(key = kafka_correlationId, value = [80, 97, 72, 19, -50, 54, 69, -55, -107, -68, -11, 24, -113, 19, -35, -86]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2434b4bdfb-8b25-420e-9e3f-725071157567, value = {"customerNo":"203122222","username":"lv24"})
[2m2024-06-20 16:37:52.817[0;39m [32m INFO [,470853978cb02a98e4438e1a4b76e050,68574a66fda9b3c1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122222, username=lv24)
[2m2024-06-20 16:37:52.823[0;39m [32m INFO [,470853978cb02a98e4438e1a4b76e050,68574a66fda9b3c1,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122222","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2434b4bdfb-8b25-420e-9e3f-725071157567
[2m2024-06-20 16:39:22.994[0;39m [32m INFO [,c3ead8e9901206ecf829f040cff1b151,4fb48de1af2a3641,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 543, CreateTime = 1718876342209, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 102, 102, 101, 50, 101, 101, 97, 45, 52, 48, 97, 97, 45, 52, 50, 55, 55, 45, 98, 102, 50, 57, 45, 97, 53, 101, 55, 52, 49, 100, 51, 102, 102, 53, 99]), RecordHeader(key = kafka_correlationId, value = [23, -112, -64, -125, -48, 88, 69, 29, -93, 112, 94, -77, -106, 108, 111, 4]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240832353d-b9b9-4515-ab84-fcb7505809fa, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:39:22.996[0;39m [32m INFO [,c3ead8e9901206ecf829f040cff1b151,4fb48de1af2a3641,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:39:23.004[0;39m [32m INFO [,c3ead8e9901206ecf829f040cff1b151,4fb48de1af2a3641,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240832353d-b9b9-4515-ab84-fcb7505809fa
[2m2024-06-20 16:39:23.009[0;39m [32m INFO [,db14d7c570d28253d09a1c5e03b57af3,406f0ee5c17a638e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 558, CreateTime = 1718876342224, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 100, 57, 52, 52, 51, 53, 54, 45, 49, 56, 57, 53, 45, 52, 98, 98, 100, 45, 57, 50, 50, 50, 45, 57, 52, 52, 100, 97, 56, 99, 100, 57, 55, 98, 55]), RecordHeader(key = kafka_correlationId, value = [-57, -103, -97, 66, 125, 0, 73, 3, -126, 15, 39, -49, 4, -50, 28, 24]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e2496be5-273f-4da6-82bb-5b103910c893, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:39:23.010[0;39m [32m INFO [,db14d7c570d28253d09a1c5e03b57af3,406f0ee5c17a638e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:39:23.017[0;39m [32m INFO [,db14d7c570d28253d09a1c5e03b57af3,406f0ee5c17a638e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e2496be5-273f-4da6-82bb-5b103910c893
[2m2024-06-20 16:39:23.088[0;39m [32m INFO [,74d234793954441c1fbe712cc7ccd21b,31dd707f5141f119,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 559, CreateTime = 1718876342299, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 100, 56, 55, 55, 57, 51, 52, 45, 57, 98, 53, 56, 45, 52, 50, 52, 97, 45, 98, 100, 57, 51, 45, 100, 51, 100, 97, 52, 99, 97, 98, 100, 53, 55, 101]), RecordHeader(key = kafka_correlationId, value = [-112, 101, 65, 82, 90, -113, 65, -110, -126, 102, 90, -114, 120, -28, -106, 44]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b899e8db-d3de-478e-a224-b04da5d49643, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:39:23.090[0;39m [32m INFO [,74d234793954441c1fbe712cc7ccd21b,31dd707f5141f119,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:39:23.099[0;39m [32m INFO [,74d234793954441c1fbe712cc7ccd21b,31dd707f5141f119,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b899e8db-d3de-478e-a224-b04da5d49643
[2m2024-06-20 16:41:37.060[0;39m [32m INFO [,92e0b4cb8db21fc83be695ffc03cdc95,4c83a2de5bdfa3f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 564, CreateTime = 1718876476271, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 98, 50, 57, 55, 53, 98, 100, 45, 52, 99, 52, 98, 45, 52, 50, 51, 57, 45, 98, 52, 56, 102, 45, 53, 48, 102, 49, 55, 52, 49, 97, 98, 50, 102, 97]), RecordHeader(key = kafka_correlationId, value = [-98, 41, -42, -30, 81, 26, 75, 103, -68, -72, -80, -125, 81, -62, -84, -120]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244464d500-5134-41c9-9952-ef08cf2d5a92, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:41:37.063[0;39m [32m INFO [,92e0b4cb8db21fc83be695ffc03cdc95,4c83a2de5bdfa3f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:41:37.072[0;39m [32m INFO [,92e0b4cb8db21fc83be695ffc03cdc95,4c83a2de5bdfa3f2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244464d500-5134-41c9-9952-ef08cf2d5a92
[2m2024-06-20 16:42:04.814[0;39m [32m INFO [,ae4b6f0fb5faced4774f00962eb52a93,0ddee795f827f2ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 544, CreateTime = 1718876504029, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 51, 101, 49, 102, 100, 57, 57, 45, 48, 51, 54, 97, 45, 52, 102, 99, 56, 45, 57, 102, 102, 49, 45, 53, 98, 102, 97, 52, 56, 57, 101, 55, 51, 101, 57]), RecordHeader(key = kafka_correlationId, value = [-2, -32, -121, 72, 58, 71, 77, 123, -80, -119, 110, 32, -112, 78, 20, -114]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247f6e555c-fdfe-4cf1-a9e4-14b00b930af0, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:42:04.815[0;39m [32m INFO [,ae4b6f0fb5faced4774f00962eb52a93,0ddee795f827f2ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:42:04.820[0;39m [32m INFO [,ae4b6f0fb5faced4774f00962eb52a93,0ddee795f827f2ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247f6e555c-fdfe-4cf1-a9e4-14b00b930af0
[2m2024-06-20 16:42:04.823[0;39m [32m INFO [,f88024de1dd0e3be025418a01c85d2ac,65951fcd8f4dff34,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 599, CreateTime = 1718876504037, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 100, 56, 51, 54, 50, 52, 52, 45, 98, 101, 57, 102, 45, 52, 49, 55, 56, 45, 97, 51, 98, 53, 45, 56, 54, 99, 49, 49, 55, 53, 53, 54, 55, 101, 97]), RecordHeader(key = kafka_correlationId, value = [72, -42, -79, -109, 25, -28, 75, 28, -76, 105, -17, 11, -9, -128, -20, 102]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2482c95013-804b-45ae-bd12-6b02aecf628c, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:42:04.824[0;39m [32m INFO [,f88024de1dd0e3be025418a01c85d2ac,65951fcd8f4dff34,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:42:04.829[0;39m [32m INFO [,f88024de1dd0e3be025418a01c85d2ac,65951fcd8f4dff34,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2482c95013-804b-45ae-bd12-6b02aecf628c
[2m2024-06-20 16:42:05.007[0;39m [32m INFO [,0d32e315f82f08ab51907edc3d44d664,4ccf6424636427a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 527, CreateTime = 1718876504222, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 49, 52, 97, 49, 54, 55, 54, 45, 98, 50, 101, 57, 45, 52, 55, 101, 99, 45, 97, 52, 53, 102, 45, 97, 52, 100, 99, 97, 101, 50, 102, 52, 54, 101, 48]), RecordHeader(key = kafka_correlationId, value = [-104, 106, -94, -23, -91, -3, 76, -122, -70, -22, -59, 7, 106, 65, -10, 6]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b194c52c-2267-46e2-875a-7e9ec842026d, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:42:05.010[0;39m [32m INFO [,0d32e315f82f08ab51907edc3d44d664,4ccf6424636427a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:42:05.015[0;39m [32m INFO [,0d32e315f82f08ab51907edc3d44d664,4ccf6424636427a8,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b194c52c-2267-46e2-875a-7e9ec842026d
[2m2024-06-20 16:42:05.422[0;39m [32m INFO [,4e9da5031062aad8474f8ee3a9cff8a6,8cbcd52a7da80f70,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 576, CreateTime = 1718876504638, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 99, 101, 100, 99, 49, 53, 57, 45, 98, 49, 48, 51, 45, 52, 101, 102, 50, 45, 98, 48, 99, 53, 45, 100, 56, 100, 55, 54, 52, 48, 50, 102, 55, 49, 50]), RecordHeader(key = kafka_correlationId, value = [-94, -95, 120, -26, 44, 60, 70, 9, -114, 126, -16, -79, 84, 25, -29, -61]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249c7c3212-0819-4fef-b952-e97885dbc9a5, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:42:05.423[0;39m [32m INFO [,4e9da5031062aad8474f8ee3a9cff8a6,8cbcd52a7da80f70,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:42:05.430[0;39m [32m INFO [,4e9da5031062aad8474f8ee3a9cff8a6,8cbcd52a7da80f70,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249c7c3212-0819-4fef-b952-e97885dbc9a5
[2m2024-06-20 16:42:36.577[0;39m [32m INFO [,897e48d96d962c14c518f086610940c1,ce0c9845e0f58729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 595, CreateTime = 1718876535788, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 52, 51, 102, 57, 54, 50, 49, 45, 52, 102, 53, 54, 45, 52, 54, 49, 100, 45, 57, 50, 100, 98, 45, 102, 53, 52, 52, 55, 50, 54, 48, 99, 100, 52, 51]), RecordHeader(key = kafka_correlationId, value = [117, 33, 67, -47, 117, -69, 67, 86, -94, 77, 110, 127, 1, 21, -112, 20]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248ea9b7f7-086a-4612-8725-f4a5fc47e597, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:42:36.578[0;39m [32m INFO [,897e48d96d962c14c518f086610940c1,ce0c9845e0f58729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:42:36.586[0;39m [32m INFO [,897e48d96d962c14c518f086610940c1,ce0c9845e0f58729,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248ea9b7f7-086a-4612-8725-f4a5fc47e597
[2m2024-06-20 16:43:23.076[0;39m [32m INFO [,5705d03b4dae8ad7904b7b16198367e9,cbd0d6b08e91029e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 565, CreateTime = 1718876582283, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 52, 98, 102, 98, 102, 54, 49, 45, 101, 57, 51, 102, 45, 52, 54, 50, 48, 45, 56, 49, 57, 101, 45, 101, 97, 56, 57, 49, 52, 101, 48, 101, 53, 99, 97]), RecordHeader(key = kafka_correlationId, value = [117, 94, -10, -42, -104, -96, 74, 22, -125, -123, 29, 43, -29, 98, -104, 71]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ece43124-9345-4c0f-8abe-ef085079c990, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:43:23.078[0;39m [32m INFO [,5705d03b4dae8ad7904b7b16198367e9,cbd0d6b08e91029e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:43:23.104[0;39m [32m INFO [,5705d03b4dae8ad7904b7b16198367e9,cbd0d6b08e91029e,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ece43124-9345-4c0f-8abe-ef085079c990
[2m2024-06-20 16:43:23.178[0;39m [32m INFO [,a83985dae86aaea26c4150d9a5ddc9be,8de54db65455b4ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 528, CreateTime = 1718876582391, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 51, 97, 53, 49, 99, 100, 52, 45, 56, 101, 101, 51, 45, 52, 102, 52, 102, 45, 56, 55, 49, 54, 45, 50, 99, 53, 102, 102, 98, 52, 100, 56, 51, 56, 99]), RecordHeader(key = kafka_correlationId, value = [-36, 85, 82, 2, -13, -11, 67, -94, -71, -77, -68, 98, -87, -3, 49, 42]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24321230e1-d821-4d9a-b604-7ccec3f9cecb, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:43:23.180[0;39m [32m INFO [,a83985dae86aaea26c4150d9a5ddc9be,8de54db65455b4ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:43:23.189[0;39m [32m INFO [,a83985dae86aaea26c4150d9a5ddc9be,8de54db65455b4ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24321230e1-d821-4d9a-b604-7ccec3f9cecb
[2m2024-06-20 16:44:51.278[0;39m [32m INFO [,719b7ebd910f82cbcfc51175ad793ff0,2ecbaf7a661404aa,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 596, CreateTime = 1718876670500, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 51, 54, 53, 50, 56, 57, 53, 45, 55, 48, 56, 50, 45, 52, 99, 56, 99, 45, 57, 51, 56, 56, 45, 49, 48, 52, 101, 102, 48, 53, 99, 55, 101, 53, 54]), RecordHeader(key = kafka_correlationId, value = [34, 13, -25, -86, 14, -12, 68, 9, -101, 95, 18, -70, -40, 126, -97, 74]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241c837964-f566-46e0-9641-62f83402815e, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:44:51.286[0;39m [32m INFO [,719b7ebd910f82cbcfc51175ad793ff0,2ecbaf7a661404aa,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:44:51.294[0;39m [32m INFO [,719b7ebd910f82cbcfc51175ad793ff0,2ecbaf7a661404aa,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241c837964-f566-46e0-9641-62f83402815e
[2m2024-06-20 16:44:51.330[0;39m [32m INFO [,f8d76f49ad6da9041dd64565ee93a3d9,008aabeda4b318cc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 577, CreateTime = 1718876670550, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 52, 98, 52, 54, 99, 101, 56, 45, 99, 56, 102, 101, 45, 52, 101, 51, 48, 45, 57, 55, 54, 99, 45, 50, 100, 48, 102, 51, 102, 51, 50, 51, 102, 100, 57]), RecordHeader(key = kafka_correlationId, value = [8, 101, -125, -119, 76, 29, 64, -62, -114, -35, -56, 82, 36, -126, 59, -33]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240f761575-6a2e-4d56-b4a2-509aaa639be4, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:44:51.330[0;39m [32m INFO [,f8d76f49ad6da9041dd64565ee93a3d9,008aabeda4b318cc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:44:51.337[0;39m [32m INFO [,f8d76f49ad6da9041dd64565ee93a3d9,008aabeda4b318cc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240f761575-6a2e-4d56-b4a2-509aaa639be4
[2m2024-06-20 16:44:51.347[0;39m [32m INFO [,d64508d71be1b6b57b74340688c2771c,d1bfcaf462bdd9ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 568, CreateTime = 1718876670561, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 101, 48, 50, 54, 51, 48, 102, 45, 98, 49, 102, 97, 45, 52, 100, 48, 102, 45, 57, 97, 56, 99, 45, 99, 97, 100, 49, 98, 48, 51, 101, 99, 55, 50, 54]), RecordHeader(key = kafka_correlationId, value = [115, -124, 101, -7, -48, -115, 69, -121, -122, -61, -100, 127, -109, -2, 21, -71]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244a0a7828-d826-4fc1-bf7e-004fa3a905de, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:44:51.347[0;39m [32m INFO [,d64508d71be1b6b57b74340688c2771c,d1bfcaf462bdd9ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:44:51.353[0;39m [32m INFO [,d64508d71be1b6b57b74340688c2771c,d1bfcaf462bdd9ee,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244a0a7828-d826-4fc1-bf7e-004fa3a905de
[2m2024-06-20 16:44:51.550[0;39m [32m INFO [,6dc878e7446a82907fc7d8fdc7ff3dc7,f72487fe39ae466a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 587, CreateTime = 1718876670766, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 99, 51, 57, 97, 54, 48, 99, 45, 100, 100, 52, 48, 45, 52, 100, 55, 102, 45, 98, 53, 53, 51, 45, 100, 51, 56, 49, 55, 98, 56, 57, 55, 51, 56, 51]), RecordHeader(key = kafka_correlationId, value = [-8, 122, -93, -51, -21, 109, 74, 95, -113, 88, 14, 89, 114, 92, 86, -4]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c6ee8dc4-ce06-4ea8-9a03-c274178a3ad4, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:44:51.550[0;39m [32m INFO [,6dc878e7446a82907fc7d8fdc7ff3dc7,f72487fe39ae466a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:44:51.558[0;39m [32m INFO [,6dc878e7446a82907fc7d8fdc7ff3dc7,f72487fe39ae466a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c6ee8dc4-ce06-4ea8-9a03-c274178a3ad4
[2m2024-06-20 16:44:52.629[0;39m [32m INFO [,8e3c9b1922cebe0fe59d843aeb9b38f5,5a1754835d64d4c7,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 588, CreateTime = 1718876671842, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 54, 48, 51, 52, 100, 49, 57, 45, 56, 52, 49, 51, 45, 52, 99, 53, 100, 45, 98, 55, 52, 50, 45, 51, 57, 53, 54, 102, 99, 101, 57, 52, 100, 54, 51]), RecordHeader(key = kafka_correlationId, value = [101, 81, 98, 67, 29, -107, 74, 12, -89, -3, 127, 69, -67, 90, -65, 57]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243bf93885-6414-4238-8afa-0081bf4f10b6, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 16:44:52.629[0;39m [32m INFO [,8e3c9b1922cebe0fe59d843aeb9b38f5,5a1754835d64d4c7,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 16:44:52.637[0;39m [32m INFO [,8e3c9b1922cebe0fe59d843aeb9b38f5,5a1754835d64d4c7,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243bf93885-6414-4238-8afa-0081bf4f10b6
[2m2024-06-20 16:45:54.113[0;39m [32m INFO [,53b3b52e2cd248fabeb478b0a61c498a,24b64f7754aafedc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 578, CreateTime = 1718876733327, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 48, 100, 101, 98, 54, 99, 51, 45, 51, 56, 54, 55, 45, 52, 98, 48, 56, 45, 57, 57, 101, 54, 45, 98, 54, 55, 100, 100, 100, 52, 54, 100, 100, 51, 51]), RecordHeader(key = kafka_correlationId, value = [-13, -31, 97, -127, -82, -14, 74, 40, -69, -110, -20, -121, 68, 92, -46, -13]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c899e7c8-fb20-47f3-bc8f-7741582f9206, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:45:54.116[0;39m [32m INFO [,53b3b52e2cd248fabeb478b0a61c498a,24b64f7754aafedc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:45:54.123[0;39m [32m INFO [,53b3b52e2cd248fabeb478b0a61c498a,24b64f7754aafedc,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c899e7c8-fb20-47f3-bc8f-7741582f9206
[2m2024-06-20 16:45:54.839[0;39m [32m INFO [,31dca0e38e221619467acf0ebada6962,aea8708c9ea8c373,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 579, CreateTime = 1718876734053, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 50, 100, 99, 50, 57, 99, 49, 45, 55, 98, 50, 49, 45, 52, 100, 54, 48, 45, 98, 100, 48, 56, 45, 52, 57, 102, 97, 51, 101, 48, 102, 48, 99, 56, 49]), RecordHeader(key = kafka_correlationId, value = [19, 119, -16, 62, 105, 5, 70, 70, -101, -41, -90, -127, -28, -57, 60, -41]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24553009ec-3520-4603-9fb0-0fac107daaba, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:45:54.842[0;39m [32m INFO [,31dca0e38e221619467acf0ebada6962,aea8708c9ea8c373,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:45:54.912[0;39m [32m INFO [,31dca0e38e221619467acf0ebada6962,aea8708c9ea8c373,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24553009ec-3520-4603-9fb0-0fac107daaba
[2m2024-06-20 16:45:54.972[0;39m [32m INFO [,6a60b09a2b4e1d2b455a1e5eeb759f62,cda4179ea12f0a7c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 579, CreateTime = 1718876734185, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 101, 53, 50, 98, 57, 48, 101, 45, 101, 52, 98, 98, 45, 52, 52, 54, 51, 45, 98, 102, 54, 55, 45, 49, 98, 54, 52, 56, 50, 56, 102, 53, 97, 49, 53]), RecordHeader(key = kafka_correlationId, value = [91, -107, 1, -46, 9, 87, 70, 17, -103, -62, 53, -43, -35, -32, -77, 17]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24997406b9-3389-4980-b4b8-cd919d03e800, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:45:54.975[0;39m [32m INFO [,6a60b09a2b4e1d2b455a1e5eeb759f62,cda4179ea12f0a7c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:45:54.984[0;39m [32m INFO [,6a60b09a2b4e1d2b455a1e5eeb759f62,cda4179ea12f0a7c,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24997406b9-3389-4980-b4b8-cd919d03e800
[2m2024-06-20 16:45:55.162[0;39m [32m INFO [,a2851738290fff6206ee34b33bfe097d,68952cb4c807360a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 529, CreateTime = 1718876734375, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 52, 101, 100, 49, 51, 97, 97, 45, 97, 52, 98, 99, 45, 52, 50, 99, 54, 45, 97, 53, 48, 48, 45, 52, 49, 101, 50, 52, 99, 57, 100, 50, 56, 49, 48]), RecordHeader(key = kafka_correlationId, value = [-70, -123, -118, -117, -127, 88, 70, 118, -113, -89, 109, -106, -92, 74, 15, 69]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2403bcd0dd-3cdc-48e3-9722-2502687c04d9, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:45:55.174[0;39m [32m INFO [,a2851738290fff6206ee34b33bfe097d,68952cb4c807360a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:45:55.186[0;39m [32m INFO [,a2851738290fff6206ee34b33bfe097d,68952cb4c807360a,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2403bcd0dd-3cdc-48e3-9722-2502687c04d9
[2m2024-06-20 16:48:37.463[0;39m [32m INFO [,5e5f8eedb1b728f7,4289fbbad94f047f,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 580, CreateTime = 1718876914120, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 99, 49, 53, 49, 101, 101, 49, 45, 102, 98, 53, 52, 45, 52, 97, 53, 48, 45, 97, 57, 101, 52, 45, 51, 102, 48, 101, 56, 101, 50, 102, 54, 102, 51, 56]), RecordHeader(key = kafka_correlationId, value = [107, 19, 7, 83, -82, -106, 67, -12, -80, 81, 33, -57, -38, -66, 19, -34]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET47c9110a-20ae-409a-a3d0-c7e7fbd58d58, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 16:48:37.465[0;39m [32m INFO [,5e5f8eedb1b728f7,4289fbbad94f047f,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 16:48:37.471[0;39m [32m INFO [,5e5f8eedb1b728f7,4289fbbad94f047f,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET47c9110a-20ae-409a-a3d0-c7e7fbd58d58
[2m2024-06-20 16:49:22.674[0;39m [32m INFO [,82cea8ae22de0114,13bd0acae4d864a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 530, CreateTime = 1718876962656, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 97, 52, 51, 100, 52, 55, 98, 45, 51, 49, 99, 55, 45, 52, 48, 52, 55, 45, 57, 57, 49, 49, 45, 53, 56, 99, 101, 98, 55, 50, 101, 56, 49, 100, 53]), RecordHeader(key = kafka_correlationId, value = [36, -109, -90, 51, 93, 114, 68, 88, -103, -109, 80, 66, 96, 123, -83, -65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET09a95223-55cc-4bba-83ac-e1f43a7e217e, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 16:49:22.677[0;39m [32m INFO [,82cea8ae22de0114,13bd0acae4d864a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 16:49:22.685[0;39m [32m INFO [,82cea8ae22de0114,13bd0acae4d864a2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET09a95223-55cc-4bba-83ac-e1f43a7e217e
[2m2024-06-20 16:49:23.839[0;39m [32m INFO [,8782eda7720d8340,9e3613d33e0b6910,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 597, CreateTime = 1718876943051, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 56, 52, 53, 102, 50, 54, 50, 45, 56, 48, 55, 53, 45, 52, 51, 101, 99, 45, 56, 50, 97, 99, 45, 100, 98, 51, 98, 55, 54, 101, 97, 48, 99, 56, 50]), RecordHeader(key = kafka_correlationId, value = [-54, -1, 119, 64, -122, 104, 71, -71, -102, -8, -2, -115, -19, 60, 101, -41]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd40b70d8b-430f-4aa7-8352-ef58393eef17, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 16:49:23.904[0;39m [32m INFO [,8782eda7720d8340,9e3613d33e0b6910,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 16:49:23.911[0;39m [32m INFO [,8782eda7720d8340,9e3613d33e0b6910,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd40b70d8b-430f-4aa7-8352-ef58393eef17
[2m2024-06-20 16:49:53.235[0;39m [32m INFO [,7d366fbf4d836687,ccd9d7bcbb1e46e2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 569, CreateTime = 1718876993233, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 55, 98, 97, 98, 50, 48, 50, 45, 56, 51, 55, 57, 45, 52, 48, 53, 102, 45, 97, 52, 98, 56, 45, 97, 48, 56, 101, 100, 55, 57, 97, 55, 57, 48, 55]), RecordHeader(key = kafka_correlationId, value = [-24, -74, 112, -44, -59, 124, 79, 101, -91, 111, -43, 81, 96, -102, -63, -86]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET6eb8c5c1-440b-4275-8d91-34480e8c6dab, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 16:49:53.300[0;39m [32m INFO [,7d366fbf4d836687,ccd9d7bcbb1e46e2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 16:49:53.308[0;39m [32m INFO [,7d366fbf4d836687,ccd9d7bcbb1e46e2,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET6eb8c5c1-440b-4275-8d91-34480e8c6dab
[2m2024-06-20 16:50:24.985[0;39m [32m INFO [,8989c0d134a658fd968d9623ab0beb0b,b6cecd887bcc1be2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 545, CreateTime = 1718877004196, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 55, 56, 100, 98, 99, 49, 51, 45, 98, 100, 57, 55, 45, 52, 100, 57, 98, 45, 97, 51, 56, 97, 45, 49, 99, 52, 99, 99, 52, 51, 99, 50, 101, 97, 101]), RecordHeader(key = kafka_correlationId, value = [97, -15, 108, -44, 42, -56, 78, 117, -87, -119, -64, 68, 93, -112, 81, 57]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2404810e78-13ec-4610-b72f-9b0441058d43, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:50:25.047[0;39m [32m INFO [,8989c0d134a658fd968d9623ab0beb0b,b6cecd887bcc1be2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:50:25.054[0;39m [32m INFO [,8989c0d134a658fd968d9623ab0beb0b,b6cecd887bcc1be2,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2404810e78-13ec-4610-b72f-9b0441058d43
[2m2024-06-20 16:50:53.265[0;39m [32m INFO [,0979022e9c1cfcce04712d375a6865fb,a36cc7ea11260fda,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 560, CreateTime = 1718877032478, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 53, 102, 48, 51, 51, 97, 57, 45, 51, 55, 48, 49, 45, 52, 50, 97, 54, 45, 98, 101, 49, 49, 45, 102, 57, 48, 48, 51, 100, 98, 56, 54, 51, 101, 49]), RecordHeader(key = kafka_correlationId, value = [-11, 123, -44, 69, -43, -116, 76, 99, -65, -114, 69, 97, 111, -39, -19, -97]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2473013f65-7a15-4351-b662-dfe7786346cb, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:50:53.267[0;39m [32m INFO [,0979022e9c1cfcce04712d375a6865fb,a36cc7ea11260fda,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:50:53.272[0;39m [32m INFO [,0979022e9c1cfcce04712d375a6865fb,a36cc7ea11260fda,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2473013f65-7a15-4351-b662-dfe7786346cb
[2m2024-06-20 16:54:32.303[0;39m [32m INFO [,2be1ad49f9fe5291,a4c7795635de1374,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 8, leaderEpoch = 0, offset = 598, CreateTime = 1718877272283, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 97, 57, 54, 51, 55, 54, 97, 45, 99, 101, 97, 56, 45, 52, 56, 52, 52, 45, 98, 97, 52, 53, 45, 54, 52, 98, 51, 49, 50, 56, 102, 51, 98, 98, 102]), RecordHeader(key = kafka_correlationId, value = [-31, -31, -34, 88, -127, -11, 79, 72, -83, -42, -38, 34, 49, 22, -4, -32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET33208776-5f99-44d6-9bf8-1c484e9aab0b, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 16:54:32.306[0;39m [32m INFO [,2be1ad49f9fe5291,a4c7795635de1374,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 16:54:32.311[0;39m [32m INFO [,2be1ad49f9fe5291,a4c7795635de1374,true][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET33208776-5f99-44d6-9bf8-1c484e9aab0b
[2m2024-06-20 16:55:01.211[0;39m [32m INFO [,a0f83cca04bff43173e293fb37771452,c9cf8481bfe2f747,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 14, leaderEpoch = 0, offset = 570, CreateTime = 1718877280419, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 101, 52, 98, 101, 57, 49, 56, 45, 52, 51, 52, 49, 45, 52, 99, 56, 56, 45, 56, 99, 51, 102, 45, 49, 55, 56, 52, 50, 53, 99, 51, 53, 57, 53, 102]), RecordHeader(key = kafka_correlationId, value = [-21, -1, 14, -69, -92, 84, 73, -20, -110, 68, -25, -56, -89, -114, 32, -15]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c7e012b8-51ca-463b-b09a-91ae64861a87, value = {"customerNo":"203122199","username":"lv24"})
[2m2024-06-20 16:55:01.277[0;39m [32m INFO [,a0f83cca04bff43173e293fb37771452,c9cf8481bfe2f747,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122199, username=lv24)
[2m2024-06-20 16:55:01.290[0;39m [32m INFO [,a0f83cca04bff43173e293fb37771452,c9cf8481bfe2f747,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122199","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c7e012b8-51ca-463b-b09a-91ae64861a87
[2m2024-06-20 16:56:07.094[0;39m [32m INFO [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 546, CreateTime = 1718877346308, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 101, 51, 51, 53, 102, 101, 97, 45, 52, 50, 48, 49, 45, 52, 53, 48, 102, 45, 97, 101, 101, 102, 45, 48, 52, 100, 102, 55, 55, 100, 52, 48, 97, 52, 50]), RecordHeader(key = kafka_correlationId, value = [-12, 119, 22, 54, 19, 29, 77, -100, -117, -113, 125, 48, -30, 104, 49, -123]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241669fec4-5e45-49c5-bb8f-cd91e053d3ac, value = {"customerNo":"100005607","username":"lv24"})
[2m2024-06-20 16:56:07.154[0;39m [32m INFO [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=100005607, username=lv24)
[2m2024-06-20 16:56:07.162[0;39m [32mDEBUG [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 16:56:07.178[0;39m [32m INFO [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    8847500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    8980100 nanoseconds spent preparing 1 JDBC statements;
    6548900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 16:56:07.185[0;39m [32m INFO [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=100005607, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 16:56:07.186[0;39m [32m INFO [,e9016c27c497a607c134c18859282b79,5c1161fdc61f2c58,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"100005607","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241669fec4-5e45-49c5-bb8f-cd91e053d3ac
[2m2024-06-20 16:56:07.315[0;39m [32m INFO [,1babae0902e83f583ca48e3af4d48da9,8f21faeab499eb41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 561, CreateTime = 1718877346520, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 49, 97, 97, 49, 51, 56, 57, 45, 100, 101, 51, 56, 45, 52, 53, 51, 52, 45, 97, 98, 98, 50, 45, 101, 97, 51, 50, 48, 54, 52, 102, 57, 100, 49, 52]), RecordHeader(key = kafka_correlationId, value = [3, -128, -29, -91, 75, 103, 66, 41, -113, 108, -105, 14, 4, 62, -75, 38]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24dcee92ab-08f4-45db-8c1d-a0b2f1f1e267, value = {"customerNo":"100005607","username":"lv24"})
[2m2024-06-20 16:56:07.317[0;39m [32m INFO [,1babae0902e83f583ca48e3af4d48da9,8f21faeab499eb41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=100005607, username=lv24)
[2m2024-06-20 16:56:07.381[0;39m [32m INFO [,1babae0902e83f583ca48e3af4d48da9,8f21faeab499eb41,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"100005607","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24dcee92ab-08f4-45db-8c1d-a0b2f1f1e267
[2m2024-06-20 16:56:07.684[0;39m [32m INFO [,b226355d2a71f4812b768a8ed9c9f072,fc09f5ebb341b0ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 566, CreateTime = 1718877346898, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 56, 97, 101, 100, 52, 52, 102, 45, 97, 102, 48, 54, 45, 52, 56, 100, 101, 45, 98, 97, 53, 51, 45, 101, 56, 48, 102, 55, 57, 101, 54, 97, 51, 50, 97]), RecordHeader(key = kafka_correlationId, value = [-81, 71, 73, -98, 3, -121, 76, -113, -113, -118, -19, -6, 125, 66, 82, -111]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241cf15f11-be36-4dbd-94e9-fdc43e94bbdd, value = {"customerNo":"100005607","username":"lv24"})
[2m2024-06-20 16:56:07.687[0;39m [32m INFO [,b226355d2a71f4812b768a8ed9c9f072,fc09f5ebb341b0ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=100005607, username=lv24)
[2m2024-06-20 16:56:07.694[0;39m [32m INFO [,b226355d2a71f4812b768a8ed9c9f072,fc09f5ebb341b0ca,false][0;39m [35m3552[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"100005607","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241cf15f11-be36-4dbd-94e9-fdc43e94bbdd
[2m2024-06-20 17:29:35.721[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.SpringApplication              [0;39m 648 [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2024-06-20 17:29:36.423[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-20 17:29:36.423[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2024-06-20 17:29:36.471[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 43ms. Found 1 JPA repository interfaces.
[2m2024-06-20 17:29:36.479[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-20 17:29:36.480[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2m2024-06-20 17:29:36.490[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m 348 [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.lpb.mid.repo.UserRepositorys. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2024-06-20 17:29:36.491[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
[2m2024-06-20 17:29:36.699[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m 295 [2m:[0;39m BeanFactory id=a6a13df1-c7f9-3e20-a831-797d87db0177
[2m2024-06-20 17:29:37.317[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 108 [2m:[0;39m Tomcat initialized with port(s): 12389 (http)
[2m2024-06-20 17:29:37.323[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting service [Tomcat]
[2m2024-06-20 17:29:37.323[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.46]
[2m2024-06-20 17:29:37.455[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2024-06-20 17:29:37.455[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m 285 [2m:[0;39m Root WebApplicationContext: initialization completed in 1726 ms
[2m2024-06-20 17:29:38.476[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.redisson.Version                    [0;39m 43  [2m:[0;39m Redisson 3.27.1
[2m2024-06-20 17:29:38.847[0;39m [33m WARN [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.r.c.SequentialDnsAddressResolverFactory[0;39m 111 [2m:[0;39m DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher.
[2m2024-06-20 17:29:39.193[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[isson-netty-1-6][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 1 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-20 17:29:39.248[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[sson-netty-1-13][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 5 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-20 17:29:39.758[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m 361 [2m:[0;39m Building JPA container EntityManagerFactory for persistence unit 'default'
[2m2024-06-20 17:29:39.767[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m 31  [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2024-06-20 17:29:39.792[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.Version                   [0;39m 44  [2m:[0;39m HHH000412: Hibernate ORM core version 5.4.32.Final
[2m2024-06-20 17:29:39.852[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.a.c.r.java.JavaReflectionManager    [0;39m 56  [2m:[0;39m HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2m2024-06-20 17:29:39.902[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 110 [2m:[0;39m HikariPool-1 - Starting...
[2m2024-06-20 17:29:39.903[0;39m [33m WARN [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.util.DriverDataSource [0;39m 70  [2m:[0;39m Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
[2m2024-06-20 17:29:40.514[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 123 [2m:[0;39m HikariPool-1 - Start completed.
[2m2024-06-20 17:29:40.522[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.dialect.Dialect           [0;39m 175 [2m:[0;39m HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[2m2024-06-20 17:29:41.446[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m 52  [2m:[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2m2024-06-20 17:29:41.452[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.AbstractEntityManagerFactoryBean[0;39m 419 [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2024-06-20 17:29:41.538[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:29:41.565[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:29:41.565[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:29:41.566[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:29:41.591[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:29:41.591[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:29:41.620[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:29:41.622[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:29:41.622[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:29:42.244[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService 'applicationTaskExecutor'
[2m2024-06-20 17:29:42.271[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m 614 [2m:[0;39m ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2m2024-06-20 17:29:42.316[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.h.AbstractHandlerMethodMapping  [0;39m 351 [2m:[0;39m 2 mappings in 'requestMappingHandlerMapping'
[2m2024-06-20 17:29:42.336[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m 173 [2m:[0;39m Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2m2024-06-20 17:29:42.375[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.m.m.a.ExceptionHandlerExceptionResolver[0;39m 297 [2m:[0;39m ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[2m2024-06-20 17:29:42.923[0;39m [33m WARN [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m 61  [2m:[0;39m Unable to start LiveReload server
[2m2024-06-20 17:29:43.263[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.e.web.EndpointLinksResolver     [0;39m 58  [2m:[0;39m Exposing 15 endpoint(s) beneath base path '/actuator'
[2m2024-06-20 17:29:43.452[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.486[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.487[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.487[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383485
[2m2024-06-20 17:29:43.489[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.491[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.495[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.505[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.506[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.506[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383505
[2m2024-06-20 17:29:43.507[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.507[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.510[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.520[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.521[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.521[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383520
[2m2024-06-20 17:29:43.521[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.522[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.525[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.528[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.528[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.529[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383528
[2m2024-06-20 17:29:43.529[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.529[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.536[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.539[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.540[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.540[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383539
[2m2024-06-20 17:29:43.540[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.540[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.544[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.548[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.549[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.549[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383548
[2m2024-06-20 17:29:43.550[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.550[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.554[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.556[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.557[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.557[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383556
[2m2024-06-20 17:29:43.557[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.558[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.560[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.563[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.564[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.564[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383563
[2m2024-06-20 17:29:43.565[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.565[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.568[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.569[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.570[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.570[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383569
[2m2024-06-20 17:29:43.570[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.570[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.573[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.575[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.575[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.575[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383575
[2m2024-06-20 17:29:43.575[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.575[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.578[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.580[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.580[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.580[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383580
[2m2024-06-20 17:29:43.581[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.581[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.584[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.586[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.586[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.586[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383586
[2m2024-06-20 17:29:43.586[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.586[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.589[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.591[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.591[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.591[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383591
[2m2024-06-20 17:29:43.591[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.592[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.599[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.601[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.601[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.601[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383601
[2m2024-06-20 17:29:43.602[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.602[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.606[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.608[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.608[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.608[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383608
[2m2024-06-20 17:29:43.609[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.609[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.611[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.614[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.614[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.614[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383614
[2m2024-06-20 17:29:43.614[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.615[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.617[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.619[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.619[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.619[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383618
[2m2024-06-20 17:29:43.619[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.619[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.621[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.623[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.623[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.623[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383623
[2m2024-06-20 17:29:43.623[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.624[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.625[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.627[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.627[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.628[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383627
[2m2024-06-20 17:29:43.628[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.628[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.630[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-20 17:29:43.632[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:29:43.632[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:29:43.633[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879383632
[2m2024-06-20 17:29:43.633[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-20 17:29:43.633[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-20 17:29:43.652[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 220 [2m:[0;39m Tomcat started on port(s): 12389 (http) with context path ''
[2m2024-06-20 17:29:43.730[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.730[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.731[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.731[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.731[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.733[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.734[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.734[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.734[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.734[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.734[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.737[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.736[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.735[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:29:43.739[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.738[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.739[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-20 17:29:43.740[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.740[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.741[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.742[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.744[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.744[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.744[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.746[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.768[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.768[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.769[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.770[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.770[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.772[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.773[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.773[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.774[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.774[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.774[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.774[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.775[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.775[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.775[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.775[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.775[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:43.776[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:43.880[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.StartupInfoLogger              [0;39m 61  [2m:[0;39m Started PermissionMain in 9.229 seconds (JVM running for 10.041)
[2m2024-06-20 17:29:44.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:44.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:44.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:44.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:44.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:44.090[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:44.219[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[2)-10.38.21.104][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2024-06-20 17:29:44.219[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[2)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 525 [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2024-06-20 17:29:44.219[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[2)-10.38.21.104][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m 526 [2m:[0;39m Detected StandardServletMultipartResolver
[2m2024-06-20 17:29:44.237[0;39m [32mDEBUG [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[2)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 542 [2m:[0;39m enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2m2024-06-20 17:29:44.237[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[2)-10.38.21.104][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 547 [2m:[0;39m Completed initialization in 18 ms
[2m2024-06-20 17:29:44.297[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-20 17:29:44.297[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.084[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.078[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.088[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.076[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.080[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.084[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.085[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.078[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.085[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.087[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Successfully joined group with generation 157
[2m2024-06-20 17:29:45.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.088[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.089[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.096[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.096[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.096[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.096[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.096[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.098[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.104[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.104[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.104[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.104[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.105[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.105[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-20 17:29:45.105[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.105[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Adding newly assigned partitions: check_token_send-11
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Adding newly assigned partitions: check_token_send-29
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Adding newly assigned partitions: check_token_send-16
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Adding newly assigned partitions: check_token_send-23
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Adding newly assigned partitions: check_token_send-1
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Adding newly assigned partitions: check_token_send-7
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Adding newly assigned partitions: check_token_send-26
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Adding newly assigned partitions: check_token_send-20
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Adding newly assigned partitions: check_token_send-13
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Adding newly assigned partitions: check_token_send-5
[2m2024-06-20 17:29:45.106[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Setting offset for partition check_token_send-20 to the committed offset FetchPosition{offset=596, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Setting offset for partition check_token_send-7 to the committed offset FetchPosition{offset=586, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Setting offset for partition check_token_send-11 to the committed offset FetchPosition{offset=604, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Setting offset for partition check_token_send-26 to the committed offset FetchPosition{offset=531, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.142[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Setting offset for partition check_token_send-16 to the committed offset FetchPosition{offset=570, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Setting offset for partition check_token_send-23 to the committed offset FetchPosition{offset=585, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Setting offset for partition check_token_send-13 to the committed offset FetchPosition{offset=584, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.142[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Setting offset for partition check_token_send-1 to the committed offset FetchPosition{offset=572, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.142[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Setting offset for partition check_token_send-29 to the committed offset FetchPosition{offset=567, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.141[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Setting offset for partition check_token_send-5 to the committed offset FetchPosition{offset=601, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-16]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-1]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-7]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-11]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-23]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-29]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-20]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-26]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-13]
[2m2024-06-20 17:29:45.144[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-5]
[2m2024-06-20 17:30:41.887[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 570, CreateTime = 1718879421070, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 55, 50, 54, 56, 102, 100, 102, 45, 55, 51, 53, 56, 45, 52, 98, 97, 51, 45, 98, 102, 97, 53, 45, 99, 49, 52, 54, 55, 97, 99, 48, 48, 52, 101, 99]), RecordHeader(key = kafka_correlationId, value = [-17, -17, 93, -72, 50, -25, 71, 71, -95, -43, 124, 18, -87, 122, 94, 83]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24862b825a-464a-420a-bd62-33b2cc3fc92c, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 17:30:41.899[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 17:30:41.972[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24862b825a-464a-420a-bd62-33b2cc3fc92c
[2m2024-06-20 17:30:41.980[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 3000000
	max.in.flight.requests.per.connection = 5
	max.request.size = 20971520
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 3000000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

[2m2024-06-20 17:30:41.981[0;39m [33m WARN [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.clients.producer.KafkaProducer    [0;39m 499 [2m:[0;39m [Producer clientId=producer-1] delivery.timeout.ms should be equal to or larger than linger.ms + request.timeout.ms. Setting it to 3000000.
[2m2024-06-20 17:30:41.989[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-20 17:30:41.990[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-20 17:30:41.990[0;39m [32m INFO [,ee319e17edfd23ff2007a7370616f6f7,6a690a3305d2719c,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1718879441989
[2m2024-06-20 17:30:42.010[0;39m [32m INFO [,,,][0;39m [35m10284[0;39m [2m---[0;39m [2m[ad | producer-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Producer clientId=producer-1] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-20 17:31:36.423[0;39m [32m INFO [,1b0943875cc7f565,600ab9cd579065d9,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 571, CreateTime = 1718879496348, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 101, 48, 48, 49, 101, 49, 49, 45, 101, 98, 100, 52, 45, 52, 50, 101, 100, 45, 57, 53, 100, 49, 45, 100, 48, 56, 57, 57, 100, 55, 50, 56, 97, 51, 52]), RecordHeader(key = kafka_correlationId, value = [103, -44, 16, 127, 86, 43, 64, -101, -119, -58, 69, 8, 115, -118, 113, -66]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240ca56959-6883-459b-bb75-f49e0b65b9fa, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 17:31:36.424[0;39m [32m INFO [,1b0943875cc7f565,600ab9cd579065d9,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 17:31:36.434[0;39m [32m INFO [,1b0943875cc7f565,600ab9cd579065d9,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240ca56959-6883-459b-bb75-f49e0b65b9fa
[2m2024-06-20 17:31:53.828[0;39m [32m INFO [,58abad0c87fe36e7,a30581ea0d83ede5,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 572, CreateTime = 1718879513823, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 50, 52, 102, 52, 48, 55, 56, 45, 53, 49, 98, 100, 45, 52, 48, 102, 101, 45, 98, 98, 101, 53, 45, 56, 100, 99, 53, 98, 98, 57, 102, 49, 50, 102, 100]), RecordHeader(key = kafka_correlationId, value = [-39, 109, -26, -28, -100, 54, 67, 116, -75, 26, 20, 52, 74, -66, 90, 65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240fedfd87-a594-4588-a75a-6b639c9944a8, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 17:31:53.830[0;39m [32m INFO [,58abad0c87fe36e7,a30581ea0d83ede5,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 17:31:53.836[0;39m [32m INFO [,58abad0c87fe36e7,a30581ea0d83ede5,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240fedfd87-a594-4588-a75a-6b639c9944a8
[2m2024-06-20 17:33:03.148[0;39m [32m INFO [,ff836b9247903445548086aa8fb86821,fe39fedfeb4a3317,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 586, CreateTime = 1718879562296, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 102, 54, 102, 55, 102, 53, 53, 45, 55, 50, 53, 56, 45, 52, 99, 55, 54, 45, 98, 51, 52, 54, 45, 98, 98, 102, 52, 100, 101, 54, 55, 99, 101, 54, 100]), RecordHeader(key = kafka_correlationId, value = [-2, 76, 19, -58, -102, -108, 79, 39, -111, -39, 104, -18, -20, -103, 66, 68]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b5a9b6ed-74a0-4ba0-ad80-0f5848975ff0, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 17:33:03.154[0;39m [32m INFO [,ff836b9247903445548086aa8fb86821,fe39fedfeb4a3317,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 17:33:03.168[0;39m [32m INFO [,ff836b9247903445548086aa8fb86821,fe39fedfeb4a3317,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b5a9b6ed-74a0-4ba0-ad80-0f5848975ff0
[2m2024-06-20 17:33:11.269[0;39m [32m INFO [,4660b041eb39fe21,51108c6405b703b8,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 584, CreateTime = 1718879591259, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 49, 99, 49, 99, 52, 53, 56, 45, 102, 50, 49, 98, 45, 52, 99, 51, 102, 45, 98, 52, 48, 55, 45, 56, 48, 53, 53, 97, 100, 100, 49, 99, 98, 101, 49]), RecordHeader(key = kafka_correlationId, value = [-109, 21, 108, 44, -45, -92, 66, -97, -93, 92, -74, 42, -18, -90, -18, 73]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f1ab479a-5202-444c-a664-3824d1075311, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 17:33:11.271[0;39m [32m INFO [,4660b041eb39fe21,51108c6405b703b8,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 17:33:11.281[0;39m [32m INFO [,4660b041eb39fe21,51108c6405b703b8,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f1ab479a-5202-444c-a664-3824d1075311
[2m2024-06-20 17:33:47.192[0;39m [32m INFO [,3928ad6bc956a676,9aa68c477c713365,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 596, CreateTime = 1718879627175, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 97, 99, 53, 99, 57, 57, 97, 45, 102, 55, 53, 49, 45, 52, 102, 49, 50, 45, 56, 49, 98, 56, 45, 50, 101, 53, 55, 48, 55, 54, 53, 53, 55, 57, 51]), RecordHeader(key = kafka_correlationId, value = [82, 84, -19, -6, -91, 74, 78, 63, -104, -79, -96, -91, 46, 115, -98, 17]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a6673623-a24e-46f0-9964-c38eeeedd65d, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 17:33:47.193[0;39m [32m INFO [,3928ad6bc956a676,9aa68c477c713365,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 17:33:47.199[0;39m [32m INFO [,3928ad6bc956a676,9aa68c477c713365,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a6673623-a24e-46f0-9964-c38eeeedd65d
[2m2024-06-20 17:34:16.601[0;39m [32m INFO [,0921173ff2813e9f4474bb42b30b606d,85d4fb2ef4fbdecc,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 604, CreateTime = 1718879635803, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 99, 55, 98, 57, 102, 51, 102, 45, 97, 57, 100, 49, 45, 52, 50, 51, 55, 45, 97, 54, 50, 48, 45, 102, 101, 55, 53, 53, 54, 55, 55, 52, 53, 101, 57]), RecordHeader(key = kafka_correlationId, value = [-74, -99, 52, -115, 61, 34, 76, -14, -92, -28, 112, 39, 39, -8, 44, -95]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24673b50a8-f289-4072-b2a6-f21845c7a211, value = {"customerNo":"203122147","username":"lv24"})
[2m2024-06-20 17:34:16.604[0;39m [32m INFO [,0921173ff2813e9f4474bb42b30b606d,85d4fb2ef4fbdecc,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122147, username=lv24)
[2m2024-06-20 17:34:16.614[0;39m [32m INFO [,0921173ff2813e9f4474bb42b30b606d,85d4fb2ef4fbdecc,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122147","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24673b50a8-f289-4072-b2a6-f21845c7a211
[2m2024-06-20 17:34:21.305[0;39m [32m INFO [,cbef71b9d5bdfd6d05e183a0082400de,54c18f36b510df58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 597, CreateTime = 1718879640506, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 57, 55, 49, 50, 52, 97, 51, 45, 98, 52, 51, 53, 45, 52, 55, 54, 56, 45, 57, 100, 51, 101, 45, 101, 57, 51, 49, 50, 50, 97, 49, 98, 101, 102, 53]), RecordHeader(key = kafka_correlationId, value = [48, 67, -98, -72, 29, -76, 67, -16, -121, -103, 119, 105, -121, 52, -55, 102]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24db795ef0-0a39-44ef-86a7-731dd432b038, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 17:34:21.307[0;39m [32m INFO [,cbef71b9d5bdfd6d05e183a0082400de,54c18f36b510df58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 17:34:21.316[0;39m [32m INFO [,cbef71b9d5bdfd6d05e183a0082400de,54c18f36b510df58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24db795ef0-0a39-44ef-86a7-731dd432b038
[2m2024-06-20 17:36:22.402[0;39m [32m INFO [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 1, leaderEpoch = 0, offset = 572, CreateTime = 1718879761601, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 99, 51, 50, 102, 53, 100, 101, 45, 55, 56, 52, 48, 45, 52, 100, 49, 56, 45, 57, 54, 52, 101, 45, 51, 98, 100, 101, 52, 53, 51, 97, 53, 56, 55, 50]), RecordHeader(key = kafka_correlationId, value = [54, -80, 71, -21, -127, 17, 76, -105, -80, 69, 68, -17, -4, 75, 64, 38]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24bb74c63f-1f0f-46b3-ae49-577586fc0f28, value = {"customerNo":"203121933","username":"lv24"})
[2m2024-06-20 17:36:22.405[0;39m [32m INFO [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121933, username=lv24)
[2m2024-06-20 17:36:22.419[0;39m [32mDEBUG [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:36:22.581[0;39m [32m INFO [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    7322600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    20099200 nanoseconds spent preparing 1 JDBC statements;
    12958300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:36:22.903[0;39m [32m INFO [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203121933, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 17:36:22.904[0;39m [32m INFO [,517ca4285b465e75f961327ed902c684,0d1f821f0632d106,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121933","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24bb74c63f-1f0f-46b3-ae49-577586fc0f28
[2m2024-06-20 17:39:24.279[0;39m [32m INFO [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 573, CreateTime = 1718879943475, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 101, 57, 52, 98, 57, 55, 50, 45, 101, 100, 100, 49, 45, 52, 48, 49, 50, 45, 97, 51, 54, 54, 45, 97, 57, 98, 52, 102, 57, 57, 55, 102, 97, 55, 56]), RecordHeader(key = kafka_correlationId, value = [-48, -83, -83, -103, -28, 109, 73, -12, -105, -4, -11, -27, 51, 62, -52, 86]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d9bb76a5-e8c9-468a-b190-6b674cdbc332, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:39:24.282[0;39m [32m INFO [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:39:24.290[0;39m [32mDEBUG [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:39:24.308[0;39m [32m INFO [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    6481800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    6923300 nanoseconds spent preparing 1 JDBC statements;
    6854400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:39:24.318[0;39m [32m INFO [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203020321, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 17:39:24.320[0;39m [32m INFO [,f0836b664520139ce36f2849e04387f7,9e47061008f13673,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d9bb76a5-e8c9-468a-b190-6b674cdbc332
[2m2024-06-20 17:42:54.905[0;39m [32m INFO [,066e34eccd35e0aa,560ce80f4eae199b,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 1, leaderEpoch = 0, offset = 573, CreateTime = 1718880174872, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 54, 50, 52, 48, 52, 48, 102, 45, 56, 51, 101, 51, 45, 52, 51, 99, 54, 45, 57, 102, 99, 50, 45, 98, 56, 53, 57, 98, 48, 52, 53, 51, 53, 99, 97]), RecordHeader(key = kafka_correlationId, value = [-11, -79, 18, -24, -10, 12, 66, -103, -115, -17, 75, -120, -46, 33, 69, 19]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET945ff9a6-3c36-46f4-829d-4de9e0894dd5, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 17:42:54.908[0;39m [32m INFO [,066e34eccd35e0aa,560ce80f4eae199b,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 17:42:54.918[0;39m [32m INFO [,066e34eccd35e0aa,560ce80f4eae199b,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET945ff9a6-3c36-46f4-829d-4de9e0894dd5
[2m2024-06-20 17:44:02.341[0;39m [32m INFO [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 605, CreateTime = 1718880221532, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 52, 101, 50, 56, 50, 48, 98, 45, 98, 53, 50, 57, 45, 52, 49, 101, 98, 45, 97, 102, 54, 53, 45, 101, 99, 49, 102, 48, 100, 54, 50, 97, 97, 57, 98]), RecordHeader(key = kafka_correlationId, value = [87, 45, 45, -51, 44, -27, 74, 47, -95, -110, 70, 39, 95, 112, 49, 18]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24143b9932-9700-4ee8-b4f4-ed3886ee2fb5, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 17:44:02.342[0;39m [32m INFO [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 585, CreateTime = 1718880221533, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 50, 56, 50, 57, 49, 52, 48, 45, 55, 50, 49, 98, 45, 52, 99, 54, 97, 45, 57, 56, 50, 50, 45, 98, 98, 57, 48, 48, 53, 57, 55, 50, 50, 56, 55]), RecordHeader(key = kafka_correlationId, value = [69, 28, 26, -1, 2, 65, 68, 88, -117, -106, -111, 56, -100, -44, -126, 56]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24efab3ace-1760-418a-a178-48df4353dc8a, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 17:44:02.345[0;39m [32m INFO [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 17:44:02.345[0;39m [32m INFO [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 17:44:02.352[0;39m [32mDEBUG [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:44:02.353[0;39m [32mDEBUG [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:44:02.367[0;39m [32m INFO [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    6788300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    7042300 nanoseconds spent preparing 1 JDBC statements;
    6461300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:44:02.379[0;39m [32m INFO [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122241, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 17:44:02.380[0;39m [32m INFO [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    14477800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    14663000 nanoseconds spent preparing 1 JDBC statements;
    10650000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:44:02.381[0;39m [32m INFO [,f4dd36b348b4bb99f2d28d56b05e74e6,6a0e433f2693ebeb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24143b9932-9700-4ee8-b4f4-ed3886ee2fb5
[2m2024-06-20 17:44:02.388[0;39m [32m INFO [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122241, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 17:44:02.390[0;39m [32m INFO [,26b7f75beee17d46a06f5fa0ad7c688b,060601a522753e0a,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24efab3ace-1760-418a-a178-48df4353dc8a
[2m2024-06-20 17:44:07.166[0;39m [32m INFO [,051003d0a19fc5b9ad08f47f13042fb9,0832939af7774afe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 586, CreateTime = 1718880226359, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 100, 51, 48, 49, 99, 50, 100, 45, 54, 54, 53, 97, 45, 52, 53, 54, 100, 45, 98, 99, 57, 50, 45, 99, 50, 54, 102, 50, 51, 57, 99, 50, 54, 50, 51]), RecordHeader(key = kafka_correlationId, value = [23, 122, 41, -13, 105, 18, 75, 120, -101, -101, -124, 54, 39, -83, 38, -26]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24746df87c-bd6a-4b95-b64f-05aa6847d218, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 17:44:07.168[0;39m [32m INFO [,051003d0a19fc5b9ad08f47f13042fb9,0832939af7774afe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 17:44:07.187[0;39m [32m INFO [,051003d0a19fc5b9ad08f47f13042fb9,0832939af7774afe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24746df87c-bd6a-4b95-b64f-05aa6847d218
[2m2024-06-20 17:45:09.466[0;39m [32m INFO [,014b65b0bd35bb8afc932735b1a30606,11ded74480e076fe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 601, CreateTime = 1718880288656, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 97, 102, 53, 97, 55, 100, 51, 45, 50, 100, 98, 102, 45, 52, 102, 55, 98, 45, 57, 97, 97, 51, 45, 101, 52, 55, 50, 53, 48, 56, 97, 56, 48, 51, 101]), RecordHeader(key = kafka_correlationId, value = [-100, -97, -16, 46, 73, -126, 69, -107, -97, 107, 117, 108, 39, 86, 0, -104]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b45cc40c-0b8c-451e-857e-3ed56ea70dc2, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 17:45:09.470[0;39m [32m INFO [,014b65b0bd35bb8afc932735b1a30606,11ded74480e076fe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 17:45:09.481[0;39m [32m INFO [,014b65b0bd35bb8afc932735b1a30606,11ded74480e076fe,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b45cc40c-0b8c-451e-857e-3ed56ea70dc2
[2m2024-06-20 17:47:57.978[0;39m [32m INFO [,31b3c6851fb1a5cc,588ffadadc303f85,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 585, CreateTime = 1718880457167, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 50, 102, 53, 100, 97, 98, 100, 45, 52, 52, 55, 99, 45, 52, 55, 48, 97, 45, 98, 102, 54, 52, 45, 101, 51, 57, 50, 102, 51, 98, 99, 97, 51, 49, 97]), RecordHeader(key = kafka_correlationId, value = [61, 113, -16, -87, 28, 122, 70, -15, -73, 55, 62, -70, 117, -43, 64, 107]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETd167e539-d985-4c99-b9e5-ad4ef73e0815, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 17:47:57.981[0;39m [32m INFO [,31b3c6851fb1a5cc,588ffadadc303f85,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 17:47:57.993[0;39m [32m INFO [,31b3c6851fb1a5cc,588ffadadc303f85,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETd167e539-d985-4c99-b9e5-ad4ef73e0815
[2m2024-06-20 17:52:41.712[0;39m [32m INFO [,723d84c6ba15f8e221011ad1b983e4d9,f647819e685ddd66,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 586, CreateTime = 1718880740904, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 55, 48, 52, 101, 98, 98, 53, 45, 52, 97, 102, 52, 45, 52, 101, 49, 101, 45, 57, 54, 50, 54, 45, 98, 98, 97, 54, 54, 101, 57, 53, 100, 56, 54, 57]), RecordHeader(key = kafka_correlationId, value = [126, -87, 112, 105, 56, 96, 64, -13, -76, 42, 63, 77, -71, 5, -42, 59]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244bf5def2-8574-4a65-86bf-87187fb22066, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:52:41.713[0;39m [32m INFO [,723d84c6ba15f8e221011ad1b983e4d9,f647819e685ddd66,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:52:41.721[0;39m [32m INFO [,723d84c6ba15f8e221011ad1b983e4d9,f647819e685ddd66,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244bf5def2-8574-4a65-86bf-87187fb22066
[2m2024-06-20 17:52:51.064[0;39m [32m INFO [,5bbd58239dc7a97ea68482e87a8a288b,dc213a16f0b6ab0b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 587, CreateTime = 1718880750255, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 56, 49, 55, 53, 55, 50, 56, 45, 53, 50, 48, 48, 45, 52, 98, 55, 52, 45, 57, 57, 98, 56, 45, 56, 98, 54, 53, 51, 101, 53, 100, 98, 101, 56, 56]), RecordHeader(key = kafka_correlationId, value = [-34, -86, 80, -92, 38, 107, 64, 42, -119, 20, -112, -12, -7, 28, -2, 82]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242f297df0-4f2c-40e7-9456-60704a37ef76, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:52:51.065[0;39m [32m INFO [,5bbd58239dc7a97ea68482e87a8a288b,dc213a16f0b6ab0b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:52:51.069[0;39m [32m INFO [,5bbd58239dc7a97ea68482e87a8a288b,dc213a16f0b6ab0b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242f297df0-4f2c-40e7-9456-60704a37ef76
[2m2024-06-20 17:53:50.319[0;39m [32m INFO [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 598, CreateTime = 1718880809512, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 101, 52, 54, 101, 100, 102, 99, 45, 53, 49, 55, 55, 45, 52, 53, 53, 101, 45, 97, 53, 101, 54, 45, 49, 48, 56, 51, 97, 57, 53, 48, 56, 52, 101, 100]), RecordHeader(key = kafka_correlationId, value = [106, -108, -52, -126, 72, -10, 70, 121, -65, 104, -105, -39, 2, 93, 37, -26]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2481cfee1c-017e-4fb4-a071-cbaf4674f3c4, value = {"customerNo":"203122229","username":"lv24"})
[2m2024-06-20 17:53:50.320[0;39m [32m INFO [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122229, username=lv24)
[2m2024-06-20 17:53:50.339[0;39m [32mDEBUG [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 17:53:50.370[0;39m [32m INFO [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    13401300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    13806600 nanoseconds spent preparing 1 JDBC statements;
    14498100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 17:53:50.387[0;39m [32m INFO [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122229, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 17:53:50.389[0;39m [32m INFO [,fdf943086f5bde6074b4bd6814ac5009,98aaa955f86effcd,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122229","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2481cfee1c-017e-4fb4-a071-cbaf4674f3c4
[2m2024-06-20 17:55:21.773[0;39m [32m INFO [,d0575fda9d227adcf51cc38cacf42fd1,e2baea40b4cb7164,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 602, CreateTime = 1718880900963, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 56, 50, 50, 55, 49, 50, 54, 45, 97, 48, 54, 56, 45, 52, 51, 56, 52, 45, 97, 98, 99, 53, 45, 56, 49, 97, 51, 48, 49, 53, 56, 49, 55, 57, 55]), RecordHeader(key = kafka_correlationId, value = [116, 79, -13, -78, 48, 27, 75, 21, -112, -35, -51, -40, -112, -1, 118, 76]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d368482c-be92-47d3-a3ee-79a348dc6bf1, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:55:21.775[0;39m [32m INFO [,d0575fda9d227adcf51cc38cacf42fd1,e2baea40b4cb7164,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:55:21.781[0;39m [32m INFO [,d0575fda9d227adcf51cc38cacf42fd1,e2baea40b4cb7164,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d368482c-be92-47d3-a3ee-79a348dc6bf1
[2m2024-06-20 17:55:37.790[0;39m [32m INFO [,140e5c79cbbd6550bbe9538adf4d31cb,03a54bfcb53bdc0f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 587, CreateTime = 1718880916978, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 48, 48, 52, 53, 55, 52, 101, 45, 52, 53, 55, 99, 45, 52, 99, 55, 50, 45, 97, 97, 53, 55, 45, 99, 97, 98, 55, 48, 53, 50, 97, 52, 56, 57, 57]), RecordHeader(key = kafka_correlationId, value = [30, 2, -50, 38, 12, 95, 75, -127, -107, 117, 63, 51, -11, 99, -95, -40]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24701e08e2-5ae0-45a7-b09d-1ed76b49dedc, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:55:37.791[0;39m [32m INFO [,140e5c79cbbd6550bbe9538adf4d31cb,03a54bfcb53bdc0f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:55:37.798[0;39m [32m INFO [,140e5c79cbbd6550bbe9538adf4d31cb,03a54bfcb53bdc0f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24701e08e2-5ae0-45a7-b09d-1ed76b49dedc
[2m2024-06-20 17:55:45.534[0;39m [32m INFO [,2beece6054f553f6f46dd257e50c8255,6dc03fac56f3ad2d,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 574, CreateTime = 1718880924724, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 102, 99, 54, 99, 51, 55, 99, 45, 53, 49, 52, 57, 45, 52, 101, 57, 56, 45, 98, 54, 48, 56, 45, 52, 51, 101, 57, 102, 56, 52, 53, 49, 101, 56, 51]), RecordHeader(key = kafka_correlationId, value = [4, -98, -13, -59, -11, 47, 71, -24, -82, 50, 76, 122, -108, 73, -74, 117]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b0409d06-c9e9-404c-9420-1ed85cfb0e6f, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:55:45.535[0;39m [32m INFO [,2beece6054f553f6f46dd257e50c8255,6dc03fac56f3ad2d,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:55:45.544[0;39m [32m INFO [,2beece6054f553f6f46dd257e50c8255,6dc03fac56f3ad2d,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b0409d06-c9e9-404c-9420-1ed85cfb0e6f
[2m2024-06-20 17:55:48.072[0;39m [32m INFO [,dd18e41259a1d666bda340d44692f7db,d6682671c9d32297,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 588, CreateTime = 1718880927265, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 101, 56, 57, 49, 100, 102, 52, 45, 102, 99, 98, 100, 45, 52, 56, 50, 48, 45, 97, 99, 48, 48, 45, 98, 99, 54, 56, 53, 50, 55, 49, 97, 54, 97, 102]), RecordHeader(key = kafka_correlationId, value = [-115, 107, 30, -94, 3, 69, 67, 77, -76, 86, 94, -104, 55, 110, 22, -112]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e6f67404-ffad-4ddf-a0d5-56bec6361b68, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 17:55:48.073[0;39m [32m INFO [,dd18e41259a1d666bda340d44692f7db,d6682671c9d32297,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 17:55:48.079[0;39m [32m INFO [,dd18e41259a1d666bda340d44692f7db,d6682671c9d32297,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e6f67404-ffad-4ddf-a0d5-56bec6361b68
[2m2024-06-20 17:56:37.996[0;39m [32m INFO [,d9787cd6cf13cc482cba1b6b14ac33e8,6408f7aa6661e0f6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 587, CreateTime = 1718880977184, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 57, 102, 51, 100, 102, 56, 56, 45, 97, 54, 52, 56, 45, 52, 53, 48, 49, 45, 97, 52, 55, 51, 45, 98, 53, 100, 50, 51, 50, 57, 56, 53, 52, 97, 97]), RecordHeader(key = kafka_correlationId, value = [-99, 31, 62, -13, -52, -119, 73, -103, -125, -8, 117, -102, -22, 119, 104, 83]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247132637e-8224-4fee-9c47-685cbd0a4e97, value = {"customerNo":"203122229","username":"lv24"})
[2m2024-06-20 17:56:37.998[0;39m [32m INFO [,d9787cd6cf13cc482cba1b6b14ac33e8,6408f7aa6661e0f6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122229, username=lv24)
[2m2024-06-20 17:56:38.007[0;39m [32m INFO [,d9787cd6cf13cc482cba1b6b14ac33e8,6408f7aa6661e0f6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122229","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247132637e-8224-4fee-9c47-685cbd0a4e97
[2m2024-06-20 17:59:40.745[0;39m [32m INFO [,66fc240e3b50f2ee4e55d9746db3ae92,9fcca522679aacab,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 606, CreateTime = 1718881159935, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 52, 97, 97, 97, 57, 52, 57, 45, 53, 102, 97, 49, 45, 52, 99, 97, 54, 45, 97, 51, 54, 97, 45, 50, 101, 101, 51, 49, 98, 99, 57, 54, 56, 102, 100]), RecordHeader(key = kafka_correlationId, value = [-35, -72, 29, -81, -82, -119, 77, 76, -114, -75, 76, -26, -111, -90, 39, -57]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f9c9f0d6-1523-4cc1-88eb-0661e041a61f, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 17:59:40.745[0;39m [32m INFO [,66fc240e3b50f2ee4e55d9746db3ae92,9fcca522679aacab,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 17:59:40.751[0;39m [32m INFO [,66fc240e3b50f2ee4e55d9746db3ae92,9fcca522679aacab,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f9c9f0d6-1523-4cc1-88eb-0661e041a61f
[2m2024-06-20 18:01:33.480[0;39m [32m INFO [,839e89ba1e48e2bf,024ffaf37232b1df,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 599, CreateTime = 1718881272672, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 53, 101, 48, 100, 99, 53, 52, 45, 99, 49, 54, 50, 45, 52, 98, 57, 48, 45, 98, 53, 48, 101, 45, 100, 54, 49, 51, 100, 54, 102, 55, 50, 55, 99, 101]), RecordHeader(key = kafka_correlationId, value = [-123, 94, -35, -27, 106, -84, 74, -23, -109, 91, 11, 109, 61, 0, 104, 117]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETbffcf802-13d8-4c7d-914e-93eb09ea6ec1, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 18:01:33.481[0;39m [32m INFO [,839e89ba1e48e2bf,024ffaf37232b1df,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 18:01:33.485[0;39m [32m INFO [,839e89ba1e48e2bf,024ffaf37232b1df,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETbffcf802-13d8-4c7d-914e-93eb09ea6ec1
[2m2024-06-20 18:09:58.858[0;39m [32m INFO [,24d4bd575a10459a518ee3d1ee24dbe2,90181de211476b03,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 567, CreateTime = 1718881778049, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 52, 54, 51, 48, 97, 57, 54, 45, 49, 49, 97, 54, 45, 52, 57, 48, 53, 45, 57, 49, 56, 55, 45, 51, 99, 102, 48, 50, 56, 52, 97, 101, 48, 100, 57]), RecordHeader(key = kafka_correlationId, value = [-61, -34, 59, -70, 78, -14, 79, 29, -99, 96, 59, -75, 62, 48, 75, -16]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e4770496-9604-4f76-a9ca-8d645d43f7bb, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 18:09:58.862[0;39m [32m INFO [,24d4bd575a10459a518ee3d1ee24dbe2,90181de211476b03,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 18:09:58.872[0;39m [32m INFO [,24d4bd575a10459a518ee3d1ee24dbe2,90181de211476b03,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e4770496-9604-4f76-a9ca-8d645d43f7bb
[2m2024-06-20 18:10:00.177[0;39m [32m INFO [,2d811195f925aa72735b6e6ca453a8c6,ba453e276664a007,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 1, leaderEpoch = 0, offset = 574, CreateTime = 1718881779366, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 50, 50, 55, 48, 53, 54, 51, 45, 56, 55, 101, 53, 45, 52, 57, 55, 55, 45, 97, 98, 97, 102, 45, 49, 48, 52, 50, 100, 51, 98, 50, 52, 97, 54, 102]), RecordHeader(key = kafka_correlationId, value = [-81, 123, -126, 58, -76, 91, 79, 54, -102, -72, 110, -30, -41, 111, 120, 71]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv246ff1025c-0bcb-4603-8e6a-b4c0d149cc45, value = {"customerNo":"111861580","username":"lv24"})
[2m2024-06-20 18:10:00.181[0;39m [32m INFO [,2d811195f925aa72735b6e6ca453a8c6,ba453e276664a007,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=111861580, username=lv24)
[2m2024-06-20 18:10:00.191[0;39m [32m INFO [,2d811195f925aa72735b6e6ca453a8c6,ba453e276664a007,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"111861580","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv246ff1025c-0bcb-4603-8e6a-b4c0d149cc45
[2m2024-06-20 18:10:23.418[0;39m [32m INFO [,0c99ea64760cb077a4a07f55b6ff4bae,ea9237cd92d10bed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 607, CreateTime = 1718881802611, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 53, 100, 100, 48, 101, 53, 54, 45, 99, 57, 50, 98, 45, 52, 100, 53, 48, 45, 57, 51, 57, 49, 45, 100, 53, 54, 51, 97, 100, 98, 57, 99, 102, 50, 48]), RecordHeader(key = kafka_correlationId, value = [29, -28, -10, -98, -19, -40, 76, -2, -115, 108, 23, -119, -18, 35, -40, -58]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2496de2413-9433-46b0-a17f-387c7c700317, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 18:10:23.419[0;39m [32m INFO [,0c99ea64760cb077a4a07f55b6ff4bae,ea9237cd92d10bed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 18:10:23.426[0;39m [32m INFO [,0c99ea64760cb077a4a07f55b6ff4bae,ea9237cd92d10bed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2496de2413-9433-46b0-a17f-387c7c700317
[2m2024-06-20 18:11:24.452[0;39m [32m INFO [,99e32fdacc397194364da6776e2bb2c9,dd94e9d5156b7b1b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 600, CreateTime = 1718881863642, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 49, 53, 54, 49, 97, 48, 45, 100, 49, 100, 54, 45, 52, 99, 49, 98, 45, 98, 52, 98, 100, 45, 100, 99, 54, 57, 49, 56, 49, 53, 52, 50, 102, 55]), RecordHeader(key = kafka_correlationId, value = [-63, -128, 23, 96, -70, 93, 64, 122, -113, -68, -92, -32, -116, 119, -88, -70]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24995ec61f-ed9a-43e4-b033-7b9fbcd1d435, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 18:11:24.453[0;39m [32m INFO [,99e32fdacc397194364da6776e2bb2c9,dd94e9d5156b7b1b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 18:11:24.458[0;39m [32m INFO [,99e32fdacc397194364da6776e2bb2c9,dd94e9d5156b7b1b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24995ec61f-ed9a-43e4-b033-7b9fbcd1d435
[2m2024-06-20 18:19:45.434[0;39m [32m INFO [,25b8a72121326968c51e585239213c44,39afb8698e433389,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 589, CreateTime = 1718882364628, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 53, 53, 55, 57, 100, 56, 102, 45, 49, 102, 49, 54, 45, 52, 53, 49, 55, 45, 56, 57, 49, 101, 45, 97, 51, 49, 54, 99, 98, 102, 52, 102, 49, 56, 97]), RecordHeader(key = kafka_correlationId, value = [-5, 34, 126, -16, 20, -88, 73, -119, -120, -3, -69, -69, 45, 44, 1, 44]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ee4be4ea-2c3d-45fd-a6e9-f0fbeead9221, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 18:19:45.437[0;39m [32m INFO [,25b8a72121326968c51e585239213c44,39afb8698e433389,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 18:19:45.460[0;39m [32m INFO [,25b8a72121326968c51e585239213c44,39afb8698e433389,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ee4be4ea-2c3d-45fd-a6e9-f0fbeead9221
[2m2024-06-20 18:21:57.799[0;39m [32m INFO [,5955cf3cc7ee1f65d09e5a8a0f962a10,6f60a10b5ebc91cb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 575, CreateTime = 1718882496990, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 48, 57, 53, 51, 55, 51, 54, 45, 102, 55, 57, 56, 45, 52, 56, 57, 52, 45, 97, 51, 56, 48, 45, 98, 53, 50, 56, 55, 54, 49, 51, 97, 99, 48, 48]), RecordHeader(key = kafka_correlationId, value = [-104, -77, 51, 120, -48, -47, 72, -88, -120, -128, -111, -44, -44, 36, -115, -52]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c82fee94-f191-4405-ae59-4c1feb113ff9, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 18:21:57.802[0;39m [32m INFO [,5955cf3cc7ee1f65d09e5a8a0f962a10,6f60a10b5ebc91cb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 18:21:57.811[0;39m [32m INFO [,5955cf3cc7ee1f65d09e5a8a0f962a10,6f60a10b5ebc91cb,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c82fee94-f191-4405-ae59-4c1feb113ff9
[2m2024-06-20 18:21:59.266[0;39m [32m INFO [,979ccc1edc84f4de91885fa5de07cad3,ad1fe731c47251d8,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 608, CreateTime = 1718882498461, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 98, 51, 57, 101, 55, 100, 56, 45, 100, 98, 49, 49, 45, 52, 100, 57, 56, 45, 56, 50, 53, 98, 45, 55, 57, 98, 53, 52, 53, 54, 55, 48, 98, 57, 55]), RecordHeader(key = kafka_correlationId, value = [32, 1, -58, 120, -69, 83, 78, -42, -127, 90, 45, 72, 111, 44, -2, 82]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b77b030a-8947-410e-b596-620642309e31, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 18:21:59.268[0;39m [32m INFO [,979ccc1edc84f4de91885fa5de07cad3,ad1fe731c47251d8,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 18:21:59.277[0;39m [32m INFO [,979ccc1edc84f4de91885fa5de07cad3,ad1fe731c47251d8,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b77b030a-8947-410e-b596-620642309e31
[2m2024-06-20 18:24:33.422[0;39m [32m INFO [,8d5f7f0645e799d7,f78294578d715d3a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 590, CreateTime = 1718882673405, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 48, 55, 50, 48, 55, 48, 52, 45, 102, 97, 50, 100, 45, 52, 55, 55, 101, 45, 56, 99, 101, 102, 45, 97, 51, 57, 98, 48, 54, 53, 98, 52, 97, 48, 56]), RecordHeader(key = kafka_correlationId, value = [14, -113, 13, 71, -120, -81, 77, 28, -102, 26, 20, 124, 18, 77, 114, 19]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET00a77c62-0c80-46b6-83e3-b712e6c82dee, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 18:24:33.424[0;39m [32m INFO [,8d5f7f0645e799d7,f78294578d715d3a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 18:24:33.433[0;39m [32m INFO [,8d5f7f0645e799d7,f78294578d715d3a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET00a77c62-0c80-46b6-83e3-b712e6c82dee
[2m2024-06-20 18:28:36.716[0;39m [32m INFO [,e74765b8126e2ff107478ec6ee725007,6c52a985e6c09c58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 588, CreateTime = 1718882895911, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 100, 51, 50, 98, 101, 56, 56, 45, 51, 51, 49, 50, 45, 52, 55, 49, 48, 45, 98, 56, 102, 99, 45, 52, 97, 56, 48, 102, 49, 54, 50, 98, 56, 48, 51]), RecordHeader(key = kafka_correlationId, value = [-100, 126, -96, 23, 20, -68, 66, -61, -115, -122, 67, 80, 70, 108, -72, -43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24215f33a9-9034-4c92-a77b-e0b561c71d59, value = {"customerNo":"203122190","username":"lv24"})
[2m2024-06-20 18:28:36.718[0;39m [32m INFO [,e74765b8126e2ff107478ec6ee725007,6c52a985e6c09c58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122190, username=lv24)
[2m2024-06-20 18:28:36.725[0;39m [32m INFO [,e74765b8126e2ff107478ec6ee725007,6c52a985e6c09c58,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122190","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24215f33a9-9034-4c92-a77b-e0b561c71d59
[2m2024-06-20 18:33:46.342[0;39m [32m INFO [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 609, CreateTime = 1718883205539, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 54, 55, 50, 54, 48, 55, 56, 45, 54, 49, 100, 49, 45, 52, 51, 101, 99, 45, 57, 56, 50, 98, 45, 52, 49, 97, 48, 100, 98, 97, 50, 98, 50, 55, 99]), RecordHeader(key = kafka_correlationId, value = [-86, -62, -34, -76, 89, -57, 72, -84, -106, -40, -19, -52, 18, 18, 43, -93]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2481825c80-b398-4511-ae58-e48d0dc893c2, value = {"customerNo":"203122246","username":"lv24"})
[2m2024-06-20 18:33:46.344[0;39m [32m INFO [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122246, username=lv24)
[2m2024-06-20 18:33:46.351[0;39m [32mDEBUG [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-20 18:33:46.363[0;39m [32m INFO [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    4539700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    4701000 nanoseconds spent preparing 1 JDBC statements;
    6407400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-20 18:33:46.370[0;39m [32m INFO [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122246, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-20 18:33:46.371[0;39m [32m INFO [,7b0bba9fd8c2708103730a6eaddeea96,edaf282d07ac1cec,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122246","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2481825c80-b398-4511-ae58-e48d0dc893c2
[2m2024-06-20 18:33:48.206[0;39m [32m INFO [,da67bcc173c2132e20e304918ed5e568,c6eceac17a4f0553,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 576, CreateTime = 1718883207403, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 57, 101, 52, 51, 50, 55, 52, 45, 101, 101, 54, 100, 45, 52, 49, 55, 53, 45, 98, 99, 55, 52, 45, 97, 55, 51, 100, 101, 56, 97, 48, 97, 101, 98, 48]), RecordHeader(key = kafka_correlationId, value = [-85, -22, -38, 109, 82, -13, 79, -14, -75, 8, 55, -65, 88, -50, 51, 79]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ae8059b3-1e01-4192-a62a-301c9976d65a, value = {"customerNo":"203122246","username":"lv24"})
[2m2024-06-20 18:33:48.207[0;39m [32m INFO [,da67bcc173c2132e20e304918ed5e568,c6eceac17a4f0553,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122246, username=lv24)
[2m2024-06-20 18:33:48.299[0;39m [32m INFO [,da67bcc173c2132e20e304918ed5e568,c6eceac17a4f0553,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122246","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ae8059b3-1e01-4192-a62a-301c9976d65a
[2m2024-06-20 18:44:38.985[0;39m [32m INFO [,db518f93dc83482a,ece754a2047d3f16,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 588, CreateTime = 1718883858175, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 52, 52, 97, 57, 57, 97, 54, 45, 50, 53, 53, 55, 45, 52, 97, 100, 55, 45, 97, 50, 56, 98, 45, 101, 100, 101, 98, 48, 56, 55, 49, 55, 50, 53, 102]), RecordHeader(key = kafka_correlationId, value = [65, 108, 55, 64, 125, 102, 72, -69, -111, 105, 40, -68, 0, -91, -86, 60]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET2884698f-9004-4575-bb36-639a65870910, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 18:44:38.989[0;39m [32m INFO [,db518f93dc83482a,ece754a2047d3f16,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 18:44:38.999[0;39m [32m INFO [,db518f93dc83482a,ece754a2047d3f16,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET2884698f-9004-4575-bb36-639a65870910
[2m2024-06-20 18:46:22.171[0;39m [32m INFO [,c4c969d44566ee8978d1b653db8728f0,6d533281672ba4cf,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 568, CreateTime = 1718883961355, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 55, 56, 56, 54, 55, 50, 49, 45, 97, 98, 57, 100, 45, 52, 101, 97, 57, 45, 56, 48, 56, 49, 45, 53, 54, 50, 56, 51, 53, 49, 98, 100, 51, 97, 97]), RecordHeader(key = kafka_correlationId, value = [-112, -21, 99, 77, -91, -46, 70, 114, -76, 46, -93, 72, 99, -63, -36, -124]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24476ef4d7-1679-4d6a-9f85-21f4e54f419b, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 18:46:22.175[0;39m [32m INFO [,c4c969d44566ee8978d1b653db8728f0,6d533281672ba4cf,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 18:46:22.187[0;39m [32m INFO [,c4c969d44566ee8978d1b653db8728f0,6d533281672ba4cf,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24476ef4d7-1679-4d6a-9f85-21f4e54f419b
[2m2024-06-20 18:47:29.058[0;39m [32m INFO [,060446be492fca3beee41bbc8ea236ae,11331821c848c81b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 531, CreateTime = 1718884028239, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 100, 51, 51, 55, 99, 48, 53, 45, 50, 97, 101, 51, 45, 52, 52, 100, 97, 45, 97, 97, 98, 52, 45, 98, 100, 57, 102, 57, 50, 100, 51, 48, 57, 54, 99]), RecordHeader(key = kafka_correlationId, value = [-6, 82, 36, -60, 105, -21, 78, 98, -91, 33, -92, -87, -8, -6, -123, 114]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ec4512d3-b49b-403f-9fd1-7234d814065f, value = {"customerNo":"203122241","username":"lv24"})
[2m2024-06-20 18:47:29.062[0;39m [32m INFO [,060446be492fca3beee41bbc8ea236ae,11331821c848c81b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122241, username=lv24)
[2m2024-06-20 18:47:29.075[0;39m [32m INFO [,060446be492fca3beee41bbc8ea236ae,11331821c848c81b,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122241","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ec4512d3-b49b-403f-9fd1-7234d814065f
[2m2024-06-20 18:48:19.819[0;39m [32m INFO [,d1b357da438602607834160a453232a0,73a36d3c148fd709,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 610, CreateTime = 1718884079001, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 97, 51, 100, 98, 97, 98, 100, 45, 55, 101, 49, 54, 45, 52, 98, 56, 99, 45, 56, 57, 52, 97, 45, 52, 48, 52, 57, 54, 49, 53, 97, 55, 97, 48, 102]), RecordHeader(key = kafka_correlationId, value = [-54, -35, 103, 49, -122, -64, 72, -111, -79, 29, 38, 100, 82, -94, 106, 12]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248fd5f7bc-2e43-40fb-88d9-42b0ae12db1a, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 18:48:19.822[0;39m [32m INFO [,d1b357da438602607834160a453232a0,73a36d3c148fd709,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 18:48:20.134[0;39m [32m INFO [,d1b357da438602607834160a453232a0,73a36d3c148fd709,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248fd5f7bc-2e43-40fb-88d9-42b0ae12db1a
[2m2024-06-20 18:54:28.563[0;39m [32m INFO [,8c9b6987dd3abc68ef7466dadf098a38,5d75522695627509,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 1, leaderEpoch = 0, offset = 575, CreateTime = 1718884447738, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 102, 56, 55, 54, 100, 48, 48, 45, 52, 57, 57, 54, 45, 52, 49, 51, 51, 45, 97, 55, 56, 49, 45, 50, 53, 100, 97, 49, 53, 55, 100, 52, 99, 102, 50]), RecordHeader(key = kafka_correlationId, value = [123, 49, 119, -43, -93, -121, 72, -25, -79, 72, 91, 9, -113, -104, -114, 82]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24435e7b36-44fe-424c-8974-8e10670f0460, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 18:54:28.565[0;39m [32m INFO [,8c9b6987dd3abc68ef7466dadf098a38,5d75522695627509,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 18:54:28.570[0;39m [32m INFO [,8c9b6987dd3abc68ef7466dadf098a38,5d75522695627509,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24435e7b36-44fe-424c-8974-8e10670f0460
[2m2024-06-20 18:55:42.618[0;39m [32m INFO [,e25c097ffa9223c5,30414d42ec277ba7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 577, CreateTime = 1718884542613, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 52, 49, 48, 57, 49, 50, 50, 45, 57, 100, 97, 51, 45, 52, 55, 52, 52, 45, 98, 54, 100, 53, 45, 53, 55, 56, 48, 101, 49, 97, 56, 99, 56, 54, 48]), RecordHeader(key = kafka_correlationId, value = [73, -103, -96, -87, -4, 126, 79, -50, -83, -84, 56, -110, 48, -46, -76, -38]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243eb164b7-506b-421b-84e5-abf169da4c67, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 18:55:42.620[0;39m [32m INFO [,e25c097ffa9223c5,30414d42ec277ba7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 18:55:42.626[0;39m [32m INFO [,e25c097ffa9223c5,30414d42ec277ba7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243eb164b7-506b-421b-84e5-abf169da4c67
[2m2024-06-20 18:56:38.771[0;39m [32m INFO [,9aaf74c933dba14799a4560622817ded,06cdb622b0ace1ce,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 611, CreateTime = 1718884577948, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 53, 100, 54, 100, 52, 101, 100, 45, 52, 51, 56, 55, 45, 52, 52, 51, 101, 45, 57, 52, 98, 52, 45, 49, 98, 55, 57, 99, 52, 51, 97, 102, 98, 49, 57]), RecordHeader(key = kafka_correlationId, value = [-58, -69, 107, -36, 7, 30, 67, 4, -104, -118, 29, 26, -23, 39, -95, 101]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24500dd844-8663-4dc1-a15b-3ce8a406e2e2, value = {"customerNo":"203121933","username":"lv24"})
[2m2024-06-20 18:56:38.775[0;39m [32m INFO [,9aaf74c933dba14799a4560622817ded,06cdb622b0ace1ce,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121933, username=lv24)
[2m2024-06-20 18:56:38.783[0;39m [32m INFO [,9aaf74c933dba14799a4560622817ded,06cdb622b0ace1ce,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121933","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24500dd844-8663-4dc1-a15b-3ce8a406e2e2
[2m2024-06-20 18:58:43.137[0;39m [32m INFO [,f6ef0d2384360d7b,bfa448e8aaf85f0e,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 569, CreateTime = 1718884723086, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 54, 101, 49, 101, 51, 50, 101, 45, 98, 99, 101, 101, 45, 52, 52, 49, 53, 45, 57, 54, 99, 56, 45, 97, 52, 55, 49, 54, 99, 56, 101, 99, 49, 50, 97]), RecordHeader(key = kafka_correlationId, value = [58, -126, -86, -85, -44, -23, 69, 47, -121, -98, -62, 66, 101, 107, 81, 61]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249bf7dd8a-2ccf-43da-8f6a-0edc59fe9d13, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 18:58:43.140[0;39m [32m INFO [,f6ef0d2384360d7b,bfa448e8aaf85f0e,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 18:58:43.149[0;39m [32m INFO [,f6ef0d2384360d7b,bfa448e8aaf85f0e,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249bf7dd8a-2ccf-43da-8f6a-0edc59fe9d13
[2m2024-06-20 19:06:54.182[0;39m [32m INFO [,801a27d20b203d65,93454c4202d92fa3,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 591, CreateTime = 1718885214156, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 54, 56, 50, 56, 55, 50, 52, 45, 51, 49, 100, 101, 45, 52, 99, 54, 97, 45, 97, 48, 56, 56, 45, 100, 54, 50, 101, 98, 97, 98, 50, 53, 50, 52, 51]), RecordHeader(key = kafka_correlationId, value = [9, -14, -93, 63, 125, 19, 73, 43, -104, 13, 7, -11, -115, -101, 91, -96]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET5c191abc-964e-475b-b2d1-a07c9422ad34, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 19:06:54.184[0;39m [32m INFO [,801a27d20b203d65,93454c4202d92fa3,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 19:06:54.193[0;39m [32m INFO [,801a27d20b203d65,93454c4202d92fa3,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET5c191abc-964e-475b-b2d1-a07c9422ad34
[2m2024-06-20 19:09:33.240[0;39m [32m INFO [,bc6f63e160dafafc,ba10da6ab1bfa30d,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 603, CreateTime = 1718885352413, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 53, 56, 99, 57, 101, 102, 97, 45, 102, 100, 54, 101, 45, 52, 97, 48, 57, 45, 97, 102, 55, 51, 45, 98, 97, 48, 102, 51, 57, 53, 100, 57, 99, 49, 100]), RecordHeader(key = kafka_correlationId, value = [125, -71, -116, -33, -97, -53, 68, 29, -102, 27, -70, -61, -55, -76, -10, 32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET2394e3db-c304-41d0-83fd-d3b06d9c6048, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 19:09:33.242[0;39m [32m INFO [,bc6f63e160dafafc,ba10da6ab1bfa30d,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 19:09:33.251[0;39m [32m INFO [,bc6f63e160dafafc,ba10da6ab1bfa30d,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET2394e3db-c304-41d0-83fd-d3b06d9c6048
[2m2024-06-20 19:13:29.293[0;39m [32m INFO [,2b9f02e8f61d7d9c,a72c287e1d9940ae,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 612, CreateTime = 1718885609274, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 55, 48, 102, 51, 98, 99, 50, 45, 97, 53, 48, 56, 45, 52, 49, 102, 48, 45, 98, 50, 54, 98, 45, 102, 99, 56, 102, 53, 101, 50, 53, 49, 49, 56, 55]), RecordHeader(key = kafka_correlationId, value = [101, 13, -80, -57, -81, -57, 79, 73, -91, 116, -60, -82, 92, -105, -5, -119]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET2b3cbe43-1c75-4a04-a46f-3c26d436928f, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 19:13:29.295[0;39m [32m INFO [,2b9f02e8f61d7d9c,a72c287e1d9940ae,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 19:13:29.304[0;39m [32m INFO [,2b9f02e8f61d7d9c,a72c287e1d9940ae,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET2b3cbe43-1c75-4a04-a46f-3c26d436928f
[2m2024-06-20 19:14:48.930[0;39m [32m INFO [,010c23cbe20dcc4efaebd736fa81918e,d85c35b3805031d6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 589, CreateTime = 1718885668100, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 56, 56, 97, 102, 100, 101, 50, 45, 52, 99, 52, 53, 45, 52, 55, 101, 50, 45, 56, 97, 97, 48, 45, 97, 97, 98, 54, 55, 98, 102, 97, 52, 52, 51, 50]), RecordHeader(key = kafka_correlationId, value = [-36, -24, -104, 55, 14, -94, 69, -124, -98, 77, 6, 86, 91, 1, 32, 15]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24aaf5bf9a-4ef4-467c-ae3d-01dd0dfcf6ab, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 19:14:48.932[0;39m [32m INFO [,010c23cbe20dcc4efaebd736fa81918e,d85c35b3805031d6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 19:14:48.941[0;39m [32m INFO [,010c23cbe20dcc4efaebd736fa81918e,d85c35b3805031d6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24aaf5bf9a-4ef4-467c-ae3d-01dd0dfcf6ab
[2m2024-06-20 19:17:09.373[0;39m [32m INFO [,b6d313e0b97a383f,67ec268ce5eaca32,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 532, CreateTime = 1718885808545, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 98, 53, 101, 52, 56, 100, 48, 45, 57, 56, 48, 50, 45, 52, 98, 48, 98, 45, 56, 56, 100, 100, 45, 101, 56, 56, 53, 55, 57, 97, 55, 57, 56, 102, 101]), RecordHeader(key = kafka_correlationId, value = [-20, 62, -37, 8, 96, 46, 79, 68, -119, 102, 24, 29, -121, -87, 96, 75]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccda880d1db-864f-4147-985e-f66271db7b70, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 19:17:09.377[0;39m [32m INFO [,b6d313e0b97a383f,67ec268ce5eaca32,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 19:17:09.385[0;39m [32m INFO [,b6d313e0b97a383f,67ec268ce5eaca32,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccda880d1db-864f-4147-985e-f66271db7b70
[2m2024-06-20 19:18:41.708[0;39m [32m INFO [,f3a904ac5f71f36e,2788ef7a9f62b2c7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 604, CreateTime = 1718885900878, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 55, 51, 102, 48, 57, 98, 56, 45, 54, 57, 53, 100, 45, 52, 55, 102, 51, 45, 57, 53, 102, 55, 45, 52, 100, 102, 98, 57, 97, 99, 50, 53, 99, 57, 57]), RecordHeader(key = kafka_correlationId, value = [24, -92, 47, 52, -116, -120, 74, 48, -82, -95, 11, -58, 93, 72, -98, 59]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd5e10a177-463a-4e51-84aa-2551e892fb13, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 19:18:41.712[0;39m [32m INFO [,f3a904ac5f71f36e,2788ef7a9f62b2c7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 19:18:41.722[0;39m [32m INFO [,f3a904ac5f71f36e,2788ef7a9f62b2c7,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd5e10a177-463a-4e51-84aa-2551e892fb13
[2m2024-06-20 19:20:07.486[0;39m [32m INFO [,9a825a05ae4cd4b4,b51160984927f095,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 601, CreateTime = 1718885986658, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 48, 56, 57, 55, 57, 53, 45, 98, 53, 102, 99, 45, 52, 51, 57, 50, 45, 57, 100, 53, 98, 45, 102, 49, 57, 51, 99, 53, 51, 97, 100, 55, 55, 48]), RecordHeader(key = kafka_correlationId, value = [-64, -50, 51, 15, 76, -119, 68, 27, -121, -89, 91, 54, 53, -43, -98, 23]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd40c20877-8743-440d-8067-0228c59064f4, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 19:20:07.490[0;39m [32m INFO [,9a825a05ae4cd4b4,b51160984927f095,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 19:20:07.497[0;39m [32m INFO [,9a825a05ae4cd4b4,b51160984927f095,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd40c20877-8743-440d-8067-0228c59064f4
[2m2024-06-20 19:22:44.275[0;39m [32m INFO [,1e5714afbb475718,e215990a4a360c89,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 533, CreateTime = 1718886164260, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 55, 51, 48, 48, 51, 51, 97, 45, 48, 56, 101, 102, 45, 52, 97, 48, 102, 45, 56, 49, 49, 57, 45, 98, 50, 49, 56, 99, 52, 51, 55, 97, 51, 102, 99]), RecordHeader(key = kafka_correlationId, value = [34, -126, 71, -48, -17, 3, 78, 64, -122, 68, 101, 104, -10, 47, 67, 97]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETa9dd5649-df04-4397-9cb4-23df5ff7be31, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 19:22:44.276[0;39m [32m INFO [,1e5714afbb475718,e215990a4a360c89,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 19:22:44.282[0;39m [32m INFO [,1e5714afbb475718,e215990a4a360c89,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETa9dd5649-df04-4397-9cb4-23df5ff7be31
[2m2024-06-20 19:32:55.745[0;39m [32m INFO [,da4bf5ae817124f1,ab85f9815b50d984,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 589, CreateTime = 1718886775755, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 97, 98, 54, 99, 49, 97, 99, 45, 54, 53, 100, 52, 45, 52, 57, 99, 54, 45, 57, 102, 54, 56, 45, 100, 102, 49, 102, 97, 49, 55, 100, 99, 57, 56, 55]), RecordHeader(key = kafka_correlationId, value = [103, -44, 60, 27, -51, -15, 64, -95, -81, -109, -125, -83, -31, 99, 39, -43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETdbd2babb-3a62-48b6-ad8f-4f268dfdb0d2, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 19:32:55.749[0;39m [32m INFO [,da4bf5ae817124f1,ab85f9815b50d984,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 19:32:55.757[0;39m [32m INFO [,da4bf5ae817124f1,ab85f9815b50d984,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETdbd2babb-3a62-48b6-ad8f-4f268dfdb0d2
[2m2024-06-20 19:34:24.007[0;39m [32m INFO [,91684cba4f02b219,f3d52b2fd8479d2c,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 23, leaderEpoch = 0, offset = 592, CreateTime = 1718886864002, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 57, 100, 54, 98, 57, 51, 50, 45, 57, 52, 48, 99, 45, 52, 102, 101, 102, 45, 57, 55, 48, 53, 45, 101, 100, 55, 57, 55, 53, 99, 102, 48, 100, 97, 55]), RecordHeader(key = kafka_correlationId, value = [94, 19, 109, 116, -1, 100, 66, -25, -103, 98, -71, 48, -65, -45, 6, 60]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f8563583-bb79-4860-9f70-ef9bdaf2b0cf, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 19:34:24.008[0;39m [32m INFO [,91684cba4f02b219,f3d52b2fd8479d2c,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 19:34:24.016[0;39m [32m INFO [,91684cba4f02b219,f3d52b2fd8479d2c,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f8563583-bb79-4860-9f70-ef9bdaf2b0cf
[2m2024-06-20 20:02:52.299[0;39m [32m INFO [,5f598ebf938e7db0,5bf54770cb97f816,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 590, CreateTime = 1718888572293, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 97, 100, 102, 48, 55, 56, 101, 45, 53, 57, 101, 56, 45, 52, 97, 50, 49, 45, 97, 55, 48, 55, 45, 101, 55, 52, 56, 53, 49, 54, 53, 99, 56, 54, 56]), RecordHeader(key = kafka_correlationId, value = [86, -91, -61, -89, 5, -19, 74, -58, -99, -57, -82, -57, 107, 71, -78, -68]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243a3caae6-6a23-48f1-b788-fde4cb70d978, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-20 20:02:52.301[0;39m [32m INFO [,5f598ebf938e7db0,5bf54770cb97f816,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-20 20:02:52.307[0;39m [32m INFO [,5f598ebf938e7db0,5bf54770cb97f816,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243a3caae6-6a23-48f1-b788-fde4cb70d978
[2m2024-06-20 20:09:13.105[0;39m [32m INFO [,d4e2a17c12f40b37,e48b28ca7b8b1a5a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 570, CreateTime = 1718888953089, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 53, 98, 98, 52, 50, 48, 101, 45, 56, 56, 98, 50, 45, 52, 48, 102, 57, 45, 98, 97, 51, 57, 45, 53, 98, 55, 101, 54, 48, 50, 48, 54, 49, 55, 56]), RecordHeader(key = kafka_correlationId, value = [-12, 38, -30, 88, -102, -27, 71, -73, -90, -20, 71, -3, 63, -50, 6, -51]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET6f0d8982-17c4-4ea0-9fd0-c53e0bc3cb09, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-20 20:09:13.113[0;39m [32m INFO [,d4e2a17c12f40b37,e48b28ca7b8b1a5a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-20 20:09:13.123[0;39m [32m INFO [,d4e2a17c12f40b37,e48b28ca7b8b1a5a,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET6f0d8982-17c4-4ea0-9fd0-c53e0bc3cb09
[2m2024-06-20 20:14:41.369[0;39m [32m INFO [,45d075fa7e4019ce7da8dc647b5e15e7,ca8dfbca317f1b3f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 613, CreateTime = 1718889260516, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 55, 48, 50, 50, 100, 55, 48, 45, 99, 53, 50, 52, 45, 52, 102, 50, 55, 45, 56, 51, 55, 55, 45, 54, 100, 101, 97, 97, 57, 54, 56, 52, 98, 101, 48]), RecordHeader(key = kafka_correlationId, value = [78, -94, -69, 31, -8, -126, 70, -9, -128, -104, -89, -11, -24, 3, 19, 123]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2424792a5d-f5a5-4689-98b8-c65f5a0106a7, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 20:14:41.370[0;39m [32m INFO [,45d075fa7e4019ce7da8dc647b5e15e7,ca8dfbca317f1b3f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 20:14:41.376[0;39m [32m INFO [,45d075fa7e4019ce7da8dc647b5e15e7,ca8dfbca317f1b3f,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2424792a5d-f5a5-4689-98b8-c65f5a0106a7
[2m2024-06-20 21:02:26.653[0;39m [32m INFO [,c50a2f14e8e1ccf2,61779f71d40251cb,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 591, CreateTime = 1718892125791, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 52, 53, 49, 48, 49, 53, 50, 45, 52, 54, 57, 102, 45, 52, 56, 99, 52, 45, 97, 99, 52, 51, 45, 52, 99, 97, 57, 50, 100, 101, 54, 102, 102, 57, 99]), RecordHeader(key = kafka_correlationId, value = [30, -125, -53, 118, 35, -41, 77, -121, -91, -119, -79, -5, 41, -39, -68, -123]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd159ee5da-39a9-47c0-8d57-1d6b210d3a4b, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 21:02:26.679[0;39m [32m INFO [,c50a2f14e8e1ccf2,61779f71d40251cb,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 21:02:26.688[0;39m [32m INFO [,c50a2f14e8e1ccf2,61779f71d40251cb,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd159ee5da-39a9-47c0-8d57-1d6b210d3a4b
[2m2024-06-20 21:29:26.731[0;39m [32m INFO [,45e78841b9f47b57aa14651b4502db2c,570e908f62d6f3f7,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 1, leaderEpoch = 0, offset = 576, CreateTime = 1718893745865, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 51, 53, 49, 97, 101, 97, 49, 45, 101, 48, 50, 101, 45, 52, 57, 102, 99, 45, 98, 50, 52, 102, 45, 51, 102, 97, 102, 100, 53, 101, 53, 53, 51, 100, 101]), RecordHeader(key = kafka_correlationId, value = [-112, -93, 44, -25, -55, -9, 78, 29, -109, 45, 119, -19, 12, 100, 99, -96]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e18edd67-667b-40e4-b18b-115c34dd7fd4, value = {"customerNo":"203122188","username":"lv24"})
[2m2024-06-20 21:29:26.732[0;39m [32m INFO [,45e78841b9f47b57aa14651b4502db2c,570e908f62d6f3f7,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122188, username=lv24)
[2m2024-06-20 21:29:26.737[0;39m [32m INFO [,45e78841b9f47b57aa14651b4502db2c,570e908f62d6f3f7,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122188","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e18edd67-667b-40e4-b18b-115c34dd7fd4
[2m2024-06-20 21:29:27.503[0;39m [32m INFO [,4e61364f96f890e0e42f085706fd2bac,92300c41a8d52fa6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 578, CreateTime = 1718893746636, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 99, 98, 48, 97, 51, 48, 52, 45, 57, 100, 49, 48, 45, 52, 48, 57, 49, 45, 97, 51, 53, 53, 45, 100, 97, 48, 100, 55, 52, 98, 48, 97, 56, 49, 101]), RecordHeader(key = kafka_correlationId, value = [57, 3, -7, -71, 5, -36, 71, -75, -118, 117, -41, 39, -44, -59, -2, -100]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2480bfb343-0708-4b83-acbc-98db7b85353d, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-20 21:29:27.508[0;39m [32m INFO [,4e61364f96f890e0e42f085706fd2bac,92300c41a8d52fa6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-20 21:29:27.515[0;39m [32m INFO [,4e61364f96f890e0e42f085706fd2bac,92300c41a8d52fa6,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2480bfb343-0708-4b83-acbc-98db7b85353d
[2m2024-06-20 21:29:32.866[0;39m [32m INFO [,1217b98556fd576130605f25b75cacc0,97bcd6b468d68fed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 605, CreateTime = 1718893752001, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 52, 53, 53, 101, 100, 49, 53, 45, 51, 52, 55, 98, 45, 52, 51, 57, 101, 45, 97, 52, 55, 55, 45, 48, 97, 52, 97, 49, 48, 55, 50, 102, 97, 101, 53]), RecordHeader(key = kafka_correlationId, value = [-101, 85, -63, -83, 67, 120, 70, 119, -86, -59, -125, -30, -78, 45, 1, -101]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c6071124-3c02-419b-85c9-7aec1eadc444, value = {"customerNo":"203122188","username":"lv24"})
[2m2024-06-20 21:29:32.907[0;39m [32m INFO [,1217b98556fd576130605f25b75cacc0,97bcd6b468d68fed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122188, username=lv24)
[2m2024-06-20 21:29:32.913[0;39m [32m INFO [,1217b98556fd576130605f25b75cacc0,97bcd6b468d68fed,false][0;39m [35m10284[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122188","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c6071124-3c02-419b-85c9-7aec1eadc444
[2m2024-06-20 21:35:34.087[0;39m [32m INFO [,a491a6e29a25b7ec,4755f7b88351eb24,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 11, leaderEpoch = 0, offset = 614, CreateTime = 1718894113217, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 48, 98, 52, 97, 48, 52, 57, 45, 54, 98, 101, 100, 45, 52, 49, 50, 50, 45, 97, 48, 101, 56, 45, 57, 99, 56, 51, 102, 56, 57, 52, 50, 51, 56, 48]), RecordHeader(key = kafka_correlationId, value = [114, -97, -109, 2, -126, 27, 74, -89, -112, 28, -11, -45, 115, 58, 86, 27]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd6ab47f86-a011-4a32-8e00-af042169efe7, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-20 21:35:34.089[0;39m [32m INFO [,a491a6e29a25b7ec,4755f7b88351eb24,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-20 21:35:34.098[0;39m [32m INFO [,a491a6e29a25b7ec,4755f7b88351eb24,true][0;39m [35m10284[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd6ab47f86-a011-4a32-8e00-af042169efe7
