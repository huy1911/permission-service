[2m2024-06-26 09:13:41.591[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.SpringApplication              [0;39m 648 [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2024-06-26 09:13:42.349[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-26 09:13:42.349[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2024-06-26 09:13:42.403[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 43ms. Found 1 JPA repository interfaces.
[2m2024-06-26 09:13:42.403[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-26 09:13:42.403[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2m2024-06-26 09:13:42.418[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m 348 [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.lpb.mid.repo.UserRepositorys. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2024-06-26 09:13:42.418[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
[2m2024-06-26 09:13:42.650[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m 295 [2m:[0;39m BeanFactory id=a6a13df1-c7f9-3e20-a831-797d87db0177
[2m2024-06-26 09:13:43.205[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 108 [2m:[0;39m Tomcat initialized with port(s): 12389 (http)
[2m2024-06-26 09:13:43.205[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting service [Tomcat]
[2m2024-06-26 09:13:43.205[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.46]
[2m2024-06-26 09:13:43.351[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2024-06-26 09:13:43.351[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m 285 [2m:[0;39m Root WebApplicationContext: initialization completed in 1744 ms
[2m2024-06-26 09:13:44.317[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.redisson.Version                    [0;39m 43  [2m:[0;39m Redisson 3.27.1
[2m2024-06-26 09:13:44.627[0;39m [33m WARN [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.r.c.SequentialDnsAddressResolverFactory[0;39m 111 [2m:[0;39m DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher.
[2m2024-06-26 09:13:44.897[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[isson-netty-1-6][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 1 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-26 09:13:44.928[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[sson-netty-1-13][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 5 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-26 09:13:45.345[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m 361 [2m:[0;39m Building JPA container EntityManagerFactory for persistence unit 'default'
[2m2024-06-26 09:13:45.361[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m 31  [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2024-06-26 09:13:45.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.Version                   [0;39m 44  [2m:[0;39m HHH000412: Hibernate ORM core version 5.4.32.Final
[2m2024-06-26 09:13:45.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.a.c.r.java.JavaReflectionManager    [0;39m 56  [2m:[0;39m HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2m2024-06-26 09:13:45.498[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 110 [2m:[0;39m HikariPool-1 - Starting...
[2m2024-06-26 09:13:45.498[0;39m [33m WARN [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.util.DriverDataSource [0;39m 70  [2m:[0;39m Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
[2m2024-06-26 09:13:45.946[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 123 [2m:[0;39m HikariPool-1 - Start completed.
[2m2024-06-26 09:13:45.962[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.dialect.Dialect           [0;39m 175 [2m:[0;39m HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[2m2024-06-26 09:13:46.442[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m 52  [2m:[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2m2024-06-26 09:13:46.458[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.AbstractEntityManagerFactoryBean[0;39m 419 [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2024-06-26 09:13:46.532[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:13:46.563[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:13:46.563[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:13:46.563[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:13:46.585[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:13:46.585[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:13:46.616[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:13:46.616[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:13:46.616[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:13:47.249[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService 'applicationTaskExecutor'
[2m2024-06-26 09:13:47.271[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m 614 [2m:[0;39m ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2m2024-06-26 09:13:47.318[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.h.AbstractHandlerMethodMapping  [0;39m 351 [2m:[0;39m 2 mappings in 'requestMappingHandlerMapping'
[2m2024-06-26 09:13:47.333[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m 173 [2m:[0;39m Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2m2024-06-26 09:13:47.387[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.m.m.a.ExceptionHandlerExceptionResolver[0;39m 297 [2m:[0;39m ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[2m2024-06-26 09:13:47.887[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m 58  [2m:[0;39m LiveReload server is running on port 35729
[2m2024-06-26 09:13:48.235[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.e.web.EndpointLinksResolver     [0;39m 58  [2m:[0;39m Exposing 15 endpoint(s) beneath base path '/actuator'
[2m2024-06-26 09:13:48.350[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.372[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.372[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028372
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028388
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.388[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028404
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028404
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.404[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028419
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028419
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.419[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028435
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028435
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028435
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028435
[2m2024-06-26 09:13:48.435[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028450
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028450
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.450[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.466[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.466[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.466[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028466
[2m2024-06-26 09:13:48.466[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.466[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028473
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028473
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.473[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028488
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028488
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028488
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028504
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368028504
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 09:13:48.504[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 09:13:48.535[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 220 [2m:[0;39m Tomcat started on port(s): 12389 (http) with context path ''
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.604[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.635[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 09:13:48.905[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.StartupInfoLogger              [0;39m 61  [2m:[0;39m Started PermissionMain in 8.522 seconds (JVM running for 9.918)
[2m2024-06-26 09:13:49.221[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[3)-172.22.192.1][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2024-06-26 09:13:49.221[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[3)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 525 [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2024-06-26 09:13:49.221[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[3)-172.22.192.1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m 526 [2m:[0;39m Detected StandardServletMultipartResolver
[2m2024-06-26 09:13:49.237[0;39m [32mDEBUG [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[3)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 542 [2m:[0;39m enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2m2024-06-26 09:13:49.237[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[3)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 547 [2m:[0;39m Completed initialization in 16 ms
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.481[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.481[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.481[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.480[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.486[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.481[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.485[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Successfully joined group with generation 194
[2m2024-06-26 09:13:51.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.488[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.490[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.490[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.491[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.490[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.490[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.491[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.491[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.492[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.491[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.491[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.493[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.493[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.494[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.494[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.494[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 09:13:51.495[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Adding newly assigned partitions: check_token_send-17
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Adding newly assigned partitions: check_token_send-9
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Adding newly assigned partitions: check_token_send-26
[2m2024-06-26 09:13:51.497[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Adding newly assigned partitions: check_token_send-7
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Adding newly assigned partitions: check_token_send-22
[2m2024-06-26 09:13:51.497[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Adding newly assigned partitions: check_token_send-3
[2m2024-06-26 09:13:51.497[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Adding newly assigned partitions: check_token_send-18
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Adding newly assigned partitions: check_token_send-2
[2m2024-06-26 09:13:51.496[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Adding newly assigned partitions: check_token_send-13
[2m2024-06-26 09:13:51.497[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Adding newly assigned partitions: check_token_send-29
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Setting offset for partition check_token_send-22 to the committed offset FetchPosition{offset=679, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Setting offset for partition check_token_send-29 to the committed offset FetchPosition{offset=643, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Setting offset for partition check_token_send-3 to the committed offset FetchPosition{offset=718, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Setting offset for partition check_token_send-26 to the committed offset FetchPosition{offset=624, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Setting offset for partition check_token_send-2 to the committed offset FetchPosition{offset=633, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Setting offset for partition check_token_send-18 to the committed offset FetchPosition{offset=686, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Setting offset for partition check_token_send-7 to the committed offset FetchPosition{offset=689, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Setting offset for partition check_token_send-17 to the committed offset FetchPosition{offset=657, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Setting offset for partition check_token_send-13 to the committed offset FetchPosition{offset=687, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Setting offset for partition check_token_send-9 to the committed offset FetchPosition{offset=672, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-22]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-26]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-2]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-7]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-13]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-18]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-17]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-29]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-9]
[2m2024-06-26 09:13:51.518[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-3]
[2m2024-06-26 09:14:58.288[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 633, CreateTime = 1719368098237, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 97, 97, 50, 50, 52, 99, 56, 45, 99, 49, 51, 99, 45, 52, 54, 102, 53, 45, 98, 48, 55, 52, 45, 49, 49, 52, 98, 102, 98, 56, 49, 53, 49, 48, 49]), RecordHeader(key = kafka_correlationId, value = [-23, -117, 82, 65, -33, 0, 70, -37, -105, 39, -106, -50, -59, 70, -25, 92]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2492900bfd-8e43-4e82-b39d-a746ff162b32, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 09:14:58.300[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 09:14:58.364[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2492900bfd-8e43-4e82-b39d-a746ff162b32
[2m2024-06-26 09:14:58.374[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 3000000
	max.in.flight.requests.per.connection = 5
	max.request.size = 20971520
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 3000000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

[2m2024-06-26 09:14:58.376[0;39m [33m WARN [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.clients.producer.KafkaProducer    [0;39m 499 [2m:[0;39m [Producer clientId=producer-1] delivery.timeout.ms should be equal to or larger than linger.ms + request.timeout.ms. Setting it to 3000000.
[2m2024-06-26 09:14:58.387[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 09:14:58.387[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 09:14:58.387[0;39m [32m INFO [,178d64137562d6b3,a255a00065af03ce,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719368098386
[2m2024-06-26 09:14:58.401[0;39m [32m INFO [,,,][0;39m [35m10864[0;39m [2m---[0;39m [2m[ad | producer-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Producer clientId=producer-1] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 09:15:30.071[0;39m [32m INFO [,17299cc38f0c1cc7,fbebf8bbd818f099,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 672, CreateTime = 1719368130010, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 57, 99, 97, 102, 48, 102, 53, 45, 50, 54, 48, 57, 45, 52, 101, 53, 99, 45, 97, 54, 57, 54, 45, 52, 102, 51, 102, 52, 100, 49, 101, 100, 99, 98, 100]), RecordHeader(key = kafka_correlationId, value = [64, 60, 43, -46, 31, 60, 78, -21, -106, -63, 49, 114, -38, 124, -29, 89]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETb6430064-84fa-4271-af2b-2b06186f4294, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 09:15:30.071[0;39m [32m INFO [,17299cc38f0c1cc7,fbebf8bbd818f099,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 09:15:30.109[0;39m [32m INFO [,17299cc38f0c1cc7,fbebf8bbd818f099,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETb6430064-84fa-4271-af2b-2b06186f4294
[2m2024-06-26 09:16:52.031[0;39m [32m INFO [,d4eeef1d6c6f3c04,59a80280f624d534,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 624, CreateTime = 1719368211955, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 49, 101, 97, 52, 56, 51, 56, 45, 100, 49, 49, 49, 45, 52, 48, 56, 55, 45, 98, 97, 56, 53, 45, 97, 52, 50, 102, 55, 98, 57, 53, 101, 100, 101, 53]), RecordHeader(key = kafka_correlationId, value = [52, 99, 105, -18, 80, 64, 69, 67, -121, -26, -70, -44, 21, -14, -81, -64]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249e407590-1618-4cc3-80c9-066c72c3917a, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 09:16:52.032[0;39m [32m INFO [,d4eeef1d6c6f3c04,59a80280f624d534,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 09:16:52.037[0;39m [32m INFO [,d4eeef1d6c6f3c04,59a80280f624d534,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249e407590-1618-4cc3-80c9-066c72c3917a
[2m2024-06-26 09:17:46.968[0;39m [32m INFO [,4f50722c5ee63641,0bb89b67d7237d44,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 625, CreateTime = 1719368266957, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 102, 55, 97, 97, 55, 102, 55, 45, 52, 102, 98, 53, 45, 52, 54, 99, 57, 45, 56, 52, 53, 48, 45, 55, 99, 57, 50, 97, 99, 54, 99, 98, 55, 97, 100]), RecordHeader(key = kafka_correlationId, value = [-75, 90, 9, -17, -113, 74, 67, -107, -119, 35, -2, -23, -52, 25, -30, 119]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24cfb65e4e-2e44-49f7-8a4c-4b7698623595, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 09:17:46.970[0;39m [32m INFO [,4f50722c5ee63641,0bb89b67d7237d44,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 09:17:46.980[0;39m [32m INFO [,4f50722c5ee63641,0bb89b67d7237d44,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24cfb65e4e-2e44-49f7-8a4c-4b7698623595
[2m2024-06-26 09:22:01.553[0;39m [32m INFO [,8bd801d44ad9c382,c55a86787dc47953,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 673, CreateTime = 1719368521520, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 56, 53, 50, 98, 100, 100, 97, 45, 99, 51, 57, 50, 45, 52, 99, 49, 98, 45, 56, 52, 50, 50, 45, 51, 57, 56, 98, 52, 57, 102, 55, 98, 101, 56, 100]), RecordHeader(key = kafka_correlationId, value = [-19, 24, -88, 11, -72, -38, 79, 49, -84, -128, 124, -123, -102, -69, -13, -113]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET2bed0152-c2d1-4cc0-8394-719d8a7eeed8, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 09:22:01.555[0;39m [32m INFO [,8bd801d44ad9c382,c55a86787dc47953,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 09:22:01.560[0;39m [32m INFO [,8bd801d44ad9c382,c55a86787dc47953,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET2bed0152-c2d1-4cc0-8394-719d8a7eeed8
[2m2024-06-26 09:25:31.250[0;39m [32m INFO [,c7dcaac3a6b2f043,156ef00638aefb70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 22, leaderEpoch = 0, offset = 679, CreateTime = 1719368977228, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 49, 51, 55, 98, 51, 55, 56, 45, 99, 51, 101, 100, 45, 52, 100, 54, 54, 45, 97, 56, 48, 53, 45, 97, 102, 52, 48, 99, 54, 101, 101, 100, 97, 57, 101]), RecordHeader(key = kafka_correlationId, value = [-91, -94, 12, 97, 30, -37, 71, 121, -71, 119, -126, -51, -68, 79, 113, 41]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2486617983-89e2-40d8-b082-485362c41ed6, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 09:25:31.253[0;39m [32m INFO [,c7dcaac3a6b2f043,156ef00638aefb70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 09:25:31.263[0;39m [32m INFO [,c7dcaac3a6b2f043,156ef00638aefb70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2486617983-89e2-40d8-b082-485362c41ed6
[2m2024-06-26 09:25:35.837[0;39m [32m INFO [,f5cc749f7858855c,ed8cf3708771aced,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 687, CreateTime = 1719368981794, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 55, 50, 54, 98, 98, 102, 97, 45, 49, 56, 98, 57, 45, 52, 51, 57, 102, 45, 57, 57, 97, 102, 45, 54, 51, 56, 55, 98, 52, 97, 97, 101, 48, 100, 101]), RecordHeader(key = kafka_correlationId, value = [-74, -81, 34, 36, -68, -46, 68, -19, -86, 84, 75, 32, -85, -33, -95, -37]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24101e4fa4-6892-4f69-869c-e693e2287342, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 09:25:35.839[0;39m [32m INFO [,f5cc749f7858855c,ed8cf3708771aced,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 09:25:35.852[0;39m [32m INFO [,f5cc749f7858855c,ed8cf3708771aced,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24101e4fa4-6892-4f69-869c-e693e2287342
[2m2024-06-26 09:25:47.967[0;39m [32m INFO [,10124b6ba1f5653c,d686ed3ec06419ec,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 634, CreateTime = 1719368747956, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 101, 55, 97, 51, 99, 52, 98, 45, 99, 50, 55, 57, 45, 52, 48, 102, 97, 45, 97, 54, 98, 49, 45, 51, 57, 101, 48, 98, 56, 99, 55, 49, 55, 54, 97]), RecordHeader(key = kafka_correlationId, value = [-51, -12, -83, -94, -1, 93, 66, 121, -77, -112, -123, -55, -23, -82, 27, 0]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247ed96bab-76ec-4396-a468-dd4e69fe450a, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 09:25:47.969[0;39m [32m INFO [,10124b6ba1f5653c,d686ed3ec06419ec,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 09:25:47.984[0;39m [32m INFO [,10124b6ba1f5653c,d686ed3ec06419ec,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247ed96bab-76ec-4396-a468-dd4e69fe450a
[2m2024-06-26 09:28:54.955[0;39m [32m INFO [,c1cd0604b9aeeaa1,593763c9edde2c79,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 26, leaderEpoch = 0, offset = 626, CreateTime = 1719369180929, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 100, 52, 57, 51, 97, 99, 99, 45, 99, 52, 51, 56, 45, 52, 57, 51, 49, 45, 56, 55, 48, 48, 45, 49, 97, 57, 98, 48, 51, 52, 48, 56, 55, 55, 99]), RecordHeader(key = kafka_correlationId, value = [107, -28, 92, -109, 101, -51, 78, -22, -100, -9, 68, -124, -22, -115, -104, -47]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24dcd6c7f2-380e-45de-9293-374d54b809e5, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 09:28:54.958[0;39m [32m INFO [,c1cd0604b9aeeaa1,593763c9edde2c79,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 09:28:54.965[0;39m [32m INFO [,c1cd0604b9aeeaa1,593763c9edde2c79,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24dcd6c7f2-380e-45de-9293-374d54b809e5
[2m2024-06-26 09:30:14.864[0;39m [32m INFO [,8a10536953ac47ae,463cce47fe4bd2c2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 17, leaderEpoch = 0, offset = 657, CreateTime = 1719368991403, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 51, 50, 52, 56, 51, 55, 56, 45, 54, 99, 51, 57, 45, 52, 102, 101, 49, 45, 98, 57, 50, 50, 45, 50, 97, 98, 53, 57, 49, 52, 55, 51, 98, 99, 49]), RecordHeader(key = kafka_correlationId, value = [0, 18, -81, 40, -9, -17, 69, 105, -124, 54, -78, 21, 107, -29, -85, 17]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd716e5d61-ac81-448d-96fa-b3357258f8f6, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 09:30:14.864[0;39m [32m INFO [,8a10536953ac47ae,463cce47fe4bd2c2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 09:30:14.879[0;39m [32m INFO [,8a10536953ac47ae,463cce47fe4bd2c2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd716e5d61-ac81-448d-96fa-b3357258f8f6
[2m2024-06-26 09:33:38.993[0;39m [32m INFO [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 635, CreateTime = 1719369195530, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 101, 100, 100, 48, 57, 57, 51, 45, 56, 55, 51, 52, 45, 52, 98, 102, 49, 45, 57, 57, 97, 101, 45, 102, 56, 99, 52, 52, 57, 55, 102, 99, 57, 97, 57]), RecordHeader(key = kafka_correlationId, value = [55, 14, -35, 46, 87, -45, 65, -125, -69, -24, 97, -71, -42, -107, -59, 28]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationETAXba0a2db8-dbb4-4d50-b186-4982310a8a55, value = {"customerNo":"800191404","username":"ETAX"})
[2m2024-06-26 09:33:38.993[0;39m [32m INFO [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=800191404, username=ETAX)
[2m2024-06-26 09:33:38.993[0;39m [32mDEBUG [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:33:39.131[0;39m [32m INFO [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    6347100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    18015700 nanoseconds spent preparing 1 JDBC statements;
    7624500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:33:39.147[0;39m [32m INFO [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=ETAX, appId=676574565, customerNo=800191404, whiteListIp=null, branchCode=null, secretKey=BW3z7K6AvT9eoa/xptnmCoRnncWfuTc0f6JWTO9clRo=)
[2m2024-06-26 09:33:39.147[0;39m [32m INFO [,141d6b86f6611c61,5c33a3d7dbd28d69,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"ETAX","appId":"676574565","customerNo":"800191404","whiteListIp":null,"branchCode":null,"secretKey":"BW3z7K6AvT9eoa/xptnmCoRnncWfuTc0f6JWTO9clRo="} by key ---->AuthorizationETAXba0a2db8-dbb4-4d50-b186-4982310a8a55
[2m2024-06-26 09:37:16.592[0;39m [32m INFO [,7f31dee3b44612f6,5e30115890d821f2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 689, CreateTime = 1719369682560, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 97, 53, 51, 56, 48, 52, 97, 45, 51, 48, 50, 102, 45, 52, 49, 97, 99, 45, 57, 98, 51, 52, 45, 49, 98, 55, 100, 48, 54, 57, 101, 102, 52, 97, 49]), RecordHeader(key = kafka_correlationId, value = [95, -99, -20, -64, 50, -47, 68, 109, -127, 96, 33, -30, 50, -50, -24, -127]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247ece6c67-4d7b-4aa9-bee2-52ebc3028843, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 09:37:16.594[0;39m [32m INFO [,7f31dee3b44612f6,5e30115890d821f2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 09:37:16.616[0;39m [32m INFO [,7f31dee3b44612f6,5e30115890d821f2,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247ece6c67-4d7b-4aa9-bee2-52ebc3028843
[2m2024-06-26 09:45:07.215[0;39m [32m INFO [,31324a77a82648efc99bd784428a7c4c,f4b9778a50dc6ed1,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 22, leaderEpoch = 0, offset = 680, CreateTime = 1719369883745, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 55, 55, 97, 49, 49, 99, 50, 45, 97, 54, 98, 54, 45, 52, 53, 98, 53, 45, 56, 98, 50, 101, 45, 49, 48, 97, 100, 101, 100, 52, 56, 53, 53, 49, 100]), RecordHeader(key = kafka_correlationId, value = [-1, -37, 0, 8, -22, -94, 68, 19, -84, -9, 6, -102, -91, 43, 70, 92]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244414cbe1-393e-4afb-a796-b9d12e2621c9, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 09:45:07.217[0;39m [32m INFO [,31324a77a82648efc99bd784428a7c4c,f4b9778a50dc6ed1,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 09:45:07.232[0;39m [32m INFO [,31324a77a82648efc99bd784428a7c4c,f4b9778a50dc6ed1,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244414cbe1-393e-4afb-a796-b9d12e2621c9
[2m2024-06-26 09:45:38.532[0;39m [32m INFO [,dd88d3b26390e740a67addf04fe31fd3,e335a7ed16d75579,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 3, leaderEpoch = 0, offset = 718, CreateTime = 1719369915064, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 99, 56, 55, 54, 99, 56, 98, 45, 52, 56, 54, 101, 45, 52, 50, 52, 51, 45, 57, 57, 50, 53, 45, 98, 102, 50, 52, 52, 52, 101, 50, 55, 57, 102, 53]), RecordHeader(key = kafka_correlationId, value = [23, -73, 81, 80, 26, -25, 78, 3, -96, 112, 87, -23, -74, 124, -121, 65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a98ee7cc-4c32-4e5c-82ac-e95d61005a09, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 09:45:38.533[0;39m [32m INFO [,dd88d3b26390e740a67addf04fe31fd3,e335a7ed16d75579,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 09:45:38.540[0;39m [32m INFO [,dd88d3b26390e740a67addf04fe31fd3,e335a7ed16d75579,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a98ee7cc-4c32-4e5c-82ac-e95d61005a09
[2m2024-06-26 09:46:17.459[0;39m [32m INFO [,862954ccec06910cf2863d23c2f61868,b34718c721f75523,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 690, CreateTime = 1719369953896, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 101, 97, 54, 99, 99, 55, 100, 45, 57, 57, 97, 48, 45, 52, 48, 53, 57, 45, 98, 97, 49, 55, 45, 56, 54, 49, 56, 56, 52, 52, 53, 99, 48, 52, 48]), RecordHeader(key = kafka_correlationId, value = [49, 82, -117, -42, 64, -43, 67, 5, -89, -2, -37, 37, -106, -92, 54, 124]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247d9c7a63-8e9a-4179-93bd-5bcd84d0f56b, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 09:46:17.459[0;39m [32m INFO [,862954ccec06910cf2863d23c2f61868,b34718c721f75523,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 09:46:17.474[0;39m [32m INFO [,862954ccec06910cf2863d23c2f61868,b34718c721f75523,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247d9c7a63-8e9a-4179-93bd-5bcd84d0f56b
[2m2024-06-26 09:47:53.357[0;39m [32m INFO [,e91188440053ee10f8630714c764dd1e,c465d3b7cbd08222,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 3, leaderEpoch = 0, offset = 719, CreateTime = 1719370049887, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 52, 52, 101, 49, 98, 101, 51, 45, 53, 102, 53, 56, 45, 52, 52, 48, 54, 45, 97, 99, 56, 98, 45, 51, 102, 100, 55, 98, 101, 97, 102, 51, 100, 100, 56]), RecordHeader(key = kafka_correlationId, value = [-74, 66, -28, 14, -25, 0, 78, 37, -92, 24, 59, -92, 122, 19, -34, -97]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2482ecf181-57e9-433d-a420-2c12deccdf46, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 09:47:53.357[0;39m [32m INFO [,e91188440053ee10f8630714c764dd1e,c465d3b7cbd08222,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 09:47:53.357[0;39m [32m INFO [,e91188440053ee10f8630714c764dd1e,c465d3b7cbd08222,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2482ecf181-57e9-433d-a420-2c12deccdf46
[2m2024-06-26 09:48:32.276[0;39m [32m INFO [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 643, CreateTime = 1719370088752, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 102, 100, 56, 49, 57, 98, 52, 45, 50, 54, 49, 51, 45, 52, 99, 56, 50, 45, 57, 50, 100, 49, 45, 49, 101, 57, 97, 57, 48, 100, 102, 50, 100, 57, 99]), RecordHeader(key = kafka_correlationId, value = [81, -15, 106, -94, -75, 54, 68, -100, -76, 57, 25, -61, -81, 94, -42, 124]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2431544bb5-29f3-4286-9fb4-e18e8ef65dc1, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 09:48:32.276[0;39m [32m INFO [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 09:48:32.292[0;39m [32mDEBUG [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 09:48:32.307[0;39m [32m INFO [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    4465400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    4566900 nanoseconds spent preparing 1 JDBC statements;
    6882000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 09:48:32.307[0;39m [32m INFO [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122117, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-26 09:48:32.307[0;39m [32m INFO [,178d6024a3fb1bcd75a2bb97e4f0b886,0d79b4395a5b7dff,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2431544bb5-29f3-4286-9fb4-e18e8ef65dc1
[2m2024-06-26 09:50:27.771[0;39m [32m INFO [,dfd859e47c8dd18b296ee3356b19583a,f1203bfa7544e62c,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 644, CreateTime = 1719370204308, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 53, 55, 52, 53, 100, 97, 101, 45, 101, 101, 56, 52, 45, 52, 52, 55, 50, 45, 57, 100, 57, 56, 45, 97, 49, 55, 56, 50, 102, 101, 102, 98, 50, 102, 97]), RecordHeader(key = kafka_correlationId, value = [103, -77, 104, 97, -102, -62, 67, -101, -82, 59, 82, 81, 108, -8, -42, -19]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24224b5386-146f-43bd-8f1d-d36e7bf2c0a5, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 09:50:27.771[0;39m [32m INFO [,dfd859e47c8dd18b296ee3356b19583a,f1203bfa7544e62c,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 09:50:27.787[0;39m [32m INFO [,dfd859e47c8dd18b296ee3356b19583a,f1203bfa7544e62c,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24224b5386-146f-43bd-8f1d-d36e7bf2c0a5
[2m2024-06-26 09:52:40.165[0;39m [32m INFO [,2fc0f89472512a1c23d57c8d5c7c96d6,4fb55314285ec3d5,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 17, leaderEpoch = 0, offset = 658, CreateTime = 1719370336694, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 48, 49, 48, 55, 51, 99, 97, 45, 52, 56, 52, 50, 45, 52, 55, 102, 51, 45, 97, 50, 54, 49, 45, 52, 56, 55, 99, 51, 54, 48, 98, 98, 50, 100, 99]), RecordHeader(key = kafka_correlationId, value = [110, -122, -75, -92, -77, 120, 73, -89, -81, 99, 88, -99, -125, 33, -40, -90]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a0002038-325b-4671-a498-7ed080b878b6, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 09:52:40.170[0;39m [32m INFO [,2fc0f89472512a1c23d57c8d5c7c96d6,4fb55314285ec3d5,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 09:52:40.184[0;39m [32m INFO [,2fc0f89472512a1c23d57c8d5c7c96d6,4fb55314285ec3d5,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a0002038-325b-4671-a498-7ed080b878b6
[2m2024-06-26 09:53:14.792[0;39m [32m INFO [,4fa9b30481cfae71fdcc48f165e91b0e,f29308b1d2f68c03,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 691, CreateTime = 1719370371323, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 102, 97, 100, 98, 54, 50, 99, 45, 101, 50, 99, 54, 45, 52, 48, 53, 56, 45, 97, 49, 52, 53, 45, 99, 98, 101, 98, 101, 50, 53, 56, 49, 57, 97, 100]), RecordHeader(key = kafka_correlationId, value = [12, -29, -98, 12, -47, -103, 66, -95, -127, -128, 20, -26, 54, -39, 109, -63]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243df9a53f-ae46-46e3-a4d1-22c14f6eeb55, value = {"customerNo":"202558230","username":"lv24"})
[2m2024-06-26 09:53:14.794[0;39m [32m INFO [,4fa9b30481cfae71fdcc48f165e91b0e,f29308b1d2f68c03,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=202558230, username=lv24)
[2m2024-06-26 09:53:14.799[0;39m [32m INFO [,4fa9b30481cfae71fdcc48f165e91b0e,f29308b1d2f68c03,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"202558230","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243df9a53f-ae46-46e3-a4d1-22c14f6eeb55
[2m2024-06-26 09:53:16.201[0;39m [32m INFO [,1bceac91663b17cd0b15ea1933775d12,d80f1b7ad0b518cb,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 29, leaderEpoch = 0, offset = 645, CreateTime = 1719370372732, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 49, 97, 50, 54, 49, 50, 97, 45, 52, 56, 50, 100, 45, 52, 55, 98, 55, 45, 57, 50, 56, 57, 45, 99, 48, 53, 100, 50, 50, 97, 57, 55, 99, 48, 50]), RecordHeader(key = kafka_correlationId, value = [24, 89, 16, 66, -90, -96, 65, 66, -81, 19, 37, 29, 72, 93, 67, -61]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2491680840-d465-4cda-b3bc-f23ee7c969db, value = {"customerNo":"202558230","username":"lv24"})
[2m2024-06-26 09:53:16.203[0;39m [32m INFO [,1bceac91663b17cd0b15ea1933775d12,d80f1b7ad0b518cb,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=202558230, username=lv24)
[2m2024-06-26 09:53:16.208[0;39m [32m INFO [,1bceac91663b17cd0b15ea1933775d12,d80f1b7ad0b518cb,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"202558230","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2491680840-d465-4cda-b3bc-f23ee7c969db
[2m2024-06-26 09:55:37.514[0;39m [32m INFO [,d923446f762f712a46813ba277edd523,ae27bfaa37784080,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 22, leaderEpoch = 0, offset = 681, CreateTime = 1719370514043, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 98, 100, 57, 55, 56, 51, 55, 45, 102, 100, 50, 52, 45, 52, 55, 50, 56, 45, 56, 56, 48, 48, 45, 51, 100, 102, 100, 102, 48, 98, 50, 97, 100, 54, 48]), RecordHeader(key = kafka_correlationId, value = [-72, -100, 97, 114, 71, -19, 65, 100, -107, 108, -15, 99, 2, 0, 14, -79]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24394598c6-261b-469e-8e38-0c7b224cc9c3, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-26 09:55:37.517[0;39m [32m INFO [,d923446f762f712a46813ba277edd523,ae27bfaa37784080,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-26 09:55:37.523[0;39m [32m INFO [,d923446f762f712a46813ba277edd523,ae27bfaa37784080,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24394598c6-261b-469e-8e38-0c7b224cc9c3
[2m2024-06-26 09:59:22.982[0;39m [32m INFO [,b3ef12f9d4851525,38ee8a3d70726a70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 674, CreateTime = 1719371008985, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 49, 51, 48, 52, 102, 56, 51, 45, 53, 100, 101, 57, 45, 52, 56, 49, 50, 45, 98, 102, 54, 52, 45, 102, 52, 97, 100, 97, 52, 99, 49, 98, 56, 48, 48]), RecordHeader(key = kafka_correlationId, value = [111, -43, -105, 14, 10, -57, 75, 96, -79, 115, 90, 64, 123, -37, -103, -75]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ed953495-b938-4515-8d45-002d47999a35, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 09:59:22.983[0;39m [32m INFO [,b3ef12f9d4851525,38ee8a3d70726a70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 09:59:22.989[0;39m [32m INFO [,b3ef12f9d4851525,38ee8a3d70726a70,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ed953495-b938-4515-8d45-002d47999a35
[2m2024-06-26 10:05:10.828[0;39m [32m INFO [,535d87777eb4a4ce1fdaea718757668d,dcd4fcb357f1148e,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 17, leaderEpoch = 0, offset = 659, CreateTime = 1719371087358, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 98, 55, 97, 99, 99, 54, 51, 45, 50, 56, 55, 100, 45, 52, 49, 57, 52, 45, 57, 97, 53, 53, 45, 101, 98, 98, 99, 53, 52, 49, 100, 51, 99, 101, 53]), RecordHeader(key = kafka_correlationId, value = [-72, -34, 81, 52, -92, 50, 65, -28, -101, 90, -20, -7, -91, -20, 48, 58]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a2a97ae3-4972-491d-b153-532a95226173, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 10:05:10.831[0;39m [32m INFO [,535d87777eb4a4ce1fdaea718757668d,dcd4fcb357f1148e,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 10:05:10.843[0;39m [32m INFO [,535d87777eb4a4ce1fdaea718757668d,dcd4fcb357f1148e,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a2a97ae3-4972-491d-b153-532a95226173
[2m2024-06-26 10:05:28.361[0;39m [32m INFO [,8981e8d2ae03b27f4ddbaa18e0edff86,fdb69af954296f50,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 9, leaderEpoch = 0, offset = 675, CreateTime = 1719371104883, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 99, 52, 102, 51, 49, 98, 101, 45, 97, 53, 57, 101, 45, 52, 100, 97, 57, 45, 56, 50, 52, 97, 45, 52, 98, 100, 49, 54, 100, 56, 51, 54, 48, 48, 50]), RecordHeader(key = kafka_correlationId, value = [-90, -3, 84, -54, 90, 54, 73, 109, -71, 118, 45, -86, 1, 60, -43, -48]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242bccfc56-4544-4069-9a76-15c3c5010657, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 10:05:28.362[0;39m [32m INFO [,8981e8d2ae03b27f4ddbaa18e0edff86,fdb69af954296f50,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 10:05:28.368[0;39m [32m INFO [,8981e8d2ae03b27f4ddbaa18e0edff86,fdb69af954296f50,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242bccfc56-4544-4069-9a76-15c3c5010657
[2m2024-06-26 10:10:20.032[0;39m [32m INFO [,4ecfb311a3297f15,9a3852a4cc5f8bb3,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 18, leaderEpoch = 0, offset = 686, CreateTime = 1719371396553, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 97, 102, 54, 57, 56, 102, 97, 45, 100, 55, 100, 101, 45, 52, 51, 97, 55, 45, 98, 55, 101, 101, 45, 99, 53, 56, 56, 48, 49, 49, 57, 52, 99, 52, 57]), RecordHeader(key = kafka_correlationId, value = [-56, 63, 110, 24, 9, -112, 72, -9, -108, 101, -41, -128, 13, -6, 6, 120]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET9123b97d-c21a-41d0-a828-68cd5f195830, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 10:10:20.036[0;39m [32m INFO [,4ecfb311a3297f15,9a3852a4cc5f8bb3,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 10:10:20.048[0;39m [32m INFO [,4ecfb311a3297f15,9a3852a4cc5f8bb3,false][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET9123b97d-c21a-41d0-a828-68cd5f195830
[2m2024-06-26 10:12:41.527[0;39m [32m INFO [,d789ec39a9117435,572318a250c9fb48,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 22, leaderEpoch = 0, offset = 682, CreateTime = 1719371561454, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 48, 99, 56, 97, 53, 98, 48, 45, 52, 57, 100, 52, 45, 52, 102, 102, 54, 45, 98, 99, 53, 101, 45, 48, 50, 56, 52, 49, 99, 98, 53, 53, 56, 50, 49]), RecordHeader(key = kafka_correlationId, value = [-38, -53, 50, 30, 59, -103, 74, 74, -99, -100, 74, 68, -73, 3, 97, -89]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24cf335533-d51e-4fac-9478-412b855791a2, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:12:41.531[0;39m [32m INFO [,d789ec39a9117435,572318a250c9fb48,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:12:41.537[0;39m [32m INFO [,d789ec39a9117435,572318a250c9fb48,true][0;39m [35m10864[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24cf335533-d51e-4fac-9478-412b855791a2
[2m2024-06-26 10:12:57.781[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.SpringApplication              [0;39m 648 [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2024-06-26 10:12:58.423[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-26 10:12:58.423[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2024-06-26 10:12:58.476[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 47ms. Found 1 JPA repository interfaces.
[2m2024-06-26 10:12:58.485[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 249 [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2024-06-26 10:12:58.486[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 127 [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2m2024-06-26 10:12:58.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m 348 [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.lpb.mid.repo.UserRepositorys. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2024-06-26 10:12:58.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m 187 [2m:[0;39m Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
[2m2024-06-26 10:12:58.796[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m 295 [2m:[0;39m BeanFactory id=a6a13df1-c7f9-3e20-a831-797d87db0177
[2m2024-06-26 10:12:59.320[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 108 [2m:[0;39m Tomcat initialized with port(s): 12389 (http)
[2m2024-06-26 10:12:59.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting service [Tomcat]
[2m2024-06-26 10:12:59.326[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.46]
[2m2024-06-26 10:12:59.450[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2024-06-26 10:12:59.451[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m 285 [2m:[0;39m Root WebApplicationContext: initialization completed in 1660 ms
[2m2024-06-26 10:13:00.493[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.redisson.Version                    [0;39m 43  [2m:[0;39m Redisson 3.27.1
[2m2024-06-26 10:13:00.830[0;39m [33m WARN [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.r.c.SequentialDnsAddressResolverFactory[0;39m 111 [2m:[0;39m DNS TCP fallback on UDP query timeout disabled. Upgrade Netty to 4.1.105 or higher.
[2m2024-06-26 10:13:01.102[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[isson-netty-1-6][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 1 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-26 10:13:01.141[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[sson-netty-1-13][0;39m [36mo.redisson.connection.ConnectionsHolder [0;39m 191 [2m:[0;39m 5 connections initialized for 10.37.11.78/10.37.11.78:6379
[2m2024-06-26 10:13:01.627[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m 361 [2m:[0;39m Building JPA container EntityManagerFactory for persistence unit 'default'
[2m2024-06-26 10:13:01.635[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m 31  [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2024-06-26 10:13:01.667[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.Version                   [0;39m 44  [2m:[0;39m HHH000412: Hibernate ORM core version 5.4.32.Final
[2m2024-06-26 10:13:01.764[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.a.c.r.java.JavaReflectionManager    [0;39m 56  [2m:[0;39m HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2m2024-06-26 10:13:01.829[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 110 [2m:[0;39m HikariPool-1 - Starting...
[2m2024-06-26 10:13:01.830[0;39m [33m WARN [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.util.DriverDataSource [0;39m 70  [2m:[0;39m Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
[2m2024-06-26 10:13:02.324[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m 123 [2m:[0;39m HikariPool-1 - Start completed.
[2m2024-06-26 10:13:02.333[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36morg.hibernate.dialect.Dialect           [0;39m 175 [2m:[0;39m HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[2m2024-06-26 10:13:02.920[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m 52  [2m:[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2m2024-06-26 10:13:02.928[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.o.j.AbstractEntityManagerFactoryBean[0;39m 419 [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2024-06-26 10:13:03.067[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 10:13:03.098[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:13:03.099[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 10:13:03.099[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:13:03.127[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 10:13:03.127[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:13:03.163[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:13:03.165[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 10:13:03.165[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:13:03.880[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService 'applicationTaskExecutor'
[2m2024-06-26 10:13:03.910[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m 614 [2m:[0;39m ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2m2024-06-26 10:13:03.963[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.h.AbstractHandlerMethodMapping  [0;39m 351 [2m:[0;39m 2 mappings in 'requestMappingHandlerMapping'
[2m2024-06-26 10:13:03.988[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m 173 [2m:[0;39m Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2m2024-06-26 10:13:04.043[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36m.m.m.a.ExceptionHandlerExceptionResolver[0;39m 297 [2m:[0;39m ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[2m2024-06-26 10:13:04.696[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.d.a.OptionalLiveReloadServer      [0;39m 58  [2m:[0;39m LiveReload server is running on port 35729
[2m2024-06-26 10:13:05.073[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.a.e.web.EndpointLinksResolver     [0;39m 58  [2m:[0;39m Exposing 15 endpoint(s) beneath base path '/actuator'
[2m2024-06-26 10:13:05.199[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.236[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.237[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.237[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585235
[2m2024-06-26 10:13:05.239[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.241[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.245[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.249[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.249[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.249[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585249
[2m2024-06-26 10:13:05.250[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.250[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.254[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.257[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.258[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.258[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585257
[2m2024-06-26 10:13:05.258[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.258[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.260[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.263[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.263[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.263[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585263
[2m2024-06-26 10:13:05.264[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.264[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.266[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.269[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.269[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.270[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585269
[2m2024-06-26 10:13:05.270[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.270[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.284[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.287[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.287[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.288[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585287
[2m2024-06-26 10:13:05.288[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.288[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.291[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.295[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.295[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.296[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585295
[2m2024-06-26 10:13:05.296[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.296[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.299[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.303[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.303[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.303[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585303
[2m2024-06-26 10:13:05.304[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.304[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.307[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.310[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.310[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.310[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585310
[2m2024-06-26 10:13:05.310[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.310[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.312[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.314[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.315[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.315[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585314
[2m2024-06-26 10:13:05.315[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.315[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.318[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.320[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.320[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.320[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585320
[2m2024-06-26 10:13:05.321[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.321[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.323[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585324
[2m2024-06-26 10:13:05.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.325[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.327[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.329[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.329[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.329[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585329
[2m2024-06-26 10:13:05.329[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.330[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.339[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.341[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.341[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.341[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585341
[2m2024-06-26 10:13:05.341[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.342[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.346[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.349[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.350[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.350[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585349
[2m2024-06-26 10:13:05.350[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.350[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.353[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.354[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.355[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.355[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585354
[2m2024-06-26 10:13:05.355[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.355[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.357[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.359[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.359[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.359[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585359
[2m2024-06-26 10:13:05.359[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.359[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.361[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.363[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.364[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.364[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585363
[2m2024-06-26 10:13:05.364[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.364[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.366[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.368[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.368[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.368[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585368
[2m2024-06-26 10:13:05.369[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.369[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.371[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 20971520
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = check_token_red
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 20971520
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2024-06-26 10:13:05.373[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:13:05.373[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:13:05.373[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371585373
[2m2024-06-26 10:13:05.373[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m 974 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Subscribed to topic(s): check_token_send
[2m2024-06-26 10:13:05.373[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.s.c.ExecutorConfigurationSupport    [0;39m 181 [2m:[0;39m Initializing ExecutorService
[2m2024-06-26 10:13:05.387[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m 220 [2m:[0;39m Tomcat started on port(s): 12389 (http) with context path ''
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.498[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.499[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.502[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.501[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mordinator$FindCoordinatorResponseHandler[0;39m 797 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Discovered group coordinator 10.36.126.132:9092 (id: 2147483647 rack: null)
[2m2024-06-26 10:13:05.506[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.506[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.506[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.506[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.507[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.510[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.509[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.510[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 455 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.531[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.532[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m 552 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] (Re-)joining group
[2m2024-06-26 10:13:05.641[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[  restartedMain][0;39m [36mo.s.boot.StartupInfoLogger              [0;39m 61  [2m:[0;39m Started PermissionMain in 8.929 seconds (JVM running for 9.866)
[2m2024-06-26 10:13:06.041[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[2)-172.22.192.1][0;39m [36morg.apache.juli.logging.DirectJDKLog    [0;39m 173 [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2024-06-26 10:13:06.041[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[2)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 525 [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2024-06-26 10:13:06.041[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[2)-172.22.192.1][0;39m [36mo.s.web.servlet.DispatcherServlet       [0;39m 526 [2m:[0;39m Detected StandardServletMultipartResolver
[2m2024-06-26 10:13:06.083[0;39m [32mDEBUG [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[2)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 542 [2m:[0;39m enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2m2024-06-26 10:13:06.084[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[2)-172.22.192.1][0;39m [36mo.s.web.servlet.FrameworkServlet        [0;39m 547 [2m:[0;39m Completed initialization in 43 ms
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.457[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.456[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.457[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.458[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.i.AbstractCoordinator$2       [0;39m 503 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Successfully joined group with generation 196
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-6, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-19, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-4, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-20, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-7, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-8, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.459[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-3, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.463[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-2, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-9, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-5, groupId=check_token_red] Adding newly assigned partitions: 
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-1-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-8-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-7-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-4-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-2-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-18-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-3-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-19-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-5-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.464[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-6-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: []
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Adding newly assigned partitions: check_token_send-16
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Adding newly assigned partitions: check_token_send-10
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Adding newly assigned partitions: check_token_send-7
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Adding newly assigned partitions: check_token_send-13
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Adding newly assigned partitions: check_token_send-5
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Adding newly assigned partitions: check_token_send-24
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Adding newly assigned partitions: check_token_send-27
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Adding newly assigned partitions: check_token_send-2
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Adding newly assigned partitions: check_token_send-21
[2m2024-06-26 10:13:07.468[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 273 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Adding newly assigned partitions: check_token_send-20
[2m2024-06-26 10:13:07.493[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-17, groupId=check_token_red] Setting offset for partition check_token_send-24 to the committed offset FetchPosition{offset=676, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-15, groupId=check_token_red] Setting offset for partition check_token_send-20 to the committed offset FetchPosition{offset=679, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-16, groupId=check_token_red] Setting offset for partition check_token_send-21 to the committed offset FetchPosition{offset=654, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-12, groupId=check_token_red] Setting offset for partition check_token_send-10 to the committed offset FetchPosition{offset=656, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-10, groupId=check_token_red] Setting offset for partition check_token_send-5 to the committed offset FetchPosition{offset=679, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-1, groupId=check_token_red] Setting offset for partition check_token_send-2 to the committed offset FetchPosition{offset=636, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.134:9092 (id: 2 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-20]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-13, groupId=check_token_red] Setting offset for partition check_token_send-13 to the committed offset FetchPosition{offset=688, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-18, groupId=check_token_red] Setting offset for partition check_token_send-27 to the committed offset FetchPosition{offset=682, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.133:9092 (id: 1 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-14, groupId=check_token_red] Setting offset for partition check_token_send-16 to the committed offset FetchPosition{offset=655, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m 799 [2m:[0;39m [Consumer clientId=consumer-check_token_red-11, groupId=check_token_red] Setting offset for partition check_token_send-7 to the committed offset FetchPosition{offset=692, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.36.126.132:9092 (id: 0 rack: null)], epoch=0}}
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-21]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-24]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-5]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-10]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-13]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-2]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-16]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-27]
[2m2024-06-26 10:13:07.494[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mo.springframework.core.log.LogAccessor  [0;39m 292 [2m:[0;39m check_token_red: partitions assigned: [check_token_send-7]
[2m2024-06-26 10:16:09.303[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 636, CreateTime = 1719371769261, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 101, 97, 56, 101, 53, 53, 100, 45, 52, 55, 52, 49, 45, 52, 99, 99, 97, 45, 56, 53, 56, 101, 45, 51, 48, 53, 52, 51, 97, 50, 52, 101, 102, 50, 51]), RecordHeader(key = kafka_correlationId, value = [-92, -27, 57, -39, -92, -108, 71, 10, -74, 44, -64, 29, -39, 1, 121, -11]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24422bd895-d45b-4d49-9c9a-80efe105daf3, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:16:09.315[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:16:09.372[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24422bd895-d45b-4d49-9c9a-80efe105daf3
[2m2024-06-26 10:16:09.382[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.kafka.common.config.AbstractConfig  [0;39m 347 [2m:[0;39m ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [10.36.126.132:9092, 10.36.126.133:9092, 10.36.126.134:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 3000000
	max.in.flight.requests.per.connection = 5
	max.request.size = 20971520
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 3000000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

[2m2024-06-26 10:16:09.384[0;39m [33m WARN [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.clients.producer.KafkaProducer    [0;39m 499 [2m:[0;39m [Producer clientId=producer-1] delivery.timeout.ms should be equal to or larger than linger.ms + request.timeout.ms. Setting it to 3000000.
[2m2024-06-26 10:16:09.396[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 117 [2m:[0;39m Kafka version: 2.5.1
[2m2024-06-26 10:16:09.397[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 118 [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2024-06-26 10:16:09.397[0;39m [32m INFO [,fa950d383cb3128f,ceb7ac21031062d0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.utils.AppInfoParser$AppInfo     [0;39m 119 [2m:[0;39m Kafka startTimeMs: 1719371769396
[2m2024-06-26 10:16:09.412[0;39m [32m INFO [,,,][0;39m [35m15240[0;39m [2m---[0;39m [2m[ad | producer-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m 277 [2m:[0;39m [Producer clientId=producer-1] Cluster ID: OXXUcf4xR3-NtmPYLdvc7A
[2m2024-06-26 10:19:10.833[0;39m [32m INFO [,cb0d29a72dcc8752,ed033c6129554ad5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 679, CreateTime = 1719372196854, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 54, 49, 100, 52, 99, 56, 97, 45, 101, 53, 99, 99, 45, 52, 100, 51, 54, 45, 57, 50, 97, 57, 45, 52, 48, 54, 50, 55, 52, 49, 102, 53, 52, 54, 100]), RecordHeader(key = kafka_correlationId, value = [41, -5, -16, 65, -112, 109, 67, -98, -108, -90, -39, 60, 70, 83, -55, 46]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248970978b-3d0a-4c31-bb20-26b686d917d4, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 10:19:10.840[0;39m [32m INFO [,cb0d29a72dcc8752,ed033c6129554ad5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 10:19:10.862[0;39m [32m INFO [,cb0d29a72dcc8752,ed033c6129554ad5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248970978b-3d0a-4c31-bb20-26b686d917d4
[2m2024-06-26 10:25:20.409[0;39m [32m INFO [,3a8a41f8051b362b24edcb1597449f9a,1e74bfc9f5f55e7c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 679, CreateTime = 1719372296923, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 51, 55, 52, 52, 102, 99, 45, 99, 49, 100, 97, 45, 52, 102, 102, 57, 45, 56, 102, 99, 48, 45, 100, 99, 52, 101, 99, 54, 101, 100, 99, 51, 48, 48]), RecordHeader(key = kafka_correlationId, value = [-80, 121, -111, 0, 46, 83, 74, 12, -125, 69, -35, 7, -47, 103, -45, -58]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2437cd8164-5155-44ac-95eb-0f933235e8ea, value = {"customerNo":"203122261","username":"lv24"})
[2m2024-06-26 10:25:20.412[0;39m [32m INFO [,3a8a41f8051b362b24edcb1597449f9a,1e74bfc9f5f55e7c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122261, username=lv24)
[2m2024-06-26 10:25:20.421[0;39m [32m INFO [,3a8a41f8051b362b24edcb1597449f9a,1e74bfc9f5f55e7c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122261","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2437cd8164-5155-44ac-95eb-0f933235e8ea
[2m2024-06-26 10:28:07.153[0;39m [32m INFO [,af327126775f0cbe,0c2391697a149baa,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 637, CreateTime = 1719372733177, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 54, 56, 97, 98, 56, 49, 49, 45, 100, 98, 57, 53, 45, 52, 50, 97, 52, 45, 57, 48, 97, 55, 45, 50, 102, 99, 48, 53, 55, 54, 102, 55, 101, 51, 101]), RecordHeader(key = kafka_correlationId, value = [-88, 65, -58, -117, 69, -123, 65, 4, -86, 20, 51, -68, -42, 80, 71, -2]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24bac37a1f-015a-4a21-a80b-65dcfcc8a078, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 10:28:07.155[0;39m [32m INFO [,af327126775f0cbe,0c2391697a149baa,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 10:28:07.168[0;39m [32m INFO [,af327126775f0cbe,0c2391697a149baa,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24bac37a1f-015a-4a21-a80b-65dcfcc8a078
[2m2024-06-26 10:35:11.123[0;39m [32m INFO [,61b43ebb928e30c5,9320d138797f522e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 682, CreateTime = 1719372887639, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 54, 101, 102, 48, 50, 101, 56, 45, 101, 97, 100, 53, 45, 52, 51, 98, 53, 45, 98, 49, 48, 53, 45, 50, 54, 98, 49, 54, 102, 53, 97, 102, 56, 54, 50]), RecordHeader(key = kafka_correlationId, value = [-26, 106, -22, -36, -21, 49, 79, 72, -127, -94, 73, 40, -41, -92, 49, 57]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a55bea43-3f31-405f-b1a5-8937eda870a5, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:35:11.125[0;39m [32m INFO [,61b43ebb928e30c5,9320d138797f522e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:35:11.134[0;39m [32m INFO [,61b43ebb928e30c5,9320d138797f522e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a55bea43-3f31-405f-b1a5-8937eda870a5
[2m2024-06-26 10:36:05.142[0;39m [32m INFO [,d767f40a8fac4398,134bc36e9f2f05e9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 656, CreateTime = 1719372941658, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 53, 102, 100, 54, 51, 57, 99, 45, 101, 57, 99, 54, 45, 52, 100, 51, 98, 45, 57, 49, 100, 54, 45, 99, 100, 54, 54, 56, 102, 51, 98, 102, 53, 49, 102]), RecordHeader(key = kafka_correlationId, value = [2, -33, 122, -121, 110, 49, 71, 28, -81, -16, 11, 58, 32, -11, -95, 16]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d0a295b1-c515-4fde-b250-d9ba3958b00a, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:36:05.145[0;39m [32m INFO [,d767f40a8fac4398,134bc36e9f2f05e9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:36:05.151[0;39m [32m INFO [,d767f40a8fac4398,134bc36e9f2f05e9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d0a295b1-c515-4fde-b250-d9ba3958b00a
[2m2024-06-26 10:38:14.212[0;39m [32m INFO [,175b3d49e9add8db,3dbd09b7ed9eba00,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 680, CreateTime = 1719373070717, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 101, 99, 102, 98, 54, 57, 51, 45, 54, 102, 98, 100, 45, 52, 49, 102, 56, 45, 57, 102, 98, 50, 45, 99, 56, 98, 102, 56, 53, 53, 100, 97, 56, 49, 51]), RecordHeader(key = kafka_correlationId, value = [-41, -100, 5, -61, -87, -79, 64, -75, -82, 9, -18, -69, -59, -80, 63, 72]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b3d4dc67-5181-4a74-a3fc-1015478c10e3, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:38:14.215[0;39m [32m INFO [,175b3d49e9add8db,3dbd09b7ed9eba00,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:38:14.225[0;39m [32m INFO [,175b3d49e9add8db,3dbd09b7ed9eba00,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b3d4dc67-5181-4a74-a3fc-1015478c10e3
[2m2024-06-26 10:42:24.442[0;39m [32m INFO [,557fb63c523885dc7b4709d68d56bbae,146579738f7d23be,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 681, CreateTime = 1719373320957, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 57, 50, 51, 52, 56, 53, 54, 45, 49, 52, 55, 53, 45, 52, 56, 52, 57, 45, 98, 97, 100, 53, 45, 50, 102, 50, 53, 97, 54, 55, 54, 50, 97, 57, 55]), RecordHeader(key = kafka_correlationId, value = [-104, -126, -68, -100, 9, 94, 67, -106, -105, -108, -99, -109, -25, -53, -108, -30]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2494152d56-de41-476b-8650-b2557f588ecb, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 10:42:24.445[0;39m [32m INFO [,557fb63c523885dc7b4709d68d56bbae,146579738f7d23be,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 10:42:24.454[0;39m [32m INFO [,557fb63c523885dc7b4709d68d56bbae,146579738f7d23be,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2494152d56-de41-476b-8650-b2557f588ecb
[2m2024-06-26 10:49:19.042[0;39m [32m INFO [,de64c420ed08e553,182e09891116d2dd,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 680, CreateTime = 1719373735563, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 50, 50, 50, 48, 49, 51, 100, 45, 99, 102, 50, 49, 45, 52, 50, 99, 53, 45, 97, 52, 53, 52, 45, 102, 50, 55, 52, 57, 54, 51, 57, 98, 52, 100, 101]), RecordHeader(key = kafka_correlationId, value = [113, 83, 81, 101, 88, -19, 73, -125, -85, 126, -2, 124, -112, 46, -50, 85]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24aef67b9c-3b07-4f2b-ada9-71f81271be2e, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:49:19.043[0;39m [32m INFO [,de64c420ed08e553,182e09891116d2dd,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:49:19.050[0;39m [32m INFO [,de64c420ed08e553,182e09891116d2dd,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24aef67b9c-3b07-4f2b-ada9-71f81271be2e
[2m2024-06-26 10:49:29.910[0;39m [32m INFO [,9f536585c9f78cb8,620846eac673c16a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 683, CreateTime = 1719373746427, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 57, 52, 101, 99, 49, 100, 50, 45, 50, 55, 49, 99, 45, 52, 100, 102, 57, 45, 98, 51, 52, 49, 45, 55, 54, 55, 55, 98, 53, 101, 54, 101, 97, 97, 50]), RecordHeader(key = kafka_correlationId, value = [-43, 94, -39, -95, -37, -116, 68, 116, -112, 11, -115, -13, -90, -115, 43, 39]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240191dfde-f17d-4587-9408-30026958410a, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:49:29.913[0;39m [32m INFO [,9f536585c9f78cb8,620846eac673c16a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:49:29.920[0;39m [32m INFO [,9f536585c9f78cb8,620846eac673c16a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240191dfde-f17d-4587-9408-30026958410a
[2m2024-06-26 10:49:41.764[0;39m [32m INFO [,939cefcf57375669,495ca8f0faf17587,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 655, CreateTime = 1719373758287, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 102, 97, 101, 53, 49, 55, 55, 45, 49, 102, 54, 53, 45, 52, 97, 52, 98, 45, 98, 54, 56, 49, 45, 100, 49, 49, 56, 97, 51, 49, 48, 56, 100, 52, 99]), RecordHeader(key = kafka_correlationId, value = [64, -107, 75, 82, 97, 42, 68, -56, -100, 105, -4, 100, -80, -104, -16, -37]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247ea1175a-1e5c-42b1-a789-010ac2567805, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:49:41.767[0;39m [32m INFO [,939cefcf57375669,495ca8f0faf17587,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:49:41.773[0;39m [32m INFO [,939cefcf57375669,495ca8f0faf17587,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247ea1175a-1e5c-42b1-a789-010ac2567805
[2m2024-06-26 10:52:03.444[0;39m [32m INFO [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 688, CreateTime = 1719373899958, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 100, 54, 49, 49, 49, 48, 50, 45, 100, 98, 98, 52, 45, 52, 56, 50, 97, 45, 98, 98, 54, 51, 45, 57, 48, 51, 50, 48, 50, 53, 101, 99, 101, 49, 52]), RecordHeader(key = kafka_correlationId, value = [19, -64, 46, 127, 17, 124, 76, 12, -89, 39, -83, 101, -86, 9, -37, 56]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241b443126-f0d4-431e-aa22-0601ca34e562, value = {"customerNo":"203122267","username":"lv24"})
[2m2024-06-26 10:52:03.445[0;39m [32m INFO [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122267, username=lv24)
[2m2024-06-26 10:52:03.460[0;39m [32mDEBUG [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 10:52:03.577[0;39m [32m INFO [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    4406200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    13851800 nanoseconds spent preparing 1 JDBC statements;
    7755500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 10:52:03.588[0;39m [32m INFO [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122267, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-26 10:52:03.589[0;39m [32m INFO [,85b58416cc3205b449b4250462b01dc0,8e23dc2b792c14a1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122267","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241b443126-f0d4-431e-aa22-0601ca34e562
[2m2024-06-26 10:54:06.695[0;39m [32m INFO [,b7c3485b2ae0b73d,a74a44a6b33b034c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 681, CreateTime = 1719374046687, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 99, 50, 50, 97, 102, 52, 101, 45, 50, 100, 49, 100, 45, 52, 99, 48, 50, 45, 56, 101, 52, 97, 45, 99, 102, 56, 54, 51, 54, 57, 98, 51, 49, 101, 99]), RecordHeader(key = kafka_correlationId, value = [-57, 92, -66, 123, 75, 41, 69, -79, -71, -86, -80, 68, 24, -124, -117, -73]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e7188913-1808-43e3-b5ac-04ce2105c9f2, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:54:06.697[0;39m [32m INFO [,b7c3485b2ae0b73d,a74a44a6b33b034c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:54:06.707[0;39m [32m INFO [,b7c3485b2ae0b73d,a74a44a6b33b034c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e7188913-1808-43e3-b5ac-04ce2105c9f2
[2m2024-06-26 10:54:29.245[0;39m [32m INFO [,2bfa39933f3f62a7a5d39d872a98d4d9,51e2f9bfb7943b00,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 684, CreateTime = 1719374045751, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 97, 51, 97, 56, 51, 48, 56, 45, 52, 56, 101, 98, 45, 52, 55, 48, 50, 45, 98, 52, 99, 51, 45, 51, 49, 55, 98, 53, 97, 53, 57, 53, 99, 56, 102]), RecordHeader(key = kafka_correlationId, value = [-66, -77, -8, -79, -25, -32, 72, -7, -90, 34, -35, -30, 97, -81, 118, 86]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c4e13825-c904-4d1b-8ee6-a0d0498ef659, value = {"customerNo":"203122267","username":"lv24"})
[2m2024-06-26 10:54:29.246[0;39m [32m INFO [,2bfa39933f3f62a7a5d39d872a98d4d9,51e2f9bfb7943b00,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122267, username=lv24)
[2m2024-06-26 10:54:29.264[0;39m [32m INFO [,2bfa39933f3f62a7a5d39d872a98d4d9,51e2f9bfb7943b00,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122267","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c4e13825-c904-4d1b-8ee6-a0d0498ef659
[2m2024-06-26 10:56:15.795[0;39m [32m INFO [,f2f9155b6b6fed87,7872621f0d1377d7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 682, CreateTime = 1719374175661, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 54, 98, 55, 99, 102, 56, 101, 45, 99, 50, 102, 50, 45, 52, 48, 54, 52, 45, 97, 98, 49, 102, 45, 56, 101, 57, 102, 51, 55, 98, 56, 100, 98, 51, 100]), RecordHeader(key = kafka_correlationId, value = [68, -15, 75, 16, -120, -70, 68, -40, -90, -102, 6, -77, 90, 54, 109, 46]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248f84cb30-8bad-404b-8875-881040c1579c, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 10:56:15.797[0;39m [32m INFO [,f2f9155b6b6fed87,7872621f0d1377d7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 10:56:15.805[0;39m [32m INFO [,f2f9155b6b6fed87,7872621f0d1377d7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248f84cb30-8bad-404b-8875-881040c1579c
[2m2024-06-26 11:01:09.314[0;39m [32m INFO [,c87d562255db1b85,2b78702e46d7b2eb,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 638, CreateTime = 1719374715349, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 57, 100, 54, 56, 55, 51, 100, 45, 55, 102, 51, 101, 45, 52, 102, 101, 98, 45, 98, 51, 50, 97, 45, 100, 101, 55, 53, 99, 48, 53, 101, 50, 51, 51, 55]), RecordHeader(key = kafka_correlationId, value = [124, -82, -7, -102, -110, 71, 77, -118, -112, -44, -123, -83, 61, -82, -45, -48]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24aeceb5c6-36c9-4c80-8c5e-203dc2ac8dfe, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 11:01:09.317[0;39m [32m INFO [,c87d562255db1b85,2b78702e46d7b2eb,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 11:01:09.332[0;39m [32m INFO [,c87d562255db1b85,2b78702e46d7b2eb,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24aeceb5c6-36c9-4c80-8c5e-203dc2ac8dfe
[2m2024-06-26 11:01:28.022[0;39m [32m INFO [,c5984aa1db198b1b,09b52d50cfa4041e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 639, CreateTime = 1719374734084, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 97, 48, 52, 99, 99, 54, 54, 45, 97, 98, 97, 51, 45, 52, 48, 57, 54, 45, 56, 100, 49, 97, 45, 49, 49, 49, 53, 50, 52, 102, 99, 50, 48, 100, 52]), RecordHeader(key = kafka_correlationId, value = [-107, 36, -61, 40, -27, -62, 79, 74, -125, -89, 97, -112, 17, 43, -110, 5]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c6e212d6-9a51-43b1-9313-c4b4759cb545, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 11:01:28.024[0;39m [32m INFO [,c5984aa1db198b1b,09b52d50cfa4041e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 11:01:28.034[0;39m [32m INFO [,c5984aa1db198b1b,09b52d50cfa4041e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c6e212d6-9a51-43b1-9313-c4b4759cb545
[2m2024-06-26 11:03:21.365[0;39m [32m INFO [,76c146d7d7f9de72,5b75dfe1be38e457,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 683, CreateTime = 1719374577749, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 100, 55, 51, 56, 48, 57, 55, 45, 100, 97, 97, 50, 45, 52, 56, 57, 98, 45, 57, 57, 99, 57, 45, 48, 56, 51, 57, 53, 97, 54, 100, 97, 54, 100, 98]), RecordHeader(key = kafka_correlationId, value = [37, -56, 100, -126, 86, 120, 68, -18, -73, 104, 111, 66, 109, -94, 65, 50]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a8c48717-d243-41ec-a4dc-0e117b99003f, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 11:03:21.368[0;39m [32m INFO [,76c146d7d7f9de72,5b75dfe1be38e457,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 11:03:21.376[0;39m [32m INFO [,76c146d7d7f9de72,5b75dfe1be38e457,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a8c48717-d243-41ec-a4dc-0e117b99003f
[2m2024-06-26 11:03:26.389[0;39m [32m INFO [,a43a4be9bb19aa2f,aa7c1a3934942ec9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 640, CreateTime = 1719374582896, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 98, 101, 50, 98, 52, 97, 52, 45, 52, 97, 49, 98, 45, 52, 52, 57, 50, 45, 56, 54, 55, 100, 45, 56, 57, 48, 50, 97, 50, 97, 53, 49, 49, 50, 97]), RecordHeader(key = kafka_correlationId, value = [67, -51, -45, 96, 21, 26, 76, -72, -89, -81, 83, -9, 63, 73, 20, 95]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2448df341f-fb07-4ab4-b9dd-a2fa7f597243, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 11:03:26.393[0;39m [32m INFO [,a43a4be9bb19aa2f,aa7c1a3934942ec9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 11:03:26.403[0;39m [32m INFO [,a43a4be9bb19aa2f,aa7c1a3934942ec9,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2448df341f-fb07-4ab4-b9dd-a2fa7f597243
[2m2024-06-26 11:03:30.283[0;39m [32m INFO [,5b947ce67b50d684,ba4f3b42d3d3be07,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 657, CreateTime = 1719374586784, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 56, 98, 102, 101, 101, 48, 102, 45, 48, 55, 98, 52, 45, 52, 48, 56, 101, 45, 56, 101, 50, 99, 45, 53, 54, 51, 53, 56, 99, 101, 100, 57, 51, 56, 102]), RecordHeader(key = kafka_correlationId, value = [-65, 124, -16, -114, 1, -53, 70, 65, -70, 37, -64, -125, 51, -117, -64, 69]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ea8778ca-3814-4a7f-98a9-45db7c219798, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 11:03:30.286[0;39m [32m INFO [,5b947ce67b50d684,ba4f3b42d3d3be07,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 11:03:30.308[0;39m [32m INFO [,5b947ce67b50d684,ba4f3b42d3d3be07,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ea8778ca-3814-4a7f-98a9-45db7c219798
[2m2024-06-26 11:05:37.253[0;39m [32m INFO [,f09e98d33277a16a,2495b13fd04c4bbe,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 689, CreateTime = 1719374713630, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 100, 48, 102, 52, 101, 98, 99, 45, 49, 98, 57, 56, 45, 52, 49, 55, 48, 45, 97, 48, 55, 57, 45, 56, 54, 99, 53, 48, 100, 48, 48, 55, 102, 100, 49]), RecordHeader(key = kafka_correlationId, value = [-43, -128, 34, 97, -72, 29, 77, 12, -76, -45, 125, 88, 98, 47, -21, 21]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ac29951e-f7f6-4a04-b6ac-e365098b76ef, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 11:05:37.255[0;39m [32m INFO [,f09e98d33277a16a,2495b13fd04c4bbe,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 11:05:37.263[0;39m [32m INFO [,f09e98d33277a16a,2495b13fd04c4bbe,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ac29951e-f7f6-4a04-b6ac-e365098b76ef
[2m2024-06-26 11:06:17.450[0;39m [32m INFO [,a80b3f56b8fbf90f,52376468e485c928,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 641, CreateTime = 1719374753954, serialized key size = 53, serialized value size = 49, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 51, 55, 97, 97, 54, 55, 98, 45, 54, 48, 56, 100, 45, 52, 99, 52, 53, 45, 57, 54, 97, 55, 45, 48, 48, 99, 98, 102, 54, 55, 97, 99, 100, 57, 48]), RecordHeader(key = kafka_correlationId, value = [96, -20, -9, 111, -102, -31, 66, -18, -70, -96, 87, 66, 71, 41, -88, -106]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2469da3a13-28e9-4862-96e8-e1fffb451d47, value = {"customerNo":"32435436546456","username":"lv24"})
[2m2024-06-26 11:06:17.454[0;39m [32m INFO [,a80b3f56b8fbf90f,52376468e485c928,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=32435436546456, username=lv24)
[2m2024-06-26 11:06:17.465[0;39m [32m INFO [,a80b3f56b8fbf90f,52376468e485c928,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"32435436546456","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2469da3a13-28e9-4862-96e8-e1fffb451d47
[2m2024-06-26 11:19:03.885[0;39m [32m INFO [,1a709b217d109d9a9e3de0ea1e6bc82c,9606e3e44d174e54,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 692, CreateTime = 1719375520396, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 51, 56, 57, 54, 54, 56, 102, 45, 50, 97, 98, 55, 45, 52, 52, 52, 102, 45, 56, 56, 50, 99, 45, 98, 55, 53, 56, 52, 53, 54, 52, 49, 57, 52, 55]), RecordHeader(key = kafka_correlationId, value = [-109, 1, -123, 68, 35, -13, 77, 59, -75, -36, -112, 55, 66, 73, -112, -25]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244630ddc3-6974-4e80-bbc9-c924f75eec98, value = {"customerNo":"200003970","username":"lv24"})
[2m2024-06-26 11:19:03.886[0;39m [32m INFO [,1a709b217d109d9a9e3de0ea1e6bc82c,9606e3e44d174e54,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200003970, username=lv24)
[2m2024-06-26 11:19:03.900[0;39m [32m INFO [,1a709b217d109d9a9e3de0ea1e6bc82c,9606e3e44d174e54,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200003970","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244630ddc3-6974-4e80-bbc9-c924f75eec98
[2m2024-06-26 11:20:31.409[0;39m [32m INFO [,9622a001fd54f721d9307658c09eb497,eba87a26292f95b6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 656, CreateTime = 1719375607920, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 48, 50, 56, 99, 56, 100, 54, 45, 55, 51, 101, 55, 45, 52, 98, 101, 54, 45, 56, 51, 56, 56, 45, 54, 49, 52, 51, 57, 48, 99, 48, 55, 98, 102, 98]), RecordHeader(key = kafka_correlationId, value = [-110, 102, -48, 35, -51, 126, 69, -66, -91, -109, -25, -103, 30, 30, 97, -99]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ab2ba2a4-9be3-4140-9e77-85a68b076cf9, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 11:20:31.411[0;39m [32m INFO [,9622a001fd54f721d9307658c09eb497,eba87a26292f95b6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 11:20:31.420[0;39m [32m INFO [,9622a001fd54f721d9307658c09eb497,eba87a26292f95b6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ab2ba2a4-9be3-4140-9e77-85a68b076cf9
[2m2024-06-26 11:21:23.746[0;39m [32m INFO [,a8c3db8dcbceebc871a862415edebe27,f9144b246e59ef18,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 685, CreateTime = 1719375660251, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 54, 54, 55, 53, 51, 50, 57, 45, 97, 49, 101, 98, 45, 52, 101, 54, 102, 45, 56, 50, 52, 100, 45, 54, 57, 102, 57, 52, 100, 48, 101, 99, 49, 53, 52]), RecordHeader(key = kafka_correlationId, value = [115, -8, 93, 78, -70, -39, 69, 104, -85, -67, -34, -110, 15, -12, -52, -62]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245b8c3622-9811-4b35-b210-9032cea3b9fb, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 11:21:23.749[0;39m [32m INFO [,a8c3db8dcbceebc871a862415edebe27,f9144b246e59ef18,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 11:21:23.757[0;39m [32m INFO [,a8c3db8dcbceebc871a862415edebe27,f9144b246e59ef18,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245b8c3622-9811-4b35-b210-9032cea3b9fb
[2m2024-06-26 11:22:25.577[0;39m [32m INFO [,e4d7e2055cfd09f4297601d2afacfa76,0be87596b42d566d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 682, CreateTime = 1719375722077, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 99, 97, 56, 51, 98, 51, 98, 45, 101, 56, 51, 57, 45, 52, 52, 53, 102, 45, 97, 50, 54, 51, 45, 56, 53, 55, 48, 52, 97, 55, 51, 97, 57, 99, 54]), RecordHeader(key = kafka_correlationId, value = [-51, -89, 82, -59, -42, -19, 68, -57, -122, 96, -8, 64, 110, 35, 116, -107]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245b516243-1607-4cad-9a73-7eb81df1f036, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 11:22:25.579[0;39m [32m INFO [,e4d7e2055cfd09f4297601d2afacfa76,0be87596b42d566d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 11:22:25.601[0;39m [32m INFO [,e4d7e2055cfd09f4297601d2afacfa76,0be87596b42d566d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245b516243-1607-4cad-9a73-7eb81df1f036
[2m2024-06-26 11:31:29.933[0;39m [32m INFO [,ca67b3f1df2db3077050c28ec79a8526,80d26b8843f8e665,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 676, CreateTime = 1719376266440, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 48, 50, 52, 55, 53, 56, 101, 45, 56, 54, 52, 57, 45, 52, 99, 99, 57, 45, 97, 57, 99, 51, 45, 101, 51, 97, 102, 57, 55, 49, 102, 48, 57, 52, 57]), RecordHeader(key = kafka_correlationId, value = [-101, -75, 75, -45, -92, -79, 74, 39, -92, 21, 32, 116, 111, 29, 11, -127]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245bbe0f61-0579-40e0-a63e-6c553f0b9fc6, value = {"customerNo":"203121927","username":"lv24"})
[2m2024-06-26 11:31:29.938[0;39m [32m INFO [,ca67b3f1df2db3077050c28ec79a8526,80d26b8843f8e665,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121927, username=lv24)
[2m2024-06-26 11:31:29.955[0;39m [32m INFO [,ca67b3f1df2db3077050c28ec79a8526,80d26b8843f8e665,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121927","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245bbe0f61-0579-40e0-a63e-6c553f0b9fc6
[2m2024-06-26 11:31:35.665[0;39m [32m INFO [,4889f6d0d0481daa03772fd86156f844,66822c0ca0ba039d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 686, CreateTime = 1719376272171, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 53, 54, 100, 56, 49, 97, 101, 45, 98, 56, 49, 57, 45, 52, 54, 57, 53, 45, 56, 52, 97, 97, 45, 56, 55, 52, 48, 56, 57, 52, 54, 52, 57, 55, 100]), RecordHeader(key = kafka_correlationId, value = [-42, 4, -43, 105, -78, 0, 68, 75, -86, -66, 88, -15, -19, 56, -54, 98]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247cd32cb6-a0b2-48df-ac2b-f28c3f757786, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 11:31:35.666[0;39m [32m INFO [,4889f6d0d0481daa03772fd86156f844,66822c0ca0ba039d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 11:31:35.673[0;39m [32m INFO [,4889f6d0d0481daa03772fd86156f844,66822c0ca0ba039d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247cd32cb6-a0b2-48df-ac2b-f28c3f757786
[2m2024-06-26 11:32:22.479[0;39m [32m INFO [,12bdd4b12ead8bfa8127d4d3586d85dd,aebb2b3b1dcd1f34,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 683, CreateTime = 1719376318982, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 54, 53, 53, 102, 57, 55, 50, 45, 55, 56, 99, 57, 45, 52, 56, 55, 50, 45, 57, 100, 54, 49, 45, 50, 57, 52, 55, 55, 98, 99, 54, 56, 49, 49, 52]), RecordHeader(key = kafka_correlationId, value = [-65, -73, 2, 42, 51, -16, 66, 4, -95, -26, 49, -41, 2, -83, 90, 39]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241e7f90a7-e593-4be6-8afc-d0e254e930ee, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 11:32:22.484[0;39m [32m INFO [,12bdd4b12ead8bfa8127d4d3586d85dd,aebb2b3b1dcd1f34,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 11:32:22.493[0;39m [32m INFO [,12bdd4b12ead8bfa8127d4d3586d85dd,aebb2b3b1dcd1f34,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241e7f90a7-e593-4be6-8afc-d0e254e930ee
[2m2024-06-26 11:32:41.498[0;39m [32m INFO [,abdf01dea424199b8d95f3511795acb8,dffd620e1249b84d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 654, CreateTime = 1719376337994, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 101, 57, 101, 53, 52, 51, 98, 45, 100, 49, 102, 97, 45, 52, 100, 54, 50, 45, 97, 49, 53, 100, 45, 50, 49, 49, 51, 51, 53, 100, 97, 57, 49, 100, 55]), RecordHeader(key = kafka_correlationId, value = [-53, -66, 107, -106, -116, 49, 73, 125, -120, 11, -72, -73, -22, -86, -10, -30]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24393b4d26-7b2b-4863-9275-b91c328dccf7, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 11:32:41.501[0;39m [32m INFO [,abdf01dea424199b8d95f3511795acb8,dffd620e1249b84d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 11:32:41.510[0;39m [32m INFO [,abdf01dea424199b8d95f3511795acb8,dffd620e1249b84d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24393b4d26-7b2b-4863-9275-b91c328dccf7
[2m2024-06-26 11:32:43.474[0;39m [32m INFO [,6379c7f5b5ee70c4b0a240ceecfcbc08,e3cc6e6d980c9986,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 687, CreateTime = 1719376339979, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 102, 53, 48, 100, 52, 55, 55, 45, 52, 98, 100, 97, 45, 52, 101, 57, 100, 45, 56, 53, 48, 100, 45, 48, 100, 54, 51, 55, 56, 55, 99, 101, 51, 57, 49]), RecordHeader(key = kafka_correlationId, value = [91, 121, -14, -45, 49, 81, 75, 49, -116, -57, 109, -96, 34, -113, -25, 66]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24db59cdd4-0eed-4a7c-92f9-5d0000b31a1d, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 11:32:43.476[0;39m [32m INFO [,6379c7f5b5ee70c4b0a240ceecfcbc08,e3cc6e6d980c9986,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 11:32:43.482[0;39m [32m INFO [,6379c7f5b5ee70c4b0a240ceecfcbc08,e3cc6e6d980c9986,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24db59cdd4-0eed-4a7c-92f9-5d0000b31a1d
[2m2024-06-26 12:04:15.617[0;39m [32m INFO [,2c31408bba114ec7,b07b3832afb926b0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 677, CreateTime = 1719378232114, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 99, 98, 100, 52, 101, 52, 101, 45, 52, 49, 98, 99, 45, 52, 49, 102, 49, 45, 98, 57, 102, 50, 45, 54, 102, 101, 101, 54, 57, 100, 97, 56, 48, 100, 101]), RecordHeader(key = kafka_correlationId, value = [91, 74, -73, -18, 25, 54, 71, 97, -103, 77, -38, 77, -22, -1, -72, 39]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET50e73b69-8668-48fe-a44d-4d42b3c54f5e, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 12:04:15.620[0;39m [32m INFO [,2c31408bba114ec7,b07b3832afb926b0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 12:04:15.627[0;39m [32m INFO [,2c31408bba114ec7,b07b3832afb926b0,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET50e73b69-8668-48fe-a44d-4d42b3c54f5e
[2m2024-06-26 13:28:12.191[0;39m [32m INFO [,a70f7f8cc74a6f46,8a04b9dd2f4a2fc3,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 657, CreateTime = 1719383538393, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 57, 48, 101, 54, 101, 100, 56, 45, 57, 52, 100, 98, 45, 52, 56, 102, 54, 45, 57, 97, 49, 53, 45, 52, 55, 98, 56, 50, 51, 102, 49, 57, 98, 57, 52]), RecordHeader(key = kafka_correlationId, value = [-86, -79, 49, 87, 92, 51, 72, -88, -115, 101, -122, -77, -7, -51, 57, 26]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c5266a4b-bdc7-499b-8740-36582169cf71, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 13:28:12.192[0;39m [32m INFO [,a70f7f8cc74a6f46,8a04b9dd2f4a2fc3,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 13:28:12.198[0;39m [32m INFO [,a70f7f8cc74a6f46,8a04b9dd2f4a2fc3,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c5266a4b-bdc7-499b-8740-36582169cf71
[2m2024-06-26 13:29:22.524[0;39m [32m INFO [,fa1a9a0c37025486,aa0bf62d383544a5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 690, CreateTime = 1719383339006, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 54, 49, 51, 48, 52, 98, 53, 45, 56, 54, 49, 97, 45, 52, 54, 98, 51, 45, 97, 49, 99, 99, 45, 53, 99, 52, 48, 57, 51, 54, 56, 51, 100, 102, 101]), RecordHeader(key = kafka_correlationId, value = [126, -1, 97, 76, -97, 44, 72, 35, -74, 106, -121, -80, -77, -100, -93, 117]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd580b616d-2a56-411c-a9d6-0f297768ba0f, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 13:29:22.528[0;39m [32m INFO [,fa1a9a0c37025486,aa0bf62d383544a5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 13:29:22.538[0;39m [32m INFO [,fa1a9a0c37025486,aa0bf62d383544a5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd580b616d-2a56-411c-a9d6-0f297768ba0f
[2m2024-06-26 13:47:10.388[0;39m [32m INFO [,889813c095ce5accb695d7e9d6f295f6,89a25552c3ceb45b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 691, CreateTime = 1719384406852, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 50, 57, 101, 50, 99, 49, 99, 45, 50, 97, 48, 56, 45, 52, 57, 97, 55, 45, 57, 102, 57, 55, 45, 57, 57, 55, 55, 56, 54, 57, 97, 57, 100, 99, 98]), RecordHeader(key = kafka_correlationId, value = [-55, -99, -15, 18, 48, -106, 65, -58, -77, 73, -113, 44, 74, 87, 5, -112]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245c5fdbb7-248f-4c42-ae4c-056a02eca6ba, value = {"customerNo":"203121927","username":"lv24"})
[2m2024-06-26 13:47:10.389[0;39m [32m INFO [,889813c095ce5accb695d7e9d6f295f6,89a25552c3ceb45b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121927, username=lv24)
[2m2024-06-26 13:47:10.395[0;39m [32m INFO [,889813c095ce5accb695d7e9d6f295f6,89a25552c3ceb45b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121927","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245c5fdbb7-248f-4c42-ae4c-056a02eca6ba
[2m2024-06-26 13:47:59.825[0;39m [32m INFO [,bdccb2a976c1a70a,6c85d5938719da5f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 655, CreateTime = 1719384726040, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 51, 53, 57, 54, 50, 53, 97, 45, 98, 56, 98, 52, 45, 52, 49, 54, 100, 45, 56, 97, 51, 57, 45, 51, 53, 48, 49, 49, 100, 50, 56, 56, 50, 102, 52]), RecordHeader(key = kafka_correlationId, value = [-54, -53, 106, -118, -126, -58, 64, 75, -71, 108, -28, -10, -16, 115, 67, -5]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv246ef106cc-a848-4338-848c-1b2285c496c7, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 13:47:59.828[0;39m [32m INFO [,bdccb2a976c1a70a,6c85d5938719da5f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 13:47:59.838[0;39m [32m INFO [,bdccb2a976c1a70a,6c85d5938719da5f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv246ef106cc-a848-4338-848c-1b2285c496c7
[2m2024-06-26 13:54:40.487[0;39m [32m INFO [,957df023e9792a9a,45f20b5c8225fb1c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 693, CreateTime = 1719385126693, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 51, 98, 48, 53, 54, 49, 49, 45, 55, 50, 53, 98, 45, 52, 51, 100, 50, 45, 57, 98, 101, 53, 45, 57, 52, 99, 100, 53, 99, 57, 51, 98, 49, 55, 51]), RecordHeader(key = kafka_correlationId, value = [-73, -111, -84, 51, -111, 52, 65, -117, -118, -42, -23, 19, -3, -20, -75, -27]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2480cf3b85-170e-4645-85a3-faf86cd6b688, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 13:54:40.490[0;39m [32m INFO [,957df023e9792a9a,45f20b5c8225fb1c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 13:54:40.506[0;39m [32m INFO [,957df023e9792a9a,45f20b5c8225fb1c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2480cf3b85-170e-4645-85a3-faf86cd6b688
[2m2024-06-26 13:56:51.302[0;39m [32m INFO [,0b1052e2c47cf66c,99ed904d5d273906,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 684, CreateTime = 1719385257520, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 98, 48, 57, 102, 100, 48, 54, 45, 97, 54, 55, 52, 45, 52, 102, 50, 57, 45, 56, 97, 98, 49, 45, 55, 56, 98, 101, 102, 50, 98, 51, 57, 98, 50, 99]), RecordHeader(key = kafka_correlationId, value = [49, 38, -35, -20, 95, -95, 64, 44, -111, 103, 6, -43, 91, -99, -46, -102]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2491df14ab-8046-463e-86a8-70acede8579c, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 13:56:51.303[0;39m [32m INFO [,0b1052e2c47cf66c,99ed904d5d273906,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 13:56:51.309[0;39m [32m INFO [,0b1052e2c47cf66c,99ed904d5d273906,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2491df14ab-8046-463e-86a8-70acede8579c
[2m2024-06-26 13:57:22.450[0;39m [32m INFO [,82f664d38c2b3c1ecbc9ad90393f53d0,dcefb25bcb464a02,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 678, CreateTime = 1719385018913, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 51, 52, 97, 55, 53, 57, 50, 45, 99, 49, 48, 97, 45, 52, 56, 100, 56, 45, 57, 102, 49, 98, 45, 49, 55, 97, 57, 49, 53, 49, 100, 98, 49, 97, 52]), RecordHeader(key = kafka_correlationId, value = [75, -47, -122, -75, -5, 96, 71, 72, -72, -29, -53, 94, -91, 85, 13, 0]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248bc80a68-004e-42e8-9f46-6cfdde14e9a3, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-26 13:57:22.455[0;39m [32m INFO [,82f664d38c2b3c1ecbc9ad90393f53d0,dcefb25bcb464a02,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-26 13:57:22.465[0;39m [32m INFO [,82f664d38c2b3c1ecbc9ad90393f53d0,dcefb25bcb464a02,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248bc80a68-004e-42e8-9f46-6cfdde14e9a3
[2m2024-06-26 13:59:27.943[0;39m [32m INFO [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 694, CreateTime = 1719385144399, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 53, 56, 49, 48, 99, 51, 102, 45, 53, 51, 48, 50, 45, 52, 99, 52, 56, 45, 57, 98, 98, 48, 45, 97, 98, 53, 100, 52, 50, 100, 101, 100, 97, 102, 55]), RecordHeader(key = kafka_correlationId, value = [84, 82, 126, -48, 83, 120, 70, 9, -128, 0, 19, -22, 113, -105, 55, -91]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv241ebd5d08-a415-4173-a1e5-df22c741cb42, value = {"customerNo":"203122078","username":"lv24"})
[2m2024-06-26 13:59:27.946[0;39m [32m INFO [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122078, username=lv24)
[2m2024-06-26 13:59:27.954[0;39m [32mDEBUG [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 13:59:28.006[0;39m [32m INFO [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    38664500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    39225800 nanoseconds spent preparing 1 JDBC statements;
    7017200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 13:59:28.014[0;39m [32m INFO [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122078, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-26 13:59:28.016[0;39m [32m INFO [,bb2ed78667f48bb8fea240eac71b1aeb,994cd21ecc313800,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122078","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv241ebd5d08-a415-4173-a1e5-df22c741cb42
[2m2024-06-26 14:05:47.050[0;39m [32m INFO [,35617181442e4e4a5ef1e5101b70a001,5d184697c7b088a6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 658, CreateTime = 1719385523504, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 54, 102, 55, 99, 48, 99, 50, 45, 98, 102, 51, 51, 45, 52, 48, 102, 49, 45, 56, 52, 97, 55, 45, 52, 99, 48, 56, 101, 51, 57, 53, 50, 49, 101, 97]), RecordHeader(key = kafka_correlationId, value = [-35, -4, -126, 1, 114, -124, 72, -118, -112, -90, -51, -58, -119, -15, -118, 21]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24913104e7-3120-4dbb-bb37-871504229241, value = {"customerNo":"203122078","username":"lv24"})
[2m2024-06-26 14:05:47.053[0;39m [32m INFO [,35617181442e4e4a5ef1e5101b70a001,5d184697c7b088a6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122078, username=lv24)
[2m2024-06-26 14:05:47.063[0;39m [32m INFO [,35617181442e4e4a5ef1e5101b70a001,5d184697c7b088a6,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122078","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24913104e7-3120-4dbb-bb37-871504229241
[2m2024-06-26 14:12:54.477[0;39m [32m INFO [,d68dafaa616da34d,2f58a8e8abbd6577,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 658, CreateTime = 1719386220712, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 52, 101, 48, 98, 98, 97, 101, 45, 49, 101, 100, 52, 45, 52, 51, 48, 101, 45, 97, 102, 48, 57, 45, 51, 101, 51, 52, 54, 54, 50, 52, 51, 48, 50, 49]), RecordHeader(key = kafka_correlationId, value = [12, 47, -87, 40, 47, 64, 75, 74, -121, -17, 94, 20, 90, 104, -7, -16]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e3295abf-47ae-40ba-91f4-19f9a9d3bf16, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 14:12:54.478[0;39m [32m INFO [,d68dafaa616da34d,2f58a8e8abbd6577,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 14:12:54.484[0;39m [32m INFO [,d68dafaa616da34d,2f58a8e8abbd6577,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e3295abf-47ae-40ba-91f4-19f9a9d3bf16
[2m2024-06-26 14:28:00.983[0;39m [32m INFO [,5e3e498f37138350d118df84cc282220,3e443b54b423e593,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 685, CreateTime = 1719386857431, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 54, 98, 53, 102, 102, 56, 49, 45, 55, 99, 54, 55, 45, 52, 52, 52, 54, 45, 97, 48, 97, 97, 45, 102, 102, 53, 55, 53, 54, 102, 49, 99, 97, 97, 57]), RecordHeader(key = kafka_correlationId, value = [-22, -70, 80, -11, 79, 109, 70, 118, -113, 125, -44, -42, -30, -92, -100, 62]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247e2bf437-e3b5-4ebb-8951-c874a45b9ce4, value = {"customerNo":"203121927","username":"lv24"})
[2m2024-06-26 14:28:00.986[0;39m [32m INFO [,5e3e498f37138350d118df84cc282220,3e443b54b423e593,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121927, username=lv24)
[2m2024-06-26 14:28:00.996[0;39m [32m INFO [,5e3e498f37138350d118df84cc282220,3e443b54b423e593,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121927","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247e2bf437-e3b5-4ebb-8951-c874a45b9ce4
[2m2024-06-26 14:28:53.657[0;39m [32m INFO [,90b5300281b5e5ad7ef4974a1ac39baa,38cdec0a6af20b3b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 684, CreateTime = 1719386910101, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 100, 57, 102, 51, 49, 101, 52, 45, 101, 49, 53, 49, 45, 52, 55, 102, 99, 45, 56, 56, 97, 57, 45, 102, 54, 50, 48, 54, 52, 50, 54, 98, 48, 50, 100]), RecordHeader(key = kafka_correlationId, value = [-97, -90, -123, -41, -119, -49, 68, 75, -73, 0, 96, -62, -120, -119, -85, 48]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv240feccf75-86d4-47a0-99e4-137952056044, value = {"customerNo":"203122078","username":"lv24"})
[2m2024-06-26 14:28:53.658[0;39m [32m INFO [,90b5300281b5e5ad7ef4974a1ac39baa,38cdec0a6af20b3b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122078, username=lv24)
[2m2024-06-26 14:28:53.675[0;39m [32m INFO [,90b5300281b5e5ad7ef4974a1ac39baa,38cdec0a6af20b3b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122078","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv240feccf75-86d4-47a0-99e4-137952056044
[2m2024-06-26 14:28:53.939[0;39m [32m INFO [,aa74ce6b155515f6eb5b773d25537009,caeeb5a9d5a4c2de,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 656, CreateTime = 1719386910395, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 56, 53, 99, 55, 50, 51, 102, 45, 49, 102, 56, 53, 45, 52, 52, 51, 48, 45, 57, 57, 56, 100, 45, 99, 56, 55, 102, 56, 99, 100, 102, 98, 99, 53, 98]), RecordHeader(key = kafka_correlationId, value = [-5, -72, 77, -40, 99, 116, 73, -20, -89, -83, -11, -44, 127, -72, -32, -125]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2487e718ab-4005-4e06-815a-70f034c812d4, value = {"customerNo":"203122078","username":"lv24"})
[2m2024-06-26 14:28:53.944[0;39m [32m INFO [,aa74ce6b155515f6eb5b773d25537009,caeeb5a9d5a4c2de,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122078, username=lv24)
[2m2024-06-26 14:28:53.955[0;39m [32m INFO [,aa74ce6b155515f6eb5b773d25537009,caeeb5a9d5a4c2de,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122078","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2487e718ab-4005-4e06-815a-70f034c812d4
[2m2024-06-26 14:39:08.150[0;39m [32m INFO [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 642, CreateTime = 1719387524611, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 52, 54, 55, 102, 100, 101, 49, 45, 48, 56, 57, 50, 45, 52, 54, 97, 50, 45, 97, 99, 101, 99, 45, 57, 53, 98, 98, 53, 49, 52, 50, 101, 100, 57, 102]), RecordHeader(key = kafka_correlationId, value = [-66, -25, 56, 118, 43, 52, 70, 74, -112, 77, 44, -55, 54, 112, 2, -111]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243a90fde2-1256-4d40-9f2a-67124d342a80, value = {"customerNo":"203122268","username":"lv24"})
[2m2024-06-26 14:39:08.152[0;39m [32m INFO [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122268, username=lv24)
[2m2024-06-26 14:39:08.159[0;39m [32mDEBUG [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 14:39:08.183[0;39m [32m INFO [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    17347400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    17487800 nanoseconds spent preparing 1 JDBC statements;
    5962500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 14:39:08.190[0;39m [32m INFO [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=203122268, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-26 14:39:08.191[0;39m [32m INFO [,f8be4767ba511c16a531f57b44edde62,801c3f79356db2f8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122268","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243a90fde2-1256-4d40-9f2a-67124d342a80
[2m2024-06-26 14:41:19.714[0;39m [32m INFO [,c77279c9e18630c6fc2924a3a7ed8baa,019256adba62deea,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 685, CreateTime = 1719387656180, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 48, 57, 51, 49, 98, 50, 56, 45, 98, 48, 100, 54, 45, 52, 49, 55, 53, 45, 97, 50, 51, 99, 45, 57, 49, 101, 51, 98, 51, 55, 50, 51, 98, 99, 101]), RecordHeader(key = kafka_correlationId, value = [99, -74, 48, 31, -74, -102, 65, 112, -101, 16, -122, 77, 27, 88, 13, -49]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244a23e118-17bf-47cd-8b22-39933f99b336, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-26 14:41:19.716[0;39m [32m INFO [,c77279c9e18630c6fc2924a3a7ed8baa,019256adba62deea,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-26 14:41:19.723[0;39m [32m INFO [,c77279c9e18630c6fc2924a3a7ed8baa,019256adba62deea,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244a23e118-17bf-47cd-8b22-39933f99b336
[2m2024-06-26 14:42:12.670[0;39m [32m INFO [,fea4b00cac5717fa577e757af33c3f8e,961f4e52ac2b627e,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 695, CreateTime = 1719387709133, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 48, 54, 54, 56, 53, 49, 97, 45, 54, 50, 97, 100, 45, 52, 98, 49, 102, 45, 97, 51, 49, 51, 45, 53, 55, 48, 51, 51, 101, 97, 56, 97, 54, 52, 57]), RecordHeader(key = kafka_correlationId, value = [-13, -98, 50, -25, 38, -98, 75, -17, -122, 119, 13, -28, -120, 31, -69, 78]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv247e270e77-e63b-4327-b6c1-4580b88b26f8, value = {"customerNo":"203121840","username":"lv24"})
[2m2024-06-26 14:42:12.674[0;39m [32m INFO [,fea4b00cac5717fa577e757af33c3f8e,961f4e52ac2b627e,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121840, username=lv24)
[2m2024-06-26 14:42:12.680[0;39m [32m INFO [,fea4b00cac5717fa577e757af33c3f8e,961f4e52ac2b627e,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121840","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv247e270e77-e63b-4327-b6c1-4580b88b26f8
[2m2024-06-26 14:44:59.570[0;39m [32m INFO [,f03fadc425bc40be22095cebc4dc7663,bc147585b69a499c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 696, CreateTime = 1719387876023, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 97, 50, 49, 54, 51, 97, 51, 45, 48, 54, 54, 50, 45, 52, 102, 52, 56, 45, 97, 53, 54, 54, 45, 52, 54, 57, 51, 55, 97, 53, 57, 55, 51, 51, 56]), RecordHeader(key = kafka_correlationId, value = [80, -67, 30, -47, -65, 42, 71, -26, -78, 44, 9, 10, 18, 69, 116, 126]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv246d3b096e-648b-4040-8ec8-c62c8f79ae7e, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 14:44:59.571[0;39m [32m INFO [,f03fadc425bc40be22095cebc4dc7663,bc147585b69a499c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 14:44:59.581[0;39m [32m INFO [,f03fadc425bc40be22095cebc4dc7663,bc147585b69a499c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv246d3b096e-648b-4040-8ec8-c62c8f79ae7e
[2m2024-06-26 14:48:14.477[0;39m [32m INFO [,eab5a827697f43918ef9978df8ea08b1,d58b1e80f6d21a0c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 686, CreateTime = 1719388070939, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 56, 101, 99, 54, 52, 97, 50, 45, 54, 101, 54, 48, 45, 52, 102, 49, 102, 45, 97, 48, 54, 53, 45, 48, 53, 56, 102, 49, 102, 51, 51, 99, 50, 51, 98]), RecordHeader(key = kafka_correlationId, value = [26, -22, 15, -112, -57, -8, 77, -61, -113, -20, 97, -54, -105, -63, 98, 10]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249e051541-ba8b-4af3-8786-684e67c90924, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 14:48:14.481[0;39m [32m INFO [,eab5a827697f43918ef9978df8ea08b1,d58b1e80f6d21a0c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 14:48:14.488[0;39m [32m INFO [,eab5a827697f43918ef9978df8ea08b1,d58b1e80f6d21a0c,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249e051541-ba8b-4af3-8786-684e67c90924
[2m2024-06-26 15:08:41.859[0;39m [32m INFO [,15183082e6da29c3632ea0f99f22a472,e1ed157e523289eb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 659, CreateTime = 1719389298296, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 56, 98, 99, 52, 102, 101, 51, 45, 99, 101, 102, 97, 45, 52, 101, 51, 48, 45, 98, 54, 54, 48, 45, 52, 98, 99, 50, 53, 97, 100, 49, 99, 53, 48, 49]), RecordHeader(key = kafka_correlationId, value = [-34, -71, -90, 29, 107, -79, 79, -54, -107, -110, 124, -38, 19, -52, -5, -19]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24561ec8f3-4f00-4c30-b470-667ca45b1087, value = {"customerNo":"203121927","username":"lv24"})
[2m2024-06-26 15:08:41.862[0;39m [32m INFO [,15183082e6da29c3632ea0f99f22a472,e1ed157e523289eb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203121927, username=lv24)
[2m2024-06-26 15:08:41.879[0;39m [32m INFO [,15183082e6da29c3632ea0f99f22a472,e1ed157e523289eb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203121927","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24561ec8f3-4f00-4c30-b470-667ca45b1087
[2m2024-06-26 15:11:47.851[0;39m [32m INFO [,3bbeea70148474e0b524cdb641909de6,7e4a0de6d4ec6ea1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 697, CreateTime = 1719389484280, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 48, 56, 57, 52, 57, 53, 49, 45, 51, 54, 98, 48, 45, 52, 97, 56, 53, 45, 98, 101, 51, 99, 45, 50, 97, 52, 48, 98, 50, 48, 48, 48, 98, 48, 99]), RecordHeader(key = kafka_correlationId, value = [43, -20, -26, 10, 8, 63, 70, 50, -86, -20, -76, -108, -45, 97, -102, -32]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b70932bd-ebf1-4129-a68f-c8e4d53184a1, value = {"customerNo":"200852389","username":"lv24"})
[2m2024-06-26 15:11:47.855[0;39m [32m INFO [,3bbeea70148474e0b524cdb641909de6,7e4a0de6d4ec6ea1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=200852389, username=lv24)
[2m2024-06-26 15:11:47.862[0;39m [32m INFO [,3bbeea70148474e0b524cdb641909de6,7e4a0de6d4ec6ea1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"200852389","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b70932bd-ebf1-4129-a68f-c8e4d53184a1
[2m2024-06-26 15:14:49.137[0;39m [32m INFO [,8b1a81392cbf42f4,edaa5c6e44668ac1,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 643, CreateTime = 1719389689647, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 53, 97, 101, 57, 102, 51, 56, 45, 100, 99, 50, 54, 45, 52, 48, 99, 53, 45, 56, 48, 98, 55, 45, 54, 99, 57, 57, 53, 54, 57, 48, 52, 48, 57, 55]), RecordHeader(key = kafka_correlationId, value = [-112, -97, -62, -78, 58, 81, 79, 37, -128, -80, -77, 16, -16, 4, -78, -103]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2457db78a1-dbd2-4767-b6e7-1949c628a9ab, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 15:14:49.140[0;39m [32m INFO [,8b1a81392cbf42f4,edaa5c6e44668ac1,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 15:14:49.149[0;39m [32m INFO [,8b1a81392cbf42f4,edaa5c6e44668ac1,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2457db78a1-dbd2-4767-b6e7-1949c628a9ab
[2m2024-06-26 15:16:19.986[0;39m [32m INFO [,cbfb4c8e79f6c142e7ad8beeb3493d61,f6aee7b738fc772f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 692, CreateTime = 1719389756425, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 50, 98, 51, 99, 100, 53, 100, 45, 50, 97, 98, 50, 45, 52, 55, 52, 49, 45, 56, 98, 56, 98, 45, 97, 99, 54, 49, 97, 57, 97, 102, 97, 49, 57, 54]), RecordHeader(key = kafka_correlationId, value = [76, -27, 112, 49, -106, 76, 70, 31, -66, 83, -50, -106, -96, -6, 104, -47]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2462e55383-8d94-46f7-8487-900d8ed43652, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 15:16:19.989[0;39m [32m INFO [,cbfb4c8e79f6c142e7ad8beeb3493d61,f6aee7b738fc772f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 15:16:19.998[0;39m [32m INFO [,cbfb4c8e79f6c142e7ad8beeb3493d61,f6aee7b738fc772f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2462e55383-8d94-46f7-8487-900d8ed43652
[2m2024-06-26 15:31:33.952[0;39m [32m INFO [,b192b515112e0d651cf2913d0f5cbf0c,e09700da9d8f5db0,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 644, CreateTime = 1719390670388, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 55, 56, 101, 100, 53, 99, 102, 45, 57, 97, 101, 51, 45, 52, 51, 49, 100, 45, 57, 51, 51, 51, 45, 57, 57, 98, 99, 49, 53, 49, 52, 49, 99, 54, 57]), RecordHeader(key = kafka_correlationId, value = [-13, 25, -42, 80, -12, -22, 76, 120, -111, -21, -100, 59, 35, -97, 121, 63]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ea9a4853-59e8-4797-a002-3c4e336e072f, value = {"customerNo":"202558230","username":"lv24"})
[2m2024-06-26 15:31:33.958[0;39m [32m INFO [,b192b515112e0d651cf2913d0f5cbf0c,e09700da9d8f5db0,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=202558230, username=lv24)
[2m2024-06-26 15:31:33.966[0;39m [32m INFO [,b192b515112e0d651cf2913d0f5cbf0c,e09700da9d8f5db0,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"202558230","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ea9a4853-59e8-4797-a002-3c4e336e072f
[2m2024-06-26 15:34:34.989[0;39m [32m INFO [,4560ee3467ffd171,60cfbada3072fd8b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 659, CreateTime = 1719390851423, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 99, 53, 50, 97, 56, 98, 52, 45, 57, 97, 97, 50, 45, 52, 51, 53, 51, 45, 97, 99, 54, 101, 45, 49, 98, 57, 54, 56, 54, 53, 51, 55, 55, 101, 101]), RecordHeader(key = kafka_correlationId, value = [-50, 87, -30, 34, -8, -65, 65, -100, -93, 15, -25, -26, -123, 17, 124, -56]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdd5a9666f-2177-4f48-8546-93e9a349879f, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 15:34:34.992[0;39m [32m INFO [,4560ee3467ffd171,60cfbada3072fd8b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 15:34:34.998[0;39m [32m INFO [,4560ee3467ffd171,60cfbada3072fd8b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdd5a9666f-2177-4f48-8546-93e9a349879f
[2m2024-06-26 15:43:22.742[0;39m [32m INFO [,dfdc2b5aa33693c10bbfc0436fde3e33,084cd82086c0b81a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 688, CreateTime = 1719391379170, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 54, 102, 49, 50, 56, 48, 56, 45, 51, 56, 51, 51, 45, 52, 54, 50, 97, 45, 97, 97, 97, 49, 45, 56, 56, 100, 98, 100, 102, 98, 50, 54, 48, 55, 49]), RecordHeader(key = kafka_correlationId, value = [19, 36, -24, 32, -106, 119, 73, -17, -74, 68, -64, 86, -67, 121, 97, 2]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24bf5de5a1-1ba1-4a6a-a8bb-eec0112774b9, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 15:43:22.745[0;39m [32m INFO [,dfdc2b5aa33693c10bbfc0436fde3e33,084cd82086c0b81a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 15:43:22.766[0;39m [32m INFO [,dfdc2b5aa33693c10bbfc0436fde3e33,084cd82086c0b81a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24bf5de5a1-1ba1-4a6a-a8bb-eec0112774b9
[2m2024-06-26 15:43:27.477[0;39m [32m INFO [,2b16c688fa7cb170bdb46816b14efdf5,8297f9c4a1f1dd5b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 687, CreateTime = 1719391383916, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 102, 99, 99, 56, 55, 57, 56, 45, 52, 101, 55, 55, 45, 52, 100, 54, 48, 45, 56, 102, 97, 52, 45, 54, 52, 48, 55, 54, 99, 99, 53, 54, 57, 57, 54]), RecordHeader(key = kafka_correlationId, value = [36, -39, -65, -60, -54, -10, 64, 84, -111, -6, -119, 8, -42, 48, 76, -85]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d572bd43-2d4e-48a1-b206-0af4d74ea8f5, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 15:43:27.480[0;39m [32m INFO [,2b16c688fa7cb170bdb46816b14efdf5,8297f9c4a1f1dd5b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 15:43:27.493[0;39m [32m INFO [,2b16c688fa7cb170bdb46816b14efdf5,8297f9c4a1f1dd5b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d572bd43-2d4e-48a1-b206-0af4d74ea8f5
[2m2024-06-26 15:45:01.962[0;39m [32m INFO [,82c2715ff8ff1757c4def18d696420c3,7a61309c3893da56,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 698, CreateTime = 1719391478400, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 57, 49, 52, 55, 102, 57, 57, 45, 50, 50, 51, 52, 45, 52, 56, 100, 51, 45, 56, 54, 49, 49, 45, 102, 98, 54, 100, 100, 101, 98, 97, 54, 49, 53, 99]), RecordHeader(key = kafka_correlationId, value = [-51, 42, 57, 94, 49, -113, 66, 80, -74, 80, -73, 69, -66, 37, -88, -127]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24aca34fd1-4a93-439c-9d59-2365e1c4d2a0, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 15:45:01.965[0;39m [32m INFO [,82c2715ff8ff1757c4def18d696420c3,7a61309c3893da56,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 15:45:01.974[0;39m [32m INFO [,82c2715ff8ff1757c4def18d696420c3,7a61309c3893da56,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24aca34fd1-4a93-439c-9d59-2365e1c4d2a0
[2m2024-06-26 15:47:04.904[0;39m [32m INFO [,f96b306cc4be939e51e925a6104df4df,e83064fd16154b53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 657, CreateTime = 1719391601340, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 57, 101, 50, 50, 51, 99, 97, 45, 57, 55, 50, 57, 45, 52, 52, 57, 49, 45, 97, 52, 97, 53, 45, 55, 54, 102, 54, 50, 49, 57, 55, 100, 56, 50, 54]), RecordHeader(key = kafka_correlationId, value = [119, 20, 38, 89, -99, -13, 77, 2, -113, -83, 17, -24, 20, 121, 52, -122]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f2a68d87-06f0-4472-b5fd-baff8913e8d8, value = {"customerNo":"203122215","username":"lv24"})
[2m2024-06-26 15:47:04.908[0;39m [32m INFO [,f96b306cc4be939e51e925a6104df4df,e83064fd16154b53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122215, username=lv24)
[2m2024-06-26 15:47:04.914[0;39m [32m INFO [,f96b306cc4be939e51e925a6104df4df,e83064fd16154b53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122215","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f2a68d87-06f0-4472-b5fd-baff8913e8d8
[2m2024-06-26 15:54:45.143[0;39m [32m INFO [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 688, CreateTime = 1719392061585, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 99, 48, 55, 97, 55, 51, 56, 45, 54, 56, 54, 52, 45, 52, 101, 51, 54, 45, 56, 50, 50, 51, 45, 102, 100, 50, 55, 98, 52, 101, 51, 49, 56, 97, 102]), RecordHeader(key = kafka_correlationId, value = [-57, 19, 83, -25, -77, 126, 65, 72, -75, -38, -39, -107, -3, 57, 20, 76]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv245789ed3a-20bd-482d-b07d-f14fcf1c940b, value = {"customerNo":"105355136","username":"lv24"})
[2m2024-06-26 15:54:45.146[0;39m [32m INFO [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=105355136, username=lv24)
[2m2024-06-26 15:54:45.152[0;39m [32mDEBUG [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 15:54:45.188[0;39m [32m INFO [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    22574600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    22906700 nanoseconds spent preparing 1 JDBC statements;
    9373200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 15:54:45.200[0;39m [32m INFO [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=lv24, appId=689898989, customerNo=105355136, whiteListIp=null, branchCode=null, secretKey=52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY=)
[2m2024-06-26 15:54:45.202[0;39m [32m INFO [,2526827e04e7c18f441427be2cc6d16c,841d3560ae06e0fb,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"105355136","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv245789ed3a-20bd-482d-b07d-f14fcf1c940b
[2m2024-06-26 16:02:36.850[0;39m [32m INFO [,a37f6fbf1526656b1d8f6c0a4d350d0a,75c2d9a4b9c3bc7b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 679, CreateTime = 1719392533281, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 50, 101, 100, 97, 99, 49, 49, 45, 99, 53, 50, 51, 45, 52, 102, 52, 54, 45, 98, 49, 101, 51, 45, 51, 99, 97, 101, 101, 101, 57, 99, 100, 57, 49, 51]), RecordHeader(key = kafka_correlationId, value = [23, -106, 25, 126, -88, 120, 65, -23, -70, 4, -68, -89, -81, -60, -64, 126]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249d905471-6493-46e8-90da-af6c6bbf183b, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:02:36.855[0;39m [32m INFO [,a37f6fbf1526656b1d8f6c0a4d350d0a,75c2d9a4b9c3bc7b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:02:36.860[0;39m [32m INFO [,a37f6fbf1526656b1d8f6c0a4d350d0a,75c2d9a4b9c3bc7b,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249d905471-6493-46e8-90da-af6c6bbf183b
[2m2024-06-26 16:02:36.901[0;39m [32m INFO [,c98caac99e7477f8c48496d40b09a741,fa9d450c2f27ca8f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 689, CreateTime = 1719392533331, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 102, 51, 50, 101, 49, 53, 101, 45, 55, 56, 51, 102, 45, 52, 56, 55, 98, 45, 98, 49, 48, 102, 45, 55, 56, 54, 50, 54, 48, 55, 48, 52, 56, 48, 51]), RecordHeader(key = kafka_correlationId, value = [12, -80, 49, -91, 28, -38, 78, -57, -95, -23, 43, 64, -46, 20, -23, -27]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv248a23a295-9d11-46f9-84b4-d74aa2426bf2, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:02:36.905[0;39m [32m INFO [,c98caac99e7477f8c48496d40b09a741,fa9d450c2f27ca8f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:02:36.915[0;39m [32m INFO [,c98caac99e7477f8c48496d40b09a741,fa9d450c2f27ca8f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv248a23a295-9d11-46f9-84b4-d74aa2426bf2
[2m2024-06-26 16:15:51.942[0;39m [32m INFO [,9985ee4ed611ee622ceea440476ef2cb,8f3d2ae6fc02c454,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 645, CreateTime = 1719393328367, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [97, 98, 102, 100, 97, 101, 99, 97, 45, 55, 102, 48, 97, 45, 52, 51, 54, 53, 45, 98, 99, 52, 48, 45, 49, 102, 99, 102, 97, 54, 51, 97, 55, 49, 100, 99]), RecordHeader(key = kafka_correlationId, value = [88, 61, -38, -105, 67, 6, 64, 91, -82, 118, -7, 83, 37, -48, 85, 18]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2474ca90d6-26e0-4d8b-a6bd-29bfd8bdbb5b, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:15:51.945[0;39m [32m INFO [,9985ee4ed611ee622ceea440476ef2cb,8f3d2ae6fc02c454,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:15:51.953[0;39m [32m INFO [,9985ee4ed611ee622ceea440476ef2cb,8f3d2ae6fc02c454,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2474ca90d6-26e0-4d8b-a6bd-29bfd8bdbb5b
[2m2024-06-26 16:16:05.920[0;39m [32m INFO [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 660, CreateTime = 1719393366418, serialized key size = 53, serialized value size = 35, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 57, 101, 48, 98, 100, 55, 48, 45, 101, 99, 97, 98, 45, 52, 48, 49, 50, 45, 98, 48, 98, 50, 45, 55, 49, 49, 100, 50, 49, 101, 101, 97, 49, 52, 100]), RecordHeader(key = kafka_correlationId, value = [-82, 120, -47, -90, 64, -123, 69, -32, -106, 37, 49, 22, -27, -63, -86, 6]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationLPBSeb3f3f69-d8cc-4e59-9cb0-878567374a58, value = {"customerNo":"","username":"LPBS"})
[2m2024-06-26 16:16:05.921[0;39m [32m INFO [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=, username=LPBS)
[2m2024-06-26 16:16:05.926[0;39m [32mDEBUG [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mtor$SharedEntityManagerInvocationHandler[0;39m 305 [2m:[0;39m Creating new EntityManager for shared EntityManager invocation
[2m2024-06-26 16:16:05.949[0;39m [32m INFO [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mi.StatisticalLoggingSessionEventListener[0;39m 258 [2m:[0;39m Session Metrics {
    15148500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    15337500 nanoseconds spent preparing 1 JDBC statements;
    6089900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[2m2024-06-26 16:16:05.958[0;39m [32m INFO [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mc.l.m.s.impl.PermissionServiceImpl      [0;39m 58  [2m:[0;39m getDtoLogin :get tokenDTO ---->JWTDto(jti=null, roles=null, userName=LPBS, appId=689897645, customerNo=, whiteListIp=null, branchCode=null, secretKey=TjHzCw8Q7jgTAVyUqEm/d5OTpjlWskRs7JXsheT6ndQ=)
[2m2024-06-26 16:16:05.960[0;39m [32m INFO [,399ee7886b1dcc6f,d4626e7a0bec618c,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"LPBS","appId":"689897645","customerNo":"","whiteListIp":null,"branchCode":null,"secretKey":"TjHzCw8Q7jgTAVyUqEm/d5OTpjlWskRs7JXsheT6ndQ="} by key ---->AuthorizationLPBSeb3f3f69-d8cc-4e59-9cb0-878567374a58
[2m2024-06-26 16:18:19.961[0;39m [32m INFO [,f6e6dd2214e8a24d79ba919ec92a3b7c,d18597973961cdb7,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 689, CreateTime = 1719393476386, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 54, 100, 99, 48, 51, 100, 102, 45, 51, 51, 102, 97, 45, 52, 101, 54, 99, 45, 98, 100, 56, 55, 45, 51, 101, 101, 100, 50, 53, 49, 57, 49, 100, 98, 48]), RecordHeader(key = kafka_correlationId, value = [4, 127, -59, -115, -120, -109, 71, -74, -84, 66, 67, -118, -126, 71, -21, -18]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24102744d3-d51d-4958-8223-166210f5e849, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:18:19.965[0;39m [32m INFO [,f6e6dd2214e8a24d79ba919ec92a3b7c,d18597973961cdb7,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:18:19.974[0;39m [32m INFO [,f6e6dd2214e8a24d79ba919ec92a3b7c,d18597973961cdb7,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24102744d3-d51d-4958-8223-166210f5e849
[2m2024-06-26 16:18:43.401[0;39m [32m INFO [,28fa1d26afc0f14537906c176f4f804e,96af35016f0dad52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 686, CreateTime = 1719393499826, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 56, 52, 51, 48, 51, 99, 48, 45, 100, 48, 50, 57, 45, 52, 100, 98, 49, 45, 56, 56, 101, 102, 45, 55, 99, 53, 49, 51, 100, 51, 56, 52, 99, 49, 56]), RecordHeader(key = kafka_correlationId, value = [64, -57, -89, -51, -45, 124, 72, 47, -83, 16, 30, 96, -127, -126, -1, -89]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2452ea832c-e293-48de-8518-e73e1f999d24, value = {"customerNo":"203122078","username":"lv24"})
[2m2024-06-26 16:18:43.402[0;39m [32m INFO [,28fa1d26afc0f14537906c176f4f804e,96af35016f0dad52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122078, username=lv24)
[2m2024-06-26 16:18:43.408[0;39m [32m INFO [,28fa1d26afc0f14537906c176f4f804e,96af35016f0dad52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122078","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2452ea832c-e293-48de-8518-e73e1f999d24
[2m2024-06-26 16:19:27.755[0;39m [32m INFO [,858fe78fe02e4569b42870f0a1456894,5cbaa411c70da726,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 658, CreateTime = 1719393544169, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 50, 51, 57, 98, 54, 97, 53, 45, 53, 99, 50, 53, 45, 52, 102, 99, 57, 45, 56, 48, 54, 98, 45, 100, 102, 49, 100, 101, 50, 57, 56, 50, 53, 55, 54]), RecordHeader(key = kafka_correlationId, value = [7, -41, 112, 97, -24, -121, 69, -45, -117, -52, 62, 78, -25, 111, -97, -8]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249dee4270-c9a5-4ad1-bf3f-a978a11c2b05, value = {"customerNo":"203122205","username":"lv24"})
[2m2024-06-26 16:19:27.756[0;39m [32m INFO [,858fe78fe02e4569b42870f0a1456894,5cbaa411c70da726,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122205, username=lv24)
[2m2024-06-26 16:19:27.764[0;39m [32m INFO [,858fe78fe02e4569b42870f0a1456894,5cbaa411c70da726,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122205","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249dee4270-c9a5-4ad1-bf3f-a978a11c2b05
[2m2024-06-26 16:22:34.142[0;39m [32m INFO [,32d8331d95ffcdde,b660315993660882,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 687, CreateTime = 1719393730562, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 97, 99, 100, 99, 54, 100, 57, 45, 100, 98, 102, 50, 45, 52, 51, 49, 102, 45, 57, 55, 53, 98, 45, 55, 48, 53, 99, 48, 101, 49, 49, 98, 52, 48, 99]), RecordHeader(key = kafka_correlationId, value = [35, -8, -21, -28, -8, 66, 64, -67, -113, 106, 31, -1, 123, 108, -5, -112]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdb52ae65a-da6c-49f8-887d-60104da9fd63, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:22:34.145[0;39m [32m INFO [,32d8331d95ffcdde,b660315993660882,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:22:34.156[0;39m [32m INFO [,32d8331d95ffcdde,b660315993660882,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdb52ae65a-da6c-49f8-887d-60104da9fd63
[2m2024-06-26 16:22:42.180[0;39m [32m INFO [,62ad56d48cdd578d,b165c5648511598d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 661, CreateTime = 1719393738594, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 57, 54, 51, 57, 52, 98, 48, 45, 52, 99, 56, 98, 45, 52, 98, 102, 101, 45, 98, 48, 99, 102, 45, 48, 55, 48, 101, 99, 56, 97, 52, 98, 100, 50, 102]), RecordHeader(key = kafka_correlationId, value = [-102, 66, 86, 44, 6, -128, 71, 9, -123, 43, -128, -105, 118, -15, -62, 99]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdc5a1088d-fb78-4d2d-a7b5-1425970b1bd4, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:22:42.182[0;39m [32m INFO [,62ad56d48cdd578d,b165c5648511598d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:22:42.199[0;39m [32m INFO [,62ad56d48cdd578d,b165c5648511598d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdc5a1088d-fb78-4d2d-a7b5-1425970b1bd4
[2m2024-06-26 16:23:20.091[0;39m [32m INFO [,2cffdc2de88ecefc,3d4bd789c4982a2b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 699, CreateTime = 1719393799932, serialized key size = 53, serialized value size = 35, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 51, 57, 98, 100, 98, 51, 100, 45, 99, 101, 101, 54, 45, 52, 100, 55, 53, 45, 98, 53, 51, 56, 45, 53, 98, 51, 50, 56, 56, 56, 100, 97, 97, 98, 101]), RecordHeader(key = kafka_correlationId, value = [63, -24, -53, -76, -83, 27, 78, 108, -84, 99, 104, 121, 80, -77, -42, 38]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationLPBSb8570bae-0da2-4fd0-9526-5ffa4e3e7075, value = {"customerNo":"","username":"LPBS"})
[2m2024-06-26 16:23:20.092[0;39m [32m INFO [,2cffdc2de88ecefc,3d4bd789c4982a2b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=, username=LPBS)
[2m2024-06-26 16:23:20.101[0;39m [32m INFO [,2cffdc2de88ecefc,3d4bd789c4982a2b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"LPBS","appId":"689897645","customerNo":"","whiteListIp":null,"branchCode":null,"secretKey":"TjHzCw8Q7jgTAVyUqEm/d5OTpjlWskRs7JXsheT6ndQ="} by key ---->AuthorizationLPBSb8570bae-0da2-4fd0-9526-5ffa4e3e7075
[2m2024-06-26 16:23:42.699[0;39m [32m INFO [,2feb322b693010dd,b25e5ecb311d4b99,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 659, CreateTime = 1719393799121, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 97, 98, 97, 55, 51, 49, 52, 45, 97, 50, 51, 54, 45, 52, 101, 53, 53, 45, 97, 54, 99, 98, 45, 97, 55, 99, 52, 48, 55, 50, 97, 54, 50, 57, 49]), RecordHeader(key = kafka_correlationId, value = [102, -94, 59, 120, 44, 43, 72, 110, -118, -15, -105, -66, 67, 105, -115, -36]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd581e8a55-73bf-40be-8562-b7b5a46efcb9, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:23:42.701[0;39m [32m INFO [,2feb322b693010dd,b25e5ecb311d4b99,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:23:42.711[0;39m [32m INFO [,2feb322b693010dd,b25e5ecb311d4b99,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd581e8a55-73bf-40be-8562-b7b5a46efcb9
[2m2024-06-26 16:25:24.239[0;39m [32m INFO [,a67515bf53234b61,2f0960e90a15dd68,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 690, CreateTime = 1719393900654, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 48, 48, 102, 48, 99, 57, 99, 45, 48, 53, 102, 53, 45, 52, 102, 49, 102, 45, 56, 54, 53, 97, 45, 98, 52, 48, 53, 51, 97, 98, 54, 97, 101, 54, 53]), RecordHeader(key = kafka_correlationId, value = [64, 35, 38, 116, -31, -96, 68, 114, -72, -125, -101, 82, -81, 7, -15, 72]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd5bf6f7c2-49c8-4634-9b48-edff8cfe42c5, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:25:24.242[0;39m [32m INFO [,a67515bf53234b61,2f0960e90a15dd68,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:25:24.251[0;39m [32m INFO [,a67515bf53234b61,2f0960e90a15dd68,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd5bf6f7c2-49c8-4634-9b48-edff8cfe42c5
[2m2024-06-26 16:38:36.924[0;39m [32m INFO [,11eb42a3bf3d5e91d08eaa9e62812bee,c8c53442c18ae98a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 660, CreateTime = 1719394693342, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 52, 102, 57, 54, 98, 49, 98, 45, 48, 53, 98, 97, 45, 52, 100, 98, 49, 45, 97, 50, 49, 57, 45, 102, 56, 52, 55, 50, 102, 97, 48, 49, 56, 98, 57]), RecordHeader(key = kafka_correlationId, value = [-109, -22, -5, -48, 51, -110, 77, -120, -92, -10, -33, -70, 125, 70, 3, 29]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ec0f326e-285a-4037-b764-b41254ab6f3c, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:38:36.926[0;39m [32m INFO [,11eb42a3bf3d5e91d08eaa9e62812bee,c8c53442c18ae98a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:38:36.935[0;39m [32m INFO [,11eb42a3bf3d5e91d08eaa9e62812bee,c8c53442c18ae98a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ec0f326e-285a-4037-b764-b41254ab6f3c
[2m2024-06-26 16:47:53.117[0;39m [32m INFO [,b73a05af5e372ed6,93c221278056cc95,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 700, CreateTime = 1719395249529, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 97, 101, 56, 52, 56, 52, 52, 45, 98, 99, 101, 49, 45, 52, 56, 53, 48, 45, 57, 56, 50, 100, 45, 97, 99, 102, 101, 49, 99, 52, 98, 98, 50, 49, 51]), RecordHeader(key = kafka_correlationId, value = [-99, -7, 5, -26, 55, 105, 79, -47, -126, -59, -95, 3, 45, 113, 69, 127]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd62c69374-248b-4051-9975-f61e71fafab9, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:47:53.118[0;39m [32m INFO [,b73a05af5e372ed6,93c221278056cc95,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:47:53.132[0;39m [32m INFO [,b73a05af5e372ed6,93c221278056cc95,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd62c69374-248b-4051-9975-f61e71fafab9
[2m2024-06-26 16:48:00.312[0;39m [32m INFO [,819ff0d493088274,0a9ca6d0c274797a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 693, CreateTime = 1719395256732, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 97, 50, 101, 54, 55, 56, 52, 45, 54, 53, 51, 99, 45, 52, 48, 51, 98, 45, 57, 56, 97, 56, 45, 102, 54, 51, 55, 99, 98, 97, 54, 102, 49, 53, 99]), RecordHeader(key = kafka_correlationId, value = [81, 105, 83, 108, 102, 10, 79, -51, -117, -36, -123, -5, 40, 98, -111, 47]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdeb5f6eea-d60b-4186-b4ed-a4d067688758, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:48:00.314[0;39m [32m INFO [,819ff0d493088274,0a9ca6d0c274797a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:48:00.336[0;39m [32m INFO [,819ff0d493088274,0a9ca6d0c274797a,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdeb5f6eea-d60b-4186-b4ed-a4d067688758
[2m2024-06-26 16:48:00.392[0;39m [32m INFO [,6ac6973c2feb8d10b54ebfe5dde81665,d8f4dc507d9001c4,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 660, CreateTime = 1719395256804, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 101, 99, 100, 54, 57, 53, 56, 45, 49, 56, 102, 56, 45, 52, 97, 101, 98, 45, 56, 55, 49, 102, 45, 53, 48, 102, 50, 100, 51, 56, 51, 98, 97, 57, 55]), RecordHeader(key = kafka_correlationId, value = [-113, 106, -63, -64, 15, 24, 75, 110, -88, -102, -12, -87, 62, 22, -95, -106]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv249f26d50f-89c8-43a9-9389-6f1b6203483a, value = {"customerNo":"201389033","username":"lv24"})
[2m2024-06-26 16:48:00.394[0;39m [32m INFO [,6ac6973c2feb8d10b54ebfe5dde81665,d8f4dc507d9001c4,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=201389033, username=lv24)
[2m2024-06-26 16:48:00.409[0;39m [32m INFO [,6ac6973c2feb8d10b54ebfe5dde81665,d8f4dc507d9001c4,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"201389033","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv249f26d50f-89c8-43a9-9389-6f1b6203483a
[2m2024-06-26 16:48:07.929[0;39m [32m INFO [,809a7debce1f841f,d5162c6204d7990d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 661, CreateTime = 1719395264345, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 97, 97, 101, 57, 99, 49, 45, 53, 57, 99, 100, 45, 52, 100, 51, 52, 45, 56, 98, 54, 102, 45, 50, 53, 53, 50, 49, 56, 101, 98, 56, 55, 99, 55]), RecordHeader(key = kafka_correlationId, value = [91, -30, -121, 6, -19, -45, 67, 85, -84, 106, -62, 12, -48, -62, 104, 31]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccde066c15f-88b9-4f99-9e7f-4f5818942d8b, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:48:07.933[0;39m [32m INFO [,809a7debce1f841f,d5162c6204d7990d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:48:07.948[0;39m [32m INFO [,809a7debce1f841f,d5162c6204d7990d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccde066c15f-88b9-4f99-9e7f-4f5818942d8b
[2m2024-06-26 16:48:15.152[0;39m [32m INFO [,b5287c5a356d606c607674e7a5d9f160,b6ed6fe5529590d1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 661, CreateTime = 1719395271574, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 50, 99, 53, 48, 55, 97, 53, 45, 48, 56, 48, 102, 45, 52, 97, 55, 48, 45, 97, 100, 97, 48, 45, 55, 57, 51, 54, 51, 54, 98, 48, 55, 55, 98, 99]), RecordHeader(key = kafka_correlationId, value = [-18, 12, -70, -112, -95, 123, 68, -86, -109, 45, -102, -42, -20, -14, 116, -114]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24e6240c27-3cfd-489a-a0cf-a5c9db8ce6f5, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 16:48:15.168[0;39m [32m INFO [,b5287c5a356d606c607674e7a5d9f160,b6ed6fe5529590d1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 16:48:15.176[0;39m [32m INFO [,b5287c5a356d606c607674e7a5d9f160,b6ed6fe5529590d1,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24e6240c27-3cfd-489a-a0cf-a5c9db8ce6f5
[2m2024-06-26 16:49:44.500[0;39m [32m INFO [,c9da0c93b8f31c87a1bd3a247d160aa5,bbc2d014798549ba,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 691, CreateTime = 1719395360915, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 98, 98, 55, 100, 99, 53, 53, 45, 50, 99, 56, 100, 45, 52, 54, 50, 51, 45, 97, 53, 99, 56, 45, 48, 102, 48, 99, 48, 55, 99, 100, 102, 98, 48, 101]), RecordHeader(key = kafka_correlationId, value = [81, -123, 50, 91, 20, 2, 64, -18, -105, -6, -114, -122, 94, -44, -1, 107]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f81b2039-2c1a-450b-94a6-843c3dee81be, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 16:49:44.503[0;39m [32m INFO [,c9da0c93b8f31c87a1bd3a247d160aa5,bbc2d014798549ba,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 16:49:44.521[0;39m [32m INFO [,c9da0c93b8f31c87a1bd3a247d160aa5,bbc2d014798549ba,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f81b2039-2c1a-450b-94a6-843c3dee81be
[2m2024-06-26 16:52:15.412[0;39m [32m INFO [,8e6b9df4334c2090,ef955838be6a5206,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 694, CreateTime = 1719395511832, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 100, 55, 50, 98, 54, 98, 53, 45, 57, 97, 52, 98, 45, 52, 52, 49, 97, 45, 57, 55, 54, 55, 45, 48, 51, 55, 49, 56, 97, 48, 99, 102, 49, 51, 99]), RecordHeader(key = kafka_correlationId, value = [92, 110, 38, 68, 18, -120, 73, -103, -111, -2, 70, 75, 82, 103, -77, -57]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdc3d44f04-30b4-403f-861d-cc42d6d64ba7, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 16:52:15.413[0;39m [32m INFO [,8e6b9df4334c2090,ef955838be6a5206,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 16:52:15.419[0;39m [32m INFO [,8e6b9df4334c2090,ef955838be6a5206,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdc3d44f04-30b4-403f-861d-cc42d6d64ba7
[2m2024-06-26 16:54:42.370[0;39m [32m INFO [,8667e981314cd3f3,738d48834f534b28,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 692, CreateTime = 1719395680626, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 101, 52, 50, 99, 55, 98, 97, 45, 101, 99, 101, 100, 45, 52, 49, 53, 57, 45, 56, 48, 57, 55, 45, 57, 50, 100, 49, 49, 57, 54, 50, 102, 56, 98, 100]), RecordHeader(key = kafka_correlationId, value = [81, -77, -9, 83, -95, -116, 69, 62, -105, -77, -64, 124, 101, -13, 33, -65]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24fa65f6f4-4ccf-4354-9fb4-39e16eac735f, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 16:54:42.371[0;39m [32m INFO [,8667e981314cd3f3,738d48834f534b28,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 16:54:42.388[0;39m [32m INFO [,8667e981314cd3f3,738d48834f534b28,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24fa65f6f4-4ccf-4354-9fb4-39e16eac735f
[2m2024-06-26 16:54:53.682[0;39m [32m INFO [,6806011bae2a850d7fa0d9821d1522f1,ef98ac6659552a70,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 662, CreateTime = 1719395670105, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 54, 49, 97, 99, 98, 100, 49, 45, 99, 100, 49, 50, 45, 52, 50, 52, 51, 45, 56, 98, 54, 56, 45, 97, 51, 98, 56, 53, 101, 57, 48, 98, 55, 98, 102]), RecordHeader(key = kafka_correlationId, value = [45, -100, -82, 58, 105, -44, 64, -114, -98, 120, -121, -123, -53, 55, -88, -43]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24d0477008-87e7-4aaa-8d39-47ecdafb96ea, value = {"customerNo":"201389033","username":"lv24"})
[2m2024-06-26 16:54:53.683[0;39m [32m INFO [,6806011bae2a850d7fa0d9821d1522f1,ef98ac6659552a70,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=201389033, username=lv24)
[2m2024-06-26 16:54:53.692[0;39m [32m INFO [,6806011bae2a850d7fa0d9821d1522f1,ef98ac6659552a70,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"201389033","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24d0477008-87e7-4aaa-8d39-47ecdafb96ea
[2m2024-06-26 17:01:46.306[0;39m [32m INFO [,0d6817072ae54b7f,7a31f59540d72cd5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 662, CreateTime = 1719396082714, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 98, 55, 48, 49, 100, 51, 51, 45, 102, 57, 102, 102, 45, 52, 50, 99, 99, 45, 57, 48, 48, 57, 45, 51, 53, 102, 50, 49, 48, 50, 57, 101, 55, 98, 55]), RecordHeader(key = kafka_correlationId, value = [44, 45, -105, 53, -49, 33, 72, -10, -114, -101, 108, 20, -72, -108, 116, 124]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdad99a7bf-c112-42c4-b15e-b84bc61531a6, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 17:01:46.307[0;39m [32m INFO [,0d6817072ae54b7f,7a31f59540d72cd5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 17:01:46.321[0;39m [32m INFO [,0d6817072ae54b7f,7a31f59540d72cd5,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdad99a7bf-c112-42c4-b15e-b84bc61531a6
[2m2024-06-26 17:02:03.503[0;39m [32m INFO [,268a675ae8bf3eaa,3f69eaa25da124b7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 693, CreateTime = 1719396099925, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 55, 99, 51, 55, 54, 53, 48, 45, 54, 99, 102, 57, 45, 52, 56, 48, 53, 45, 56, 52, 98, 56, 45, 54, 54, 52, 52, 57, 98, 50, 102, 56, 53, 54, 52]), RecordHeader(key = kafka_correlationId, value = [-30, -24, 12, -64, -111, 90, 75, 98, -98, 9, 18, -26, 81, -34, -112, -12]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd6dc28d4b-9175-4cce-86f6-5723a549f488, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 17:02:03.504[0;39m [32m INFO [,268a675ae8bf3eaa,3f69eaa25da124b7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 17:02:03.509[0;39m [32m INFO [,268a675ae8bf3eaa,3f69eaa25da124b7,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd6dc28d4b-9175-4cce-86f6-5723a549f488
[2m2024-06-26 17:02:54.959[0;39m [32m INFO [,df7d9d5287e021fea6d378af80c41ec2,2d4af5b91acdb50a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 2, leaderEpoch = 0, offset = 646, CreateTime = 1719396151381, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [57, 49, 54, 97, 51, 97, 48, 102, 45, 49, 49, 100, 49, 45, 52, 49, 55, 57, 45, 56, 98, 56, 52, 45, 51, 97, 56, 101, 102, 99, 99, 52, 56, 100, 55, 100]), RecordHeader(key = kafka_correlationId, value = [115, 95, 2, -53, 19, -34, 74, 118, -96, -6, -71, 27, 98, -6, 70, -90]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2401b98794-be63-4dae-ad29-db61a6db18c1, value = {"customerNo":"203090079","username":"lv24"})
[2m2024-06-26 17:02:54.961[0;39m [32m INFO [,df7d9d5287e021fea6d378af80c41ec2,2d4af5b91acdb50a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203090079, username=lv24)
[2m2024-06-26 17:02:54.967[0;39m [32m INFO [,df7d9d5287e021fea6d378af80c41ec2,2d4af5b91acdb50a,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203090079","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2401b98794-be63-4dae-ad29-db61a6db18c1
[2m2024-06-26 17:05:44.287[0;39m [32m INFO [,17c7146b87dd5d9a,65186245c2309256,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 694, CreateTime = 1719396320711, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 101, 98, 98, 57, 56, 97, 56, 45, 51, 49, 53, 53, 45, 52, 49, 53, 100, 45, 97, 101, 97, 52, 45, 49, 100, 100, 57, 51, 56, 48, 100, 99, 52, 48, 52]), RecordHeader(key = kafka_correlationId, value = [-58, -68, -126, -23, 44, 56, 79, 74, -86, -102, -24, -38, -31, 0, -51, 74]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdb313956e-05eb-48d3-b656-fe134a18b69e, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 17:05:44.287[0;39m [32m INFO [,17c7146b87dd5d9a,65186245c2309256,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 17:05:44.293[0;39m [32m INFO [,17c7146b87dd5d9a,65186245c2309256,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdb313956e-05eb-48d3-b656-fe134a18b69e
[2m2024-06-26 17:05:51.525[0;39m [32m INFO [,7204e6a0168e8095,c007a563965b3e5b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 701, CreateTime = 1719396327946, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 102, 54, 98, 51, 55, 98, 48, 45, 102, 52, 53, 98, 45, 52, 53, 52, 48, 45, 97, 101, 97, 56, 45, 100, 51, 57, 102, 97, 56, 55, 49, 52, 49, 49, 56]), RecordHeader(key = kafka_correlationId, value = [78, 118, 65, 123, 110, 107, 74, -56, -93, 22, -76, -36, -127, -33, 23, 13]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccda792bc4f-9072-4e65-8f8f-b9f8881118d2, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 17:05:51.528[0;39m [32m INFO [,7204e6a0168e8095,c007a563965b3e5b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 17:05:51.539[0;39m [32m INFO [,7204e6a0168e8095,c007a563965b3e5b,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccda792bc4f-9072-4e65-8f8f-b9f8881118d2
[2m2024-06-26 17:06:43.900[0;39m [32m INFO [,e246689716a50b08e85ac9e833b05cea,e6e94141b8eb50fe,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 695, CreateTime = 1719396380322, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 56, 100, 52, 49, 55, 98, 99, 45, 52, 48, 51, 57, 45, 52, 56, 54, 56, 45, 97, 99, 97, 48, 45, 51, 101, 101, 48, 53, 54, 54, 51, 51, 56, 51, 99]), RecordHeader(key = kafka_correlationId, value = [-100, -101, 66, -60, 15, -17, 77, 117, -66, -95, 25, -66, -95, 70, -12, -13]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv242bd49b49-3bfb-4a2d-8be9-e32f0d85fcc3, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:06:43.901[0;39m [32m INFO [,e246689716a50b08e85ac9e833b05cea,e6e94141b8eb50fe,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:06:43.908[0;39m [32m INFO [,e246689716a50b08e85ac9e833b05cea,e6e94141b8eb50fe,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv242bd49b49-3bfb-4a2d-8be9-e32f0d85fcc3
[2m2024-06-26 17:10:47.249[0;39m [32m INFO [,a884037f3d0016bbc585663b16670a83,ce29f71c7ef52108,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 690, CreateTime = 1719396623668, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [53, 101, 49, 101, 48, 52, 51, 52, 45, 50, 48, 56, 99, 45, 52, 51, 52, 57, 45, 57, 99, 51, 48, 45, 98, 52, 102, 53, 48, 56, 54, 51, 54, 51, 53, 99]), RecordHeader(key = kafka_correlationId, value = [31, -16, -83, -98, 88, -89, 73, 75, -86, -65, 1, -19, 75, 26, 124, -115]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c43b9ffe-02ce-4f1b-8e02-d4a5dcac8eb1, value = {"customerNo":"203122263","username":"lv24"})
[2m2024-06-26 17:10:47.251[0;39m [32m INFO [,a884037f3d0016bbc585663b16670a83,ce29f71c7ef52108,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122263, username=lv24)
[2m2024-06-26 17:10:47.259[0;39m [32m INFO [,a884037f3d0016bbc585663b16670a83,ce29f71c7ef52108,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122263","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c43b9ffe-02ce-4f1b-8e02-d4a5dcac8eb1
[2m2024-06-26 17:18:33.482[0;39m [32m INFO [,a4d4881cdb6b10e34656c772051afb03,e79e6a3b00f9ea07,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 27, leaderEpoch = 0, offset = 695, CreateTime = 1719397089895, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 97, 53, 55, 56, 56, 99, 98, 45, 55, 102, 100, 56, 45, 52, 50, 48, 101, 45, 98, 56, 99, 97, 45, 101, 57, 57, 53, 102, 54, 53, 51, 56, 50, 100, 99]), RecordHeader(key = kafka_correlationId, value = [58, 6, 17, 81, 65, -50, 73, 16, -94, 99, 70, 88, -76, -43, 13, 44]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ee98eb2e-999c-4cf9-b11a-1d23eef5f2fd, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:18:33.485[0;39m [32m INFO [,a4d4881cdb6b10e34656c772051afb03,e79e6a3b00f9ea07,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:18:33.536[0;39m [32m INFO [,a4d4881cdb6b10e34656c772051afb03,e79e6a3b00f9ea07,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-17-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ee98eb2e-999c-4cf9-b11a-1d23eef5f2fd
[2m2024-06-26 17:21:55.885[0;39m [32m INFO [,e3f84d3edd481203dd5a55432567f13b,d215eee567e88182,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 696, CreateTime = 1719397292298, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 102, 102, 57, 97, 54, 99, 101, 45, 101, 101, 57, 102, 45, 52, 100, 101, 54, 45, 56, 101, 97, 102, 45, 97, 57, 52, 52, 57, 53, 53, 53, 54, 98, 99, 97]), RecordHeader(key = kafka_correlationId, value = [-46, -127, -42, -101, -83, 91, 66, -23, -98, 97, 92, -114, 64, 77, -66, -122]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24c15e35b0-1fc8-4025-abe5-8fcf332d8d11, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 17:21:55.888[0;39m [32m INFO [,e3f84d3edd481203dd5a55432567f13b,d215eee567e88182,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 17:21:55.896[0;39m [32m INFO [,e3f84d3edd481203dd5a55432567f13b,d215eee567e88182,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24c15e35b0-1fc8-4025-abe5-8fcf332d8d11
[2m2024-06-26 17:30:34.404[0;39m [32m INFO [,87aef5ba565077678e15566ebe706132,57a93606477f44aa,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 5, leaderEpoch = 0, offset = 691, CreateTime = 1719397810803, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [101, 49, 54, 97, 50, 50, 51, 56, 45, 57, 48, 56, 53, 45, 52, 97, 101, 56, 45, 98, 101, 48, 50, 45, 50, 57, 101, 100, 97, 99, 52, 97, 57, 54, 97, 98]), RecordHeader(key = kafka_correlationId, value = [36, 70, -100, 52, -102, -45, 70, -123, -106, 28, -55, 5, 127, 14, 34, 71]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2403dccc38-c3e3-449d-a17b-4b1e1cce9405, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:30:34.406[0;39m [32m INFO [,87aef5ba565077678e15566ebe706132,57a93606477f44aa,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:30:34.435[0;39m [32m INFO [,87aef5ba565077678e15566ebe706132,57a93606477f44aa,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[ntainer#0-9-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2403dccc38-c3e3-449d-a17b-4b1e1cce9405
[2m2024-06-26 17:31:30.219[0;39m [32m INFO [,94083ac617745b2786972fdc00687e98,3c3e4ed43de1cf12,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 663, CreateTime = 1719397866625, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 101, 98, 50, 50, 53, 99, 49, 45, 53, 54, 51, 57, 45, 52, 97, 54, 99, 45, 98, 97, 49, 57, 45, 99, 51, 56, 56, 49, 50, 48, 56, 57, 101, 57, 98]), RecordHeader(key = kafka_correlationId, value = [-93, -126, 37, 31, -94, 46, 70, -17, -71, 88, 114, -8, 78, -79, 106, 53]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2442b66341-c220-4cff-b3c5-cee88fcc1526, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:31:30.225[0;39m [32m INFO [,94083ac617745b2786972fdc00687e98,3c3e4ed43de1cf12,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:31:30.234[0;39m [32m INFO [,94083ac617745b2786972fdc00687e98,3c3e4ed43de1cf12,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2442b66341-c220-4cff-b3c5-cee88fcc1526
[2m2024-06-26 17:34:42.596[0;39m [32m INFO [,30c3243f8f194e381c02508ef2040a02,64c171335577ba53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 702, CreateTime = 1719398059004, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [100, 101, 53, 57, 55, 55, 56, 48, 45, 52, 100, 54, 99, 45, 52, 53, 55, 53, 45, 98, 101, 102, 53, 45, 50, 56, 54, 55, 51, 53, 100, 53, 98, 97, 57, 97]), RecordHeader(key = kafka_correlationId, value = [30, -44, 78, 46, 117, -15, 66, -14, -85, 54, -107, -100, 125, -41, -40, -118]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24dea1b322-1dc8-452a-adfe-f823e211a679, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:34:42.600[0;39m [32m INFO [,30c3243f8f194e381c02508ef2040a02,64c171335577ba53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:34:42.612[0;39m [32m INFO [,30c3243f8f194e381c02508ef2040a02,64c171335577ba53,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24dea1b322-1dc8-452a-adfe-f823e211a679
[2m2024-06-26 17:37:38.662[0;39m [32m INFO [,103383b9140992faa40613b334022a58,90ff9b32fe3d18db,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 688, CreateTime = 1719398235071, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 51, 53, 52, 57, 52, 100, 101, 45, 50, 49, 52, 57, 45, 52, 51, 97, 97, 45, 97, 101, 51, 97, 45, 53, 52, 101, 48, 49, 55, 48, 54, 48, 102, 99, 48]), RecordHeader(key = kafka_correlationId, value = [26, 15, -120, -114, 77, 23, 71, 21, -81, -128, -94, 92, 0, 39, -80, -30]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ff8cf553-8035-46a9-a27f-1cbbd8040dc2, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:37:38.663[0;39m [32m INFO [,103383b9140992faa40613b334022a58,90ff9b32fe3d18db,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:37:38.672[0;39m [32m INFO [,103383b9140992faa40613b334022a58,90ff9b32fe3d18db,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ff8cf553-8035-46a9-a27f-1cbbd8040dc2
[2m2024-06-26 17:37:42.675[0;39m [32m INFO [,5a219a0b6e5b1dd9784844405c2feef0,daa8df167a8e6c97,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 664, CreateTime = 1719398239082, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 50, 102, 99, 97, 55, 48, 56, 45, 48, 55, 54, 48, 45, 52, 55, 48, 101, 45, 97, 51, 52, 100, 45, 54, 52, 100, 56, 101, 97, 50, 57, 48, 54, 102, 54]), RecordHeader(key = kafka_correlationId, value = [-49, 25, 90, -33, 47, 22, 68, -110, -120, 66, -117, 4, -114, -34, 30, -20]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24b4dbb01f-2cb3-4c70-a036-d0ec6c26f7e2, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:37:42.678[0;39m [32m INFO [,5a219a0b6e5b1dd9784844405c2feef0,daa8df167a8e6c97,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:37:42.686[0;39m [32m INFO [,5a219a0b6e5b1dd9784844405c2feef0,daa8df167a8e6c97,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24b4dbb01f-2cb3-4c70-a036-d0ec6c26f7e2
[2m2024-06-26 17:40:44.086[0;39m [32m INFO [,8246fcadc30104b0,e3e8d995286c5bba,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 703, CreateTime = 1719398444619, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 99, 98, 49, 98, 98, 101, 50, 45, 53, 48, 51, 56, 45, 52, 55, 53, 99, 45, 98, 99, 55, 56, 45, 98, 52, 48, 97, 98, 48, 98, 53, 56, 51, 99, 100]), RecordHeader(key = kafka_correlationId, value = [79, 44, 57, -108, -102, -25, 74, -45, -128, 81, 73, 30, 78, -3, -62, 41]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24cf80198c-f3ce-4ab7-912a-468305f392f8, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 17:40:44.088[0;39m [32m INFO [,8246fcadc30104b0,e3e8d995286c5bba,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 17:40:44.094[0;39m [32m INFO [,8246fcadc30104b0,e3e8d995286c5bba,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24cf80198c-f3ce-4ab7-912a-468305f392f8
[2m2024-06-26 17:40:56.864[0;39m [32m INFO [,1fb6ffd491196f9be1233e90582be3b4,84c924358906b71d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 689, CreateTime = 1719398433268, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [48, 99, 98, 52, 51, 54, 49, 53, 45, 57, 56, 101, 56, 45, 52, 101, 51, 102, 45, 57, 50, 97, 98, 45, 56, 57, 56, 55, 56, 50, 98, 102, 98, 49, 52, 51]), RecordHeader(key = kafka_correlationId, value = [-90, -84, -63, -9, -48, -86, 77, -71, -78, -56, -84, -23, -62, -116, -63, -52]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a8c4cbda-9647-4ddf-8a7c-c5bc244c08fd, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:40:56.866[0;39m [32m INFO [,1fb6ffd491196f9be1233e90582be3b4,84c924358906b71d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:40:56.874[0;39m [32m INFO [,1fb6ffd491196f9be1233e90582be3b4,84c924358906b71d,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a8c4cbda-9647-4ddf-8a7c-c5bc244c08fd
[2m2024-06-26 17:41:33.232[0;39m [32m INFO [,6d3c6c0e4243e4d0,9d9e07ee6ad4f34f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 680, CreateTime = 1719398493760, serialized key size = 53, serialized value size = 39, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 117, 115, 101, 114, 95, 114, 101, 112, 108, 121]), RecordHeader(key = kafka_correlationId, value = [102, 50, 53, 102, 49, 51, 98, 100, 45, 56, 53, 52, 97, 45, 52, 54, 53, 51, 45, 56, 49, 48, 101, 45, 49, 99, 102, 98, 57, 99, 49, 52, 48, 48, 57, 99]), RecordHeader(key = kafka_correlationId, value = [-74, -43, -82, 14, 32, -33, 64, 42, -65, -19, 117, -93, -77, 61, 44, 114]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv243f99e345-da2e-41e9-ab04-0c1a6454e5b9, value = {"customerNo":"null","username":"lv24"})
[2m2024-06-26 17:41:33.233[0;39m [32m INFO [,6d3c6c0e4243e4d0,9d9e07ee6ad4f34f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=lv24)
[2m2024-06-26 17:41:33.242[0;39m [32m INFO [,6d3c6c0e4243e4d0,9d9e07ee6ad4f34f,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv243f99e345-da2e-41e9-ab04-0c1a6454e5b9
[2m2024-06-26 17:47:34.632[0;39m [32m INFO [,4be96af78c08b88cacee5d5ed391f285,628ee89b4fc8fb14,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 697, CreateTime = 1719398831041, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 49, 50, 54, 49, 50, 99, 56, 45, 55, 48, 102, 48, 45, 52, 99, 101, 97, 45, 97, 52, 48, 57, 45, 99, 50, 51, 97, 55, 56, 102, 101, 102, 102, 48, 52]), RecordHeader(key = kafka_correlationId, value = [-104, 10, 61, -42, 5, 24, 74, 55, -106, 45, 54, 0, -34, -46, 93, 85]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2434e44c20-3c3a-4c1c-b934-3112e62f4cbc, value = {"customerNo":"203122169","username":"lv24"})
[2m2024-06-26 17:47:34.633[0;39m [32m INFO [,4be96af78c08b88cacee5d5ed391f285,628ee89b4fc8fb14,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122169, username=lv24)
[2m2024-06-26 17:47:34.641[0;39m [32m INFO [,4be96af78c08b88cacee5d5ed391f285,628ee89b4fc8fb14,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122169","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2434e44c20-3c3a-4c1c-b934-3112e62f4cbc
[2m2024-06-26 17:48:37.288[0;39m [32m INFO [,53f6e73631b7a5f6eadc8eb503f39ef5,c38f73efe0616310,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 690, CreateTime = 1719398893695, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [54, 54, 57, 49, 54, 57, 49, 53, 45, 99, 100, 99, 52, 45, 52, 57, 56, 97, 45, 98, 51, 57, 48, 45, 56, 101, 99, 101, 97, 98, 101, 101, 99, 48, 55, 97]), RecordHeader(key = kafka_correlationId, value = [39, -11, -94, 97, 112, -56, 68, 24, -123, -83, -25, 107, 88, -89, 63, -48]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2446d9fc4f-687c-473a-8a82-ea3140cc55a1, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 17:48:37.289[0;39m [32m INFO [,53f6e73631b7a5f6eadc8eb503f39ef5,c38f73efe0616310,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 17:48:37.296[0;39m [32m INFO [,53f6e73631b7a5f6eadc8eb503f39ef5,c38f73efe0616310,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2446d9fc4f-687c-473a-8a82-ea3140cc55a1
[2m2024-06-26 17:49:40.915[0;39m [32m INFO [,219b4a3f53adf1ab8c60006b54050aab,d5818f1b0da710e8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 663, CreateTime = 1719398957322, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 102, 101, 101, 53, 56, 101, 100, 45, 101, 97, 56, 48, 45, 52, 101, 100, 55, 45, 56, 101, 101, 53, 45, 97, 53, 101, 54, 51, 102, 99, 97, 56, 101, 53, 56]), RecordHeader(key = kafka_correlationId, value = [-62, 47, 9, 52, 61, -90, 76, 88, -65, 18, -32, -111, -111, 9, -101, 83]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24a2cc64f2-b9ff-4521-92cc-e7124cd327db, value = {"customerNo":"203090079","username":"lv24"})
[2m2024-06-26 17:49:40.918[0;39m [32m INFO [,219b4a3f53adf1ab8c60006b54050aab,d5818f1b0da710e8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203090079, username=lv24)
[2m2024-06-26 17:49:40.941[0;39m [32m INFO [,219b4a3f53adf1ab8c60006b54050aab,d5818f1b0da710e8,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203090079","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24a2cc64f2-b9ff-4521-92cc-e7124cd327db
[2m2024-06-26 17:51:20.265[0;39m [32m INFO [,3f5ef1cb75693041cc65c6ab73620a33,0c771710500c96ee,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 665, CreateTime = 1719399056670, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 55, 56, 97, 49, 49, 54, 102, 45, 53, 98, 49, 48, 45, 52, 50, 50, 100, 45, 56, 100, 53, 57, 45, 100, 49, 99, 102, 101, 98, 49, 48, 98, 55, 50, 51]), RecordHeader(key = kafka_correlationId, value = [-65, 117, -12, 56, 26, 32, 78, 10, -127, -16, -65, 15, -39, 76, 17, -73]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24f6543f48-6b65-4ffd-b75f-99a0e15642d1, value = {"customerNo":"201389033","username":"lv24"})
[2m2024-06-26 17:51:20.267[0;39m [32m INFO [,3f5ef1cb75693041cc65c6ab73620a33,0c771710500c96ee,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=201389033, username=lv24)
[2m2024-06-26 17:51:20.276[0;39m [32m INFO [,3f5ef1cb75693041cc65c6ab73620a33,0c771710500c96ee,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"201389033","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24f6543f48-6b65-4ffd-b75f-99a0e15642d1
[2m2024-06-26 17:58:03.162[0;39m [32m INFO [,8ecf762d06241607,1fb9fe10b2b3757e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 666, CreateTime = 1719399459567, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [98, 97, 97, 56, 98, 50, 50, 48, 45, 97, 56, 50, 49, 45, 52, 98, 53, 57, 45, 57, 98, 54, 99, 45, 57, 102, 97, 56, 48, 52, 100, 57, 54, 54, 54, 102]), RecordHeader(key = kafka_correlationId, value = [-4, -100, -16, -101, -117, 74, 68, 0, -118, -5, 43, -108, 27, -70, -127, -71]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET51d449a4-c9bb-42e7-8a19-ce81b5447288, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 17:58:03.164[0;39m [32m INFO [,8ecf762d06241607,1fb9fe10b2b3757e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 17:58:03.170[0;39m [32m INFO [,8ecf762d06241607,1fb9fe10b2b3757e,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET51d449a4-c9bb-42e7-8a19-ce81b5447288
[2m2024-06-26 17:58:30.178[0;39m [32m INFO [,a55a749349280dba,f6d75e3af808a531,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 21, leaderEpoch = 0, offset = 667, CreateTime = 1719399486580, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 57, 52, 50, 52, 98, 97, 48, 45, 99, 102, 57, 101, 45, 52, 56, 100, 48, 45, 56, 54, 57, 52, 45, 99, 51, 99, 52, 54, 55, 57, 51, 50, 100, 99, 51]), RecordHeader(key = kafka_correlationId, value = [16, -67, -105, 67, 60, -53, 64, -128, -106, 112, 75, -41, -15, 22, 45, 125]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLET67c1b3b6-7fe1-475e-9deb-202956bf31fb, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 17:58:30.183[0;39m [32m INFO [,a55a749349280dba,f6d75e3af808a531,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 17:58:30.190[0;39m [32m INFO [,a55a749349280dba,f6d75e3af808a531,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-15-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLET67c1b3b6-7fe1-475e-9deb-202956bf31fb
[2m2024-06-26 17:58:41.853[0;39m [32m INFO [,990bbba07e1d47db,ce5373ab703f7014,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 664, CreateTime = 1719399498260, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 52, 48, 51, 49, 100, 55, 55, 45, 53, 50, 54, 57, 45, 52, 55, 49, 54, 45, 57, 101, 57, 102, 45, 56, 57, 97, 99, 51, 54, 48, 53, 56, 56, 101, 57]), RecordHeader(key = kafka_correlationId, value = [32, 64, 92, -93, -4, -125, 68, 7, -112, 73, -24, 108, -41, 127, -128, 23]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETb101d70e-2a85-415c-bf5c-9e55342e3158, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 17:58:41.856[0;39m [32m INFO [,990bbba07e1d47db,ce5373ab703f7014,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 17:58:41.862[0;39m [32m INFO [,990bbba07e1d47db,ce5373ab703f7014,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETb101d70e-2a85-415c-bf5c-9e55342e3158
[2m2024-06-26 18:06:43.296[0;39m [32m INFO [,fe0e14e364f40793,4a960ea43d6d4e37,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 698, CreateTime = 1719399979704, serialized key size = 60, serialized value size = 46, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 49, 50, 48, 57, 56, 51, 54, 45, 56, 51, 100, 54, 45, 52, 97, 48, 48, 45, 57, 100, 49, 48, 45, 53, 53, 100, 54, 56, 101, 102, 97, 54, 98, 50, 53]), RecordHeader(key = kafka_correlationId, value = [88, 29, -85, 69, -87, 105, 70, -120, -73, -108, -57, -89, -3, -110, 108, -24]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = AuthorizationMID_EWALLETcbf93de7-80c1-4925-a3c6-9e0d5f3a4f9b, value = {"customerNo":"null","username":"MID_EWALLET"})
[2m2024-06-26 18:06:43.299[0;39m [32m INFO [,fe0e14e364f40793,4a960ea43d6d4e37,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=MID_EWALLET)
[2m2024-06-26 18:06:43.305[0;39m [32m INFO [,fe0e14e364f40793,4a960ea43d6d4e37,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"MID_EWALLET","appId":"456745676","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"bvZHdhAvXIQ71Wlq8Q5C8trmohKDNbjgnNfTcNthQI0="} by key ---->AuthorizationMID_EWALLETcbf93de7-80c1-4925-a3c6-9e0d5f3a4f9b
[2m2024-06-26 18:18:51.773[0;39m [32m INFO [,d718c09c4036f6f3,8ff3600842f4c32d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 691, CreateTime = 1719400708167, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 56, 101, 53, 49, 50, 102, 55, 45, 55, 57, 57, 53, 45, 52, 97, 50, 49, 45, 57, 51, 98, 51, 45, 97, 56, 54, 49, 51, 51, 101, 53, 99, 100, 100, 51]), RecordHeader(key = kafka_correlationId, value = [-31, 69, 105, -50, -5, -115, 71, -15, -65, -97, 52, -48, 1, -16, 40, -72]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd7eedf1c2-0f44-47b3-9a29-6898bed13c9d, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 18:18:51.776[0;39m [32m INFO [,d718c09c4036f6f3,8ff3600842f4c32d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 18:18:51.786[0;39m [32m INFO [,d718c09c4036f6f3,8ff3600842f4c32d,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd7eedf1c2-0f44-47b3-9a29-6898bed13c9d
[2m2024-06-26 18:19:12.262[0;39m [32m INFO [,8b60838257b3dd9a,0c5b6d794acedcbf,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 681, CreateTime = 1719400728660, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 98, 97, 49, 57, 49, 49, 57, 45, 52, 101, 102, 53, 45, 52, 53, 55, 52, 45, 56, 50, 55, 49, 45, 101, 100, 49, 102, 97, 97, 55, 56, 99, 97, 53, 99]), RecordHeader(key = kafka_correlationId, value = [1, 6, -17, 101, 76, 71, 75, 5, -86, 116, -71, 123, -124, 29, -99, -77]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccd130c365c-7e77-4574-a754-df89a8df6d24, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 18:19:12.266[0;39m [32m INFO [,8b60838257b3dd9a,0c5b6d794acedcbf,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 18:19:12.273[0;39m [32m INFO [,8b60838257b3dd9a,0c5b6d794acedcbf,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccd130c365c-7e77-4574-a754-df89a8df6d24
[2m2024-06-26 18:19:25.884[0;39m [32m INFO [,881b9c7d1e13a1fd,8a0fb39329202798,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 665, CreateTime = 1719400742278, serialized key size = 58, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 48, 97, 51, 100, 57, 97, 54, 45, 53, 56, 97, 49, 45, 52, 52, 98, 97, 45, 97, 55, 99, 50, 45, 49, 51, 57, 52, 53, 48, 57, 100, 98, 53, 101, 97]), RecordHeader(key = kafka_correlationId, value = [-10, 33, 104, -16, -101, -46, 78, 46, -103, -95, 38, -28, 42, 74, -75, 84]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationscan_cccdea66e949-1eaa-40fc-bb20-265c5a58b403, value = {"customerNo":"null","username":"scan_cccd"})
[2m2024-06-26 18:19:25.885[0;39m [32m INFO [,881b9c7d1e13a1fd,8a0fb39329202798,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=null, username=scan_cccd)
[2m2024-06-26 18:19:25.894[0;39m [32m INFO [,881b9c7d1e13a1fd,8a0fb39329202798,true][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"scan_cccd","appId":"984999489","customerNo":"null","whiteListIp":null,"branchCode":null,"secretKey":"wT5JrJ66iUWehFAAMBME3dtmdMAw/i7S/tlihIbUj6o="} by key ---->Authorizationscan_cccdea66e949-1eaa-40fc-bb20-265c5a58b403
[2m2024-06-26 18:21:28.444[0;39m [32m INFO [,750ec9c83152cb750691371a51af750c,1f2284a0a3e87c39,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 692, CreateTime = 1719400864845, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 98, 54, 57, 48, 57, 101, 53, 45, 50, 98, 100, 53, 45, 52, 101, 57, 55, 45, 97, 98, 55, 100, 45, 48, 50, 51, 98, 100, 53, 55, 99, 101, 48, 99, 98]), RecordHeader(key = kafka_correlationId, value = [-29, -40, 22, 83, 88, 89, 69, 0, -75, -93, -92, 53, 108, -71, 44, 114]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24743de80b-7bf5-4f06-93c3-a5b1170270dc, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:21:28.446[0;39m [32m INFO [,750ec9c83152cb750691371a51af750c,1f2284a0a3e87c39,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:21:28.462[0;39m [32m INFO [,750ec9c83152cb750691371a51af750c,1f2284a0a3e87c39,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24743de80b-7bf5-4f06-93c3-a5b1170270dc
[2m2024-06-26 18:26:12.308[0;39m [32m INFO [,de3ca1bd11ed8baad0e74028f2a273af,bf5b09cfeaf39d17,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 662, CreateTime = 1719401148701, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [99, 50, 54, 97, 99, 52, 56, 52, 45, 54, 98, 51, 98, 45, 52, 55, 99, 55, 45, 97, 53, 98, 57, 45, 102, 50, 100, 101, 53, 97, 97, 55, 57, 99, 101, 52]), RecordHeader(key = kafka_correlationId, value = [-26, 76, -79, -2, -89, 13, 72, 57, -125, 26, -11, 83, -113, 52, 95, -86]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24cac9a0ce-6917-49f3-846c-31727b0ba471, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:26:12.311[0;39m [32m INFO [,de3ca1bd11ed8baad0e74028f2a273af,bf5b09cfeaf39d17,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:26:12.320[0;39m [32m INFO [,de3ca1bd11ed8baad0e74028f2a273af,bf5b09cfeaf39d17,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24cac9a0ce-6917-49f3-846c-31727b0ba471
[2m2024-06-26 18:27:36.859[0;39m [32m INFO [,49bc54cc38e7c2181f485409f5708321,e47e974fe5110839,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 7, leaderEpoch = 0, offset = 704, CreateTime = 1719401233254, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 49, 49, 97, 54, 52, 101, 100, 45, 100, 50, 55, 102, 45, 52, 97, 57, 56, 45, 56, 99, 100, 51, 45, 54, 48, 49, 50, 52, 102, 98, 53, 53, 57, 97, 52]), RecordHeader(key = kafka_correlationId, value = [115, -77, 120, 4, -47, 54, 74, 47, -98, 64, -11, 68, 21, 9, -7, 79]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24593ff014-c574-4766-bbc0-f8be24b1ca21, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:27:36.862[0;39m [32m INFO [,49bc54cc38e7c2181f485409f5708321,e47e974fe5110839,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:27:36.870[0;39m [32m INFO [,49bc54cc38e7c2181f485409f5708321,e47e974fe5110839,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-10-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24593ff014-c574-4766-bbc0-f8be24b1ca21
[2m2024-06-26 18:29:17.958[0;39m [32m INFO [,91eaf3068e18fd3feac7485b119064d1,1f711a78557e4d52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 13, leaderEpoch = 0, offset = 699, CreateTime = 1719401334352, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [51, 56, 101, 50, 56, 102, 53, 101, 45, 54, 51, 55, 100, 45, 52, 97, 97, 50, 45, 57, 50, 49, 98, 45, 48, 97, 56, 57, 102, 49, 51, 53, 52, 52, 54, 48]), RecordHeader(key = kafka_correlationId, value = [-21, 32, 106, 77, -77, -6, 69, -118, -83, -105, 70, -111, 58, 90, -2, -123]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv244ce21ecf-0ffd-4336-8873-cc29eb096294, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-26 18:29:17.960[0;39m [32m INFO [,91eaf3068e18fd3feac7485b119064d1,1f711a78557e4d52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-26 18:29:17.966[0;39m [32m INFO [,91eaf3068e18fd3feac7485b119064d1,1f711a78557e4d52,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-12-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv244ce21ecf-0ffd-4336-8873-cc29eb096294
[2m2024-06-26 18:30:52.471[0;39m [32m INFO [,b31321cf33822d42062600bda4a2f71e,e564cf489ef06773,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 666, CreateTime = 1719401428863, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [55, 56, 97, 98, 100, 100, 50, 54, 45, 102, 102, 53, 100, 45, 52, 98, 99, 51, 45, 97, 98, 57, 98, 45, 50, 54, 56, 100, 102, 54, 48, 48, 53, 100, 57, 101]), RecordHeader(key = kafka_correlationId, value = [-113, -107, 34, -77, 71, 84, 79, -20, -78, 37, 40, 82, -40, -116, -69, 120]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24ec5dc375-6e41-412a-8297-cd8885ac268d, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:30:52.474[0;39m [32m INFO [,b31321cf33822d42062600bda4a2f71e,e564cf489ef06773,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:30:52.481[0;39m [32m INFO [,b31321cf33822d42062600bda4a2f71e,e564cf489ef06773,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24ec5dc375-6e41-412a-8297-cd8885ac268d
[2m2024-06-26 18:31:23.077[0;39m [32m INFO [,8dcde9844338ff5b7b1c23b5d77b9f88,f4e6413e9275dd92,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 24, leaderEpoch = 0, offset = 682, CreateTime = 1719401459470, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [49, 97, 99, 99, 48, 56, 50, 56, 45, 99, 54, 54, 98, 45, 52, 51, 48, 100, 45, 97, 51, 57, 99, 45, 51, 100, 97, 100, 102, 99, 55, 97, 48, 100, 97, 56]), RecordHeader(key = kafka_correlationId, value = [-46, -58, 21, 98, 7, -3, 78, -59, -88, 82, 48, 94, 54, 18, 122, -50]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2498206573-be0a-4af3-b5dd-1d50e0af6489, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:31:23.078[0;39m [32m INFO [,8dcde9844338ff5b7b1c23b5d77b9f88,f4e6413e9275dd92,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:31:23.086[0;39m [32m INFO [,8dcde9844338ff5b7b1c23b5d77b9f88,f4e6413e9275dd92,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-16-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2498206573-be0a-4af3-b5dd-1d50e0af6489
[2m2024-06-26 18:32:26.160[0;39m [32m INFO [,c063a1997f25c5dc83885e53556090f3,7f8059f546147fb9,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 16, leaderEpoch = 0, offset = 663, CreateTime = 1719401522550, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [50, 101, 97, 56, 53, 100, 53, 98, 45, 100, 100, 52, 98, 45, 52, 55, 99, 100, 45, 97, 50, 56, 102, 45, 101, 51, 51, 48, 53, 53, 55, 52, 48, 101, 57, 55]), RecordHeader(key = kafka_correlationId, value = [113, 115, 82, 41, 85, 34, 69, 93, -102, -4, -18, 6, 98, 75, 13, 7]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv24030d73ca-0f4e-4e3b-948e-734a880507c2, value = {"customerNo":"203122117","username":"lv24"})
[2m2024-06-26 18:32:26.163[0;39m [32m INFO [,c063a1997f25c5dc83885e53556090f3,7f8059f546147fb9,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203122117, username=lv24)
[2m2024-06-26 18:32:26.174[0;39m [32m INFO [,c063a1997f25c5dc83885e53556090f3,7f8059f546147fb9,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-13-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203122117","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv24030d73ca-0f4e-4e3b-948e-734a880507c2
[2m2024-06-26 18:32:53.678[0;39m [32m INFO [,d3365d323fe4c035a7bdbeda1c948f32,dc949a4f85d5318f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 20, leaderEpoch = 0, offset = 693, CreateTime = 1719401550065, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [56, 102, 50, 55, 48, 102, 54, 48, 45, 101, 97, 57, 101, 45, 52, 50, 52, 53, 45, 97, 98, 48, 57, 45, 52, 54, 49, 53, 55, 98, 101, 52, 50, 53, 53, 100]), RecordHeader(key = kafka_correlationId, value = [-11, -110, 121, -64, -127, -9, 66, 8, -126, 41, -92, 18, -51, -110, 3, 19]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2473fb85e9-b32a-4655-a997-554185f40756, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-26 18:32:53.682[0;39m [32m INFO [,d3365d323fe4c035a7bdbeda1c948f32,dc949a4f85d5318f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-26 18:32:53.690[0;39m [32m INFO [,d3365d323fe4c035a7bdbeda1c948f32,dc949a4f85d5318f,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-14-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2473fb85e9-b32a-4655-a997-554185f40756
[2m2024-06-26 18:34:01.456[0;39m [32m INFO [,23e89d81fdde1f5335e1fced01325c1c,92505422259ff633,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 29  [2m:[0;39m redConsumer : red message message ----> ConsumerRecord(topic = check_token_send, partition = 10, leaderEpoch = 0, offset = 667, CreateTime = 1719401617845, serialized key size = 53, serialized value size = 44, headers = RecordHeaders(headers = [RecordHeader(key = kafka_replyTopic, value = [99, 104, 101, 99, 107, 95, 116, 111, 107, 101, 110, 95, 114, 101, 97, 100, 108, 121]), RecordHeader(key = kafka_correlationId, value = [52, 98, 53, 99, 50, 97, 53, 57, 45, 100, 55, 52, 97, 45, 52, 51, 48, 57, 45, 57, 56, 97, 55, 45, 56, 98, 54, 54, 53, 52, 100, 48, 50, 48, 99, 48]), RecordHeader(key = kafka_correlationId, value = [75, -37, 36, 49, 96, 60, 79, 34, -85, 31, -2, -93, -7, 106, 24, -5]), RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 108, 112, 98, 46, 109, 105, 100, 46, 100, 116, 111, 46, 83, 101, 110, 100, 75, 97, 102, 107, 97, 68, 116, 111])], isReadOnly = false), key = Authorizationlv2482a49315-1236-4bac-b15f-f0d94cf2eb0c, value = {"customerNo":"203020321","username":"lv24"})
[2m2024-06-26 18:34:01.461[0;39m [32m INFO [,23e89d81fdde1f5335e1fced01325c1c,92505422259ff633,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 34  [2m:[0;39m ConsumerRecord : request read kafka ----->SendKafkaDto(customerNo=203020321, username=lv24)
[2m2024-06-26 18:34:01.470[0;39m [32m INFO [,23e89d81fdde1f5335e1fced01325c1c,92505422259ff633,false][0;39m [35m15240[0;39m [2m---[0;39m [2m[tainer#0-11-C-1][0;39m [36mcom.lpb.mid.service.KafkaConsumer       [0;39m 37  [2m:[0;39m redConsumerAcc : response ---> {"jti":null,"roles":null,"userName":"lv24","appId":"689898989","customerNo":"203020321","whiteListIp":null,"branchCode":null,"secretKey":"52TMEesWl5jiot2DWW0V6yY+SR2WFf9KyO1CEBHW8oY="} by key ---->Authorizationlv2482a49315-1236-4bac-b15f-f0d94cf2eb0c
